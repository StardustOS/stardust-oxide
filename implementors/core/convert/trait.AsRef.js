(function() {var implementors = {};
implementors["smoltcp"] = [{"text":"impl&lt;T:&nbsp;AsRef&lt;[u8]&gt;&gt; AsRef&lt;[u8]&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.ArpPacket.html\" title=\"struct smoltcp::wire::ArpPacket\">Packet</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::arp::Packet"]},{"text":"impl&lt;T:&nbsp;AsRef&lt;[u8]&gt;&gt; AsRef&lt;[u8]&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.EthernetFrame.html\" title=\"struct smoltcp::wire::EthernetFrame\">Frame</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::ethernet::Frame"]},{"text":"impl&lt;T:&nbsp;AsRef&lt;[u8]&gt;&gt; AsRef&lt;[u8]&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.Icmpv4Packet.html\" title=\"struct smoltcp::wire::Icmpv4Packet\">Packet</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::icmpv4::Packet"]},{"text":"impl&lt;T:&nbsp;AsRef&lt;[u8]&gt;&gt; AsRef&lt;[u8]&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.Icmpv6Packet.html\" title=\"struct smoltcp::wire::Icmpv6Packet\">Packet</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::icmpv6::Packet"]},{"text":"impl&lt;T:&nbsp;AsRef&lt;[u8]&gt;&gt; AsRef&lt;[u8]&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv4Packet.html\" title=\"struct smoltcp::wire::Ipv4Packet\">Packet</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::ipv4::Packet"]},{"text":"impl&lt;T:&nbsp;AsRef&lt;[u8]&gt;&gt; AsRef&lt;[u8]&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6Packet.html\" title=\"struct smoltcp::wire::Ipv6Packet\">Packet</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::ipv6::Packet"]},{"text":"impl&lt;T:&nbsp;AsRef&lt;[u8]&gt;&gt; AsRef&lt;[u8]&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.TcpPacket.html\" title=\"struct smoltcp::wire::TcpPacket\">Packet</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::tcp::Packet"]},{"text":"impl&lt;T:&nbsp;AsRef&lt;[u8]&gt;&gt; AsRef&lt;[u8]&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.UdpPacket.html\" title=\"struct smoltcp::wire::UdpPacket\">Packet</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::udp::Packet"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()