(function() {var implementors = {};
implementors["hashbrown"] = [{"text":"impl&lt;K, V, A, const N:&nbsp;usize&gt; From&lt;[(K, V); N]&gt; for <a class=\"struct\" href=\"hashbrown/hash_map/struct.HashMap.html\" title=\"struct hashbrown::hash_map::HashMap\">HashMap</a>&lt;K, V, <a class=\"type\" href=\"hashbrown/hash_map/type.DefaultHashBuilder.html\" title=\"type hashbrown::hash_map::DefaultHashBuilder\">DefaultHashBuilder</a>, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Eq + Hash,<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Default + Allocator + Clone,&nbsp;</span>","synthetic":false,"types":["hashbrown::map::HashMap"]},{"text":"impl&lt;T, S, A&gt; From&lt;<a class=\"struct\" href=\"hashbrown/hash_map/struct.HashMap.html\" title=\"struct hashbrown::hash_map::HashMap\">HashMap</a>&lt;T, (), S, A&gt;&gt; for <a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Allocator + Clone,&nbsp;</span>","synthetic":false,"types":["hashbrown::set::HashSet"]},{"text":"impl&lt;T, A, const N:&nbsp;usize&gt; From&lt;[T; N]&gt; for <a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, <a class=\"type\" href=\"hashbrown/hash_map/type.DefaultHashBuilder.html\" title=\"type hashbrown::hash_map::DefaultHashBuilder\">DefaultHashBuilder</a>, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Eq + Hash,<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Default + Allocator + Clone,&nbsp;</span>","synthetic":false,"types":["hashbrown::set::HashSet"]}];
implementors["lock_api"] = [{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"lock_api/trait.RawMutex.html\" title=\"trait lock_api::RawMutex\">RawMutex</a>, T&gt; From&lt;T&gt; for <a class=\"struct\" href=\"lock_api/struct.Mutex.html\" title=\"struct lock_api::Mutex\">Mutex</a>&lt;R, T&gt;","synthetic":false,"types":["lock_api::mutex::Mutex"]},{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"lock_api/trait.RawMutex.html\" title=\"trait lock_api::RawMutex\">RawMutex</a>, G:&nbsp;<a class=\"trait\" href=\"lock_api/trait.GetThreadId.html\" title=\"trait lock_api::GetThreadId\">GetThreadId</a>, T&gt; From&lt;T&gt; for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutex.html\" title=\"struct lock_api::ReentrantMutex\">ReentrantMutex</a>&lt;R, G, T&gt;","synthetic":false,"types":["lock_api::remutex::ReentrantMutex"]},{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"lock_api/trait.RawRwLock.html\" title=\"trait lock_api::RawRwLock\">RawRwLock</a>, T&gt; From&lt;T&gt; for <a class=\"struct\" href=\"lock_api/struct.RwLock.html\" title=\"struct lock_api::RwLock\">RwLock</a>&lt;R, T&gt;","synthetic":false,"types":["lock_api::rwlock::RwLock"]}];
implementors["managed"] = [{"text":"impl&lt;'a, T:&nbsp;'a + ?Sized&gt; From&lt;&amp;'a mut T&gt; for <a class=\"enum\" href=\"managed/enum.Managed.html\" title=\"enum managed::Managed\">Managed</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::object::Managed"]},{"text":"impl&lt;'a, T:&nbsp;?Sized + 'a&gt; From&lt;Box&lt;T, Global&gt;&gt; for <a class=\"enum\" href=\"managed/enum.Managed.html\" title=\"enum managed::Managed\">Managed</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::object::Managed"]},{"text":"impl&lt;'a, T:&nbsp;'a&gt; From&lt;Vec&lt;T, Global&gt;&gt; for <a class=\"enum\" href=\"managed/enum.Managed.html\" title=\"enum managed::Managed\">Managed</a>&lt;'a, [T]&gt;","synthetic":false,"types":["managed::object::Managed"]},{"text":"impl&lt;'a, T:&nbsp;'a&gt; From&lt;&amp;'a mut [T]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 0]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 1]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 2]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 3]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 4]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 5]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 6]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 7]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 8]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 9]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 10]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 11]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 12]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 13]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 14]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 15]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 16]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 17]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 18]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 19]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 20]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 21]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 22]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 23]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 24]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 25]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 26]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 27]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 28]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 29]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 30]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 31]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, T:&nbsp;'a&gt; From&lt;Vec&lt;T, Global&gt;&gt; for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl&lt;'a, K:&nbsp;'a, V:&nbsp;'a&gt; From&lt;&amp;'a mut [Option&lt;(K, V)&gt;]&gt; for <a class=\"enum\" href=\"managed/enum.ManagedMap.html\" title=\"enum managed::ManagedMap\">ManagedMap</a>&lt;'a, K, V&gt;","synthetic":false,"types":["managed::map::ManagedMap"]},{"text":"impl&lt;'a, K:&nbsp;'a, V:&nbsp;'a&gt; From&lt;BTreeMap&lt;K, V&gt;&gt; for <a class=\"enum\" href=\"managed/enum.ManagedMap.html\" title=\"enum managed::ManagedMap\">ManagedMap</a>&lt;'a, K, V&gt;","synthetic":false,"types":["managed::map::ManagedMap"]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; From&lt;T&gt; for <a class=\"struct\" href=\"once_cell/unsync/struct.OnceCell.html\" title=\"struct once_cell::unsync::OnceCell\">OnceCell</a>&lt;T&gt;","synthetic":false,"types":["once_cell::unsync::OnceCell"]}];
implementors["smoltcp"] = [{"text":"impl From&lt;u32&gt; for <a class=\"enum\" href=\"smoltcp/phy/enum.PcapLinkType.html\" title=\"enum smoltcp::phy::PcapLinkType\">PcapLinkType</a>","synthetic":false,"types":["smoltcp::phy::pcap_writer::PcapLinkType"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/phy/enum.PcapLinkType.html\" title=\"enum smoltcp::phy::PcapLinkType\">PcapLinkType</a>&gt; for u32","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;'a&gt; From&lt;<a class=\"enum\" href=\"managed/slice/enum.ManagedSlice.html\" title=\"enum managed::slice::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt;&gt; for <a class=\"struct\" href=\"smoltcp/storage/struct.RingBuffer.html\" title=\"struct smoltcp::storage::RingBuffer\">RingBuffer</a>&lt;'a, T&gt;","synthetic":false,"types":["smoltcp::storage::ring_buffer::RingBuffer"]},{"text":"impl From&lt;Duration&gt; for <a class=\"struct\" href=\"smoltcp/time/struct.Duration.html\" title=\"struct smoltcp::time::Duration\">Duration</a>","synthetic":false,"types":["smoltcp::time::Duration"]},{"text":"impl From&lt;<a class=\"struct\" href=\"smoltcp/time/struct.Duration.html\" title=\"struct smoltcp::time::Duration\">Duration</a>&gt; for Duration","synthetic":false,"types":["core::time::Duration"]},{"text":"impl From&lt;u16&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.ArpHardware.html\" title=\"enum smoltcp::wire::ArpHardware\">Hardware</a>","synthetic":false,"types":["smoltcp::wire::arp::Hardware"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.ArpHardware.html\" title=\"enum smoltcp::wire::ArpHardware\">Hardware</a>&gt; for u16","synthetic":false,"types":[]},{"text":"impl From&lt;u16&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.ArpOperation.html\" title=\"enum smoltcp::wire::ArpOperation\">Operation</a>","synthetic":false,"types":["smoltcp::wire::arp::Operation"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.ArpOperation.html\" title=\"enum smoltcp::wire::ArpOperation\">Operation</a>&gt; for u16","synthetic":false,"types":[]},{"text":"impl From&lt;u16&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.EthernetProtocol.html\" title=\"enum smoltcp::wire::EthernetProtocol\">EtherType</a>","synthetic":false,"types":["smoltcp::wire::ethernet::EtherType"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.EthernetProtocol.html\" title=\"enum smoltcp::wire::EthernetProtocol\">EtherType</a>&gt; for u16","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4Repr.html\" title=\"enum smoltcp::wire::Icmpv4Repr\">Repr</a>&lt;'a&gt;&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.IcmpRepr.html\" title=\"enum smoltcp::wire::IcmpRepr\">Repr</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::wire::icmp::Repr"]},{"text":"impl&lt;'a&gt; From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6Repr.html\" title=\"enum smoltcp::wire::Icmpv6Repr\">Repr</a>&lt;'a&gt;&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.IcmpRepr.html\" title=\"enum smoltcp::wire::IcmpRepr\">Repr</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::wire::icmp::Repr"]},{"text":"impl From&lt;u8&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4Message.html\" title=\"enum smoltcp::wire::Icmpv4Message\">Message</a>","synthetic":false,"types":["smoltcp::wire::icmpv4::Message"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4Message.html\" title=\"enum smoltcp::wire::Icmpv4Message\">Message</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4DstUnreachable.html\" title=\"enum smoltcp::wire::Icmpv4DstUnreachable\">DstUnreachable</a>","synthetic":false,"types":["smoltcp::wire::icmpv4::DstUnreachable"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4DstUnreachable.html\" title=\"enum smoltcp::wire::Icmpv4DstUnreachable\">DstUnreachable</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4Redirect.html\" title=\"enum smoltcp::wire::Icmpv4Redirect\">Redirect</a>","synthetic":false,"types":["smoltcp::wire::icmpv4::Redirect"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4Redirect.html\" title=\"enum smoltcp::wire::Icmpv4Redirect\">Redirect</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4TimeExceeded.html\" title=\"enum smoltcp::wire::Icmpv4TimeExceeded\">TimeExceeded</a>","synthetic":false,"types":["smoltcp::wire::icmpv4::TimeExceeded"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4TimeExceeded.html\" title=\"enum smoltcp::wire::Icmpv4TimeExceeded\">TimeExceeded</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4ParamProblem.html\" title=\"enum smoltcp::wire::Icmpv4ParamProblem\">ParamProblem</a>","synthetic":false,"types":["smoltcp::wire::icmpv4::ParamProblem"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4ParamProblem.html\" title=\"enum smoltcp::wire::Icmpv4ParamProblem\">ParamProblem</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6Message.html\" title=\"enum smoltcp::wire::Icmpv6Message\">Message</a>","synthetic":false,"types":["smoltcp::wire::icmpv6::Message"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6Message.html\" title=\"enum smoltcp::wire::Icmpv6Message\">Message</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6DstUnreachable.html\" title=\"enum smoltcp::wire::Icmpv6DstUnreachable\">DstUnreachable</a>","synthetic":false,"types":["smoltcp::wire::icmpv6::DstUnreachable"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6DstUnreachable.html\" title=\"enum smoltcp::wire::Icmpv6DstUnreachable\">DstUnreachable</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6ParamProblem.html\" title=\"enum smoltcp::wire::Icmpv6ParamProblem\">ParamProblem</a>","synthetic":false,"types":["smoltcp::wire::icmpv6::ParamProblem"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6ParamProblem.html\" title=\"enum smoltcp::wire::Icmpv6ParamProblem\">ParamProblem</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6TimeExceeded.html\" title=\"enum smoltcp::wire::Icmpv6TimeExceeded\">TimeExceeded</a>","synthetic":false,"types":["smoltcp::wire::icmpv6::TimeExceeded"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6TimeExceeded.html\" title=\"enum smoltcp::wire::Icmpv6TimeExceeded\">TimeExceeded</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.IpProtocol.html\" title=\"enum smoltcp::wire::IpProtocol\">Protocol</a>","synthetic":false,"types":["smoltcp::wire::ip::Protocol"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.IpProtocol.html\" title=\"enum smoltcp::wire::IpProtocol\">Protocol</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.Ipv4Address.html\" title=\"struct smoltcp::wire::Ipv4Address\">Address</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.IpAddress.html\" title=\"enum smoltcp::wire::IpAddress\">Address</a>","synthetic":false,"types":["smoltcp::wire::ip::Address"]},{"text":"impl From&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6Address.html\" title=\"struct smoltcp::wire::Ipv6Address\">Address</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.IpAddress.html\" title=\"enum smoltcp::wire::IpAddress\">Address</a>","synthetic":false,"types":["smoltcp::wire::ip::Address"]},{"text":"impl From&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.Ipv4Cidr.html\" title=\"struct smoltcp::wire::Ipv4Cidr\">Cidr</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.IpCidr.html\" title=\"enum smoltcp::wire::IpCidr\">Cidr</a>","synthetic":false,"types":["smoltcp::wire::ip::Cidr"]},{"text":"impl From&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6Cidr.html\" title=\"struct smoltcp::wire::Ipv6Cidr\">Cidr</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.IpCidr.html\" title=\"enum smoltcp::wire::IpCidr\">Cidr</a>","synthetic":false,"types":["smoltcp::wire::ip::Cidr"]},{"text":"impl From&lt;u16&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.IpEndpoint.html\" title=\"struct smoltcp::wire::IpEndpoint\">Endpoint</a>","synthetic":false,"types":["smoltcp::wire::ip::Endpoint"]},{"text":"impl&lt;T:&nbsp;Into&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.IpAddress.html\" title=\"enum smoltcp::wire::IpAddress\">Address</a>&gt;&gt; From&lt;(T, u16)&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.IpEndpoint.html\" title=\"struct smoltcp::wire::IpEndpoint\">Endpoint</a>","synthetic":false,"types":["smoltcp::wire::ip::Endpoint"]},{"text":"impl From&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.Ipv4Repr.html\" title=\"struct smoltcp::wire::Ipv4Repr\">Repr</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.IpRepr.html\" title=\"enum smoltcp::wire::IpRepr\">Repr</a>","synthetic":false,"types":["smoltcp::wire::ip::Repr"]},{"text":"impl From&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6Repr.html\" title=\"struct smoltcp::wire::Ipv6Repr\">Repr</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.IpRepr.html\" title=\"enum smoltcp::wire::IpRepr\">Repr</a>","synthetic":false,"types":["smoltcp::wire::ip::Repr"]},{"text":"impl From&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.Ipv4Address.html\" title=\"struct smoltcp::wire::Ipv4Address\">Address</a>&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6Address.html\" title=\"struct smoltcp::wire::Ipv6Address\">Address</a>","synthetic":false,"types":["smoltcp::wire::ipv6::Address"]},{"text":"impl From&lt;u8&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Ipv6OptionType.html\" title=\"enum smoltcp::wire::Ipv6OptionType\">Type</a>","synthetic":false,"types":["smoltcp::wire::ipv6option::Type"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Ipv6OptionType.html\" title=\"enum smoltcp::wire::Ipv6OptionType\">Type</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Ipv6OptionFailureType.html\" title=\"enum smoltcp::wire::Ipv6OptionFailureType\">FailureType</a>","synthetic":false,"types":["smoltcp::wire::ipv6option::FailureType"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Ipv6OptionFailureType.html\" title=\"enum smoltcp::wire::Ipv6OptionFailureType\">FailureType</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Ipv6OptionType.html\" title=\"enum smoltcp::wire::Ipv6OptionType\">Type</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Ipv6OptionFailureType.html\" title=\"enum smoltcp::wire::Ipv6OptionFailureType\">FailureType</a>","synthetic":false,"types":["smoltcp::wire::ipv6option::FailureType"]},{"text":"impl From&lt;u8&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.NdiscOptionType.html\" title=\"enum smoltcp::wire::NdiscOptionType\">Type</a>","synthetic":false,"types":["smoltcp::wire::ndiscoption::Type"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.NdiscOptionType.html\" title=\"enum smoltcp::wire::NdiscOptionType\">Type</a>&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.EthernetAddress.html\" title=\"struct smoltcp::wire::EthernetAddress\">Address</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.HardwareAddress.html\" title=\"enum smoltcp::wire::HardwareAddress\">HardwareAddress</a>","synthetic":false,"types":["smoltcp::wire::HardwareAddress"]},{"text":"impl From&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.EthernetAddress.html\" title=\"struct smoltcp::wire::EthernetAddress\">Address</a>&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.RawHardwareAddress.html\" title=\"struct smoltcp::wire::RawHardwareAddress\">RawHardwareAddress</a>","synthetic":false,"types":["smoltcp::wire::RawHardwareAddress"]},{"text":"impl From&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.HardwareAddress.html\" title=\"enum smoltcp::wire::HardwareAddress\">HardwareAddress</a>&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.RawHardwareAddress.html\" title=\"struct smoltcp::wire::RawHardwareAddress\">RawHardwareAddress</a>","synthetic":false,"types":["smoltcp::wire::RawHardwareAddress"]}];
implementors["spin"] = [{"text":"impl&lt;T, R&gt; From&lt;T&gt; for <a class=\"struct\" href=\"spin/mutex/spin/struct.SpinMutex.html\" title=\"struct spin::mutex::spin::SpinMutex\">SpinMutex</a>&lt;T, R&gt;","synthetic":false,"types":["spin::mutex::spin::SpinMutex"]},{"text":"impl&lt;T, R&gt; From&lt;T&gt; for <a class=\"struct\" href=\"spin/mutex/struct.Mutex.html\" title=\"struct spin::mutex::Mutex\">Mutex</a>&lt;T, R&gt;","synthetic":false,"types":["spin::mutex::Mutex"]},{"text":"impl&lt;T, R&gt; From&lt;T&gt; for <a class=\"struct\" href=\"spin/once/struct.Once.html\" title=\"struct spin::once::Once\">Once</a>&lt;T, R&gt;","synthetic":false,"types":["spin::once::Once"]},{"text":"impl&lt;T, R&gt; From&lt;T&gt; for <a class=\"struct\" href=\"spin/rwlock/struct.RwLock.html\" title=\"struct spin::rwlock::RwLock\">RwLock</a>&lt;T, R&gt;","synthetic":false,"types":["spin::rwlock::RwLock"]}];
implementors["xen"] = [{"text":"impl From&lt;<a class=\"enum\" href=\"xen/hypercall/enum.Error.html\" title=\"enum xen::hypercall::Error\">Error</a>&gt; for <a class=\"enum\" href=\"xen/grant_table/enum.Error.html\" title=\"enum xen::grant_table::Error\">Error</a>","synthetic":false,"types":["xen::grant_table::error::Error"]},{"text":"impl From&lt;<a class=\"enum\" href=\"xen/grant_table/enum.GrantStatusError.html\" title=\"enum xen::grant_table::GrantStatusError\">GrantStatusError</a>&gt; for <a class=\"enum\" href=\"xen/grant_table/enum.Error.html\" title=\"enum xen::grant_table::Error\">Error</a>","synthetic":false,"types":["xen::grant_table::error::Error"]},{"text":"impl From&lt;i16&gt; for <a class=\"enum\" href=\"xen/grant_table/enum.GrantStatusError.html\" title=\"enum xen::grant_table::GrantStatusError\">GrantStatusError</a>","synthetic":false,"types":["xen::grant_table::error::GrantStatusError"]},{"text":"impl From&lt;i64&gt; for <a class=\"enum\" href=\"xen/hypercall/enum.Error.html\" title=\"enum xen::hypercall::Error\">Error</a>","synthetic":false,"types":["xen::hypercall::Error"]},{"text":"impl From&lt;<a class=\"struct\" href=\"xen/memory/struct.MachineFrameNumber.html\" title=\"struct xen::memory::MachineFrameNumber\">MachineFrameNumber</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.PageFrameNumber.html\" title=\"struct xen::memory::PageFrameNumber\">PageFrameNumber</a>","synthetic":false,"types":["xen::memory::wrappers::PageFrameNumber"]},{"text":"impl From&lt;<a class=\"struct\" href=\"xen/memory/struct.VirtualAddress.html\" title=\"struct xen::memory::VirtualAddress\">VirtualAddress</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.PageFrameNumber.html\" title=\"struct xen::memory::PageFrameNumber\">PageFrameNumber</a>","synthetic":false,"types":["xen::memory::wrappers::PageFrameNumber"]},{"text":"impl From&lt;<a class=\"struct\" href=\"xen/memory/struct.PageFrameNumber.html\" title=\"struct xen::memory::PageFrameNumber\">PageFrameNumber</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.MachineFrameNumber.html\" title=\"struct xen::memory::MachineFrameNumber\">MachineFrameNumber</a>","synthetic":false,"types":["xen::memory::wrappers::MachineFrameNumber"]},{"text":"impl From&lt;<a class=\"struct\" href=\"xen/memory/struct.VirtualAddress.html\" title=\"struct xen::memory::VirtualAddress\">VirtualAddress</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.MachineFrameNumber.html\" title=\"struct xen::memory::MachineFrameNumber\">MachineFrameNumber</a>","synthetic":false,"types":["xen::memory::wrappers::MachineFrameNumber"]},{"text":"impl From&lt;<a class=\"struct\" href=\"xen/memory/struct.PageEntry.html\" title=\"struct xen::memory::PageEntry\">PageEntry</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.MachineFrameNumber.html\" title=\"struct xen::memory::MachineFrameNumber\">MachineFrameNumber</a>","synthetic":false,"types":["xen::memory::wrappers::MachineFrameNumber"]},{"text":"impl From&lt;<a class=\"struct\" href=\"xen/memory/struct.PhysicalAddress.html\" title=\"struct xen::memory::PhysicalAddress\">PhysicalAddress</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.VirtualAddress.html\" title=\"struct xen::memory::VirtualAddress\">VirtualAddress</a>","synthetic":false,"types":["xen::memory::wrappers::VirtualAddress"]},{"text":"impl From&lt;<a class=\"struct\" href=\"xen/memory/struct.MachineAddress.html\" title=\"struct xen::memory::MachineAddress\">MachineAddress</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.VirtualAddress.html\" title=\"struct xen::memory::VirtualAddress\">VirtualAddress</a>","synthetic":false,"types":["xen::memory::wrappers::VirtualAddress"]},{"text":"impl From&lt;<a class=\"struct\" href=\"xen/memory/struct.MachineFrameNumber.html\" title=\"struct xen::memory::MachineFrameNumber\">MachineFrameNumber</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.VirtualAddress.html\" title=\"struct xen::memory::VirtualAddress\">VirtualAddress</a>","synthetic":false,"types":["xen::memory::wrappers::VirtualAddress"]},{"text":"impl From&lt;<a class=\"struct\" href=\"xen/memory/struct.PageFrameNumber.html\" title=\"struct xen::memory::PageFrameNumber\">PageFrameNumber</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.VirtualAddress.html\" title=\"struct xen::memory::VirtualAddress\">VirtualAddress</a>","synthetic":false,"types":["xen::memory::wrappers::VirtualAddress"]},{"text":"impl From&lt;<a class=\"struct\" href=\"xen/memory/struct.PageEntry.html\" title=\"struct xen::memory::PageEntry\">PageEntry</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.VirtualAddress.html\" title=\"struct xen::memory::VirtualAddress\">VirtualAddress</a>","synthetic":false,"types":["xen::memory::wrappers::VirtualAddress"]},{"text":"impl From&lt;<a class=\"struct\" href=\"xen/memory/struct.VirtualAddress.html\" title=\"struct xen::memory::VirtualAddress\">VirtualAddress</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.PhysicalAddress.html\" title=\"struct xen::memory::PhysicalAddress\">PhysicalAddress</a>","synthetic":false,"types":["xen::memory::wrappers::PhysicalAddress"]},{"text":"impl From&lt;<a class=\"struct\" href=\"xen/memory/struct.MachineAddress.html\" title=\"struct xen::memory::MachineAddress\">MachineAddress</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.PhysicalAddress.html\" title=\"struct xen::memory::PhysicalAddress\">PhysicalAddress</a>","synthetic":false,"types":["xen::memory::wrappers::PhysicalAddress"]},{"text":"impl From&lt;<a class=\"struct\" href=\"xen/memory/struct.PhysicalAddress.html\" title=\"struct xen::memory::PhysicalAddress\">PhysicalAddress</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.MachineAddress.html\" title=\"struct xen::memory::MachineAddress\">MachineAddress</a>","synthetic":false,"types":["xen::memory::wrappers::MachineAddress"]},{"text":"impl From&lt;<a class=\"struct\" href=\"xen/memory/struct.VirtualAddress.html\" title=\"struct xen::memory::VirtualAddress\">VirtualAddress</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.MachineAddress.html\" title=\"struct xen::memory::MachineAddress\">MachineAddress</a>","synthetic":false,"types":["xen::memory::wrappers::MachineAddress"]},{"text":"impl From&lt;u32&gt; for <a class=\"enum\" href=\"xen/xenbus/enum.State.html\" title=\"enum xen::xenbus::State\">State</a>","synthetic":false,"types":["xen::xenbus::State"]},{"text":"impl From&lt;<a class=\"enum\" href=\"xen/xenbus/enum.State.html\" title=\"enum xen::xenbus::State\">State</a>&gt; for <a class=\"type\" href=\"xen_sys/type.xenbus_state.html\" title=\"type xen_sys::xenbus_state\">XenbusState</a>","synthetic":false,"types":["xen_sys::xenbus_state"]},{"text":"impl From&lt;u32&gt; for <a class=\"enum\" href=\"xen/xenbus/enum.MessageKind.html\" title=\"enum xen::xenbus::MessageKind\">MessageKind</a>","synthetic":false,"types":["xen::xenbus::MessageKind"]},{"text":"impl From&lt;<a class=\"enum\" href=\"xen/xenbus/enum.MessageKind.html\" title=\"enum xen::xenbus::MessageKind\">MessageKind</a>&gt; for u32","synthetic":false,"types":[]},{"text":"impl From&lt;<a class=\"struct\" href=\"xen_sys/struct.xsd_sockmsg.html\" title=\"struct xen_sys::xsd_sockmsg\">xsd_sockmsg</a>&gt; for <a class=\"struct\" href=\"xen/xenbus/struct.MessageHeader.html\" title=\"struct xen::xenbus::MessageHeader\">MessageHeader</a>","synthetic":false,"types":["xen::xenbus::MessageHeader"]},{"text":"impl From&lt;<a class=\"struct\" href=\"xen/xenbus/struct.MessageHeader.html\" title=\"struct xen::xenbus::MessageHeader\">MessageHeader</a>&gt; for <a class=\"struct\" href=\"xen_sys/struct.xsd_sockmsg.html\" title=\"struct xen_sys::xsd_sockmsg\">xsd_sockmsg</a>","synthetic":false,"types":["xen_sys::xsd_sockmsg"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()