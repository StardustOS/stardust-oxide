(function() {var implementors = {};
implementors["byteorder"] = [{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>&gt; for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>","synthetic":false,"types":["byteorder::BigEndian"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"byteorder/enum.LittleEndian.html\" title=\"enum byteorder::LittleEndian\">LittleEndian</a>&gt; for <a class=\"enum\" href=\"byteorder/enum.LittleEndian.html\" title=\"enum byteorder::LittleEndian\">LittleEndian</a>","synthetic":false,"types":["byteorder::LittleEndian"]}];
implementors["log"] = [{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>&gt; for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>","synthetic":false,"types":["log::Level"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>&gt; for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>","synthetic":false,"types":["log::Level"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>&gt; for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>","synthetic":false,"types":["log::LevelFilter"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>&gt; for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>","synthetic":false,"types":["log::LevelFilter"]},{"text":"impl&lt;'a&gt; PartialOrd&lt;<a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;&gt; for <a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;","synthetic":false,"types":["log::Metadata"]},{"text":"impl&lt;'a&gt; PartialOrd&lt;<a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;&gt; for <a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;","synthetic":false,"types":["log::MetadataBuilder"]}];
implementors["smoltcp"] = [{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"smoltcp/iface/struct.SocketHandle.html\" title=\"struct smoltcp::iface::SocketHandle\">SocketHandle</a>&gt; for <a class=\"struct\" href=\"smoltcp/iface/struct.SocketHandle.html\" title=\"struct smoltcp::iface::SocketHandle\">SocketHandle</a>","synthetic":false,"types":["smoltcp::iface::socket_set::SocketHandle"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/phy/enum.PcapLinkType.html\" title=\"enum smoltcp::phy::PcapLinkType\">PcapLinkType</a>&gt; for <a class=\"enum\" href=\"smoltcp/phy/enum.PcapLinkType.html\" title=\"enum smoltcp::phy::PcapLinkType\">PcapLinkType</a>","synthetic":false,"types":["smoltcp::phy::pcap_writer::PcapLinkType"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"smoltcp/time/struct.Instant.html\" title=\"struct smoltcp::time::Instant\">Instant</a>&gt; for <a class=\"struct\" href=\"smoltcp/time/struct.Instant.html\" title=\"struct smoltcp::time::Instant\">Instant</a>","synthetic":false,"types":["smoltcp::time::Instant"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"smoltcp/time/struct.Duration.html\" title=\"struct smoltcp::time::Duration\">Duration</a>&gt; for <a class=\"struct\" href=\"smoltcp/time/struct.Duration.html\" title=\"struct smoltcp::time::Duration\">Duration</a>","synthetic":false,"types":["smoltcp::time::Duration"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.ArpHardware.html\" title=\"enum smoltcp::wire::ArpHardware\">Hardware</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.ArpHardware.html\" title=\"enum smoltcp::wire::ArpHardware\">Hardware</a>","synthetic":false,"types":["smoltcp::wire::arp::Hardware"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.ArpOperation.html\" title=\"enum smoltcp::wire::ArpOperation\">Operation</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.ArpOperation.html\" title=\"enum smoltcp::wire::ArpOperation\">Operation</a>","synthetic":false,"types":["smoltcp::wire::arp::Operation"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.EthernetProtocol.html\" title=\"enum smoltcp::wire::EthernetProtocol\">EtherType</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.EthernetProtocol.html\" title=\"enum smoltcp::wire::EthernetProtocol\">EtherType</a>","synthetic":false,"types":["smoltcp::wire::ethernet::EtherType"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.EthernetAddress.html\" title=\"struct smoltcp::wire::EthernetAddress\">Address</a>&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.EthernetAddress.html\" title=\"struct smoltcp::wire::EthernetAddress\">Address</a>","synthetic":false,"types":["smoltcp::wire::ethernet::Address"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4Message.html\" title=\"enum smoltcp::wire::Icmpv4Message\">Message</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4Message.html\" title=\"enum smoltcp::wire::Icmpv4Message\">Message</a>","synthetic":false,"types":["smoltcp::wire::icmpv4::Message"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4DstUnreachable.html\" title=\"enum smoltcp::wire::Icmpv4DstUnreachable\">DstUnreachable</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4DstUnreachable.html\" title=\"enum smoltcp::wire::Icmpv4DstUnreachable\">DstUnreachable</a>","synthetic":false,"types":["smoltcp::wire::icmpv4::DstUnreachable"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4Redirect.html\" title=\"enum smoltcp::wire::Icmpv4Redirect\">Redirect</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4Redirect.html\" title=\"enum smoltcp::wire::Icmpv4Redirect\">Redirect</a>","synthetic":false,"types":["smoltcp::wire::icmpv4::Redirect"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4TimeExceeded.html\" title=\"enum smoltcp::wire::Icmpv4TimeExceeded\">TimeExceeded</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4TimeExceeded.html\" title=\"enum smoltcp::wire::Icmpv4TimeExceeded\">TimeExceeded</a>","synthetic":false,"types":["smoltcp::wire::icmpv4::TimeExceeded"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4ParamProblem.html\" title=\"enum smoltcp::wire::Icmpv4ParamProblem\">ParamProblem</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4ParamProblem.html\" title=\"enum smoltcp::wire::Icmpv4ParamProblem\">ParamProblem</a>","synthetic":false,"types":["smoltcp::wire::icmpv4::ParamProblem"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6Message.html\" title=\"enum smoltcp::wire::Icmpv6Message\">Message</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6Message.html\" title=\"enum smoltcp::wire::Icmpv6Message\">Message</a>","synthetic":false,"types":["smoltcp::wire::icmpv6::Message"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6DstUnreachable.html\" title=\"enum smoltcp::wire::Icmpv6DstUnreachable\">DstUnreachable</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6DstUnreachable.html\" title=\"enum smoltcp::wire::Icmpv6DstUnreachable\">DstUnreachable</a>","synthetic":false,"types":["smoltcp::wire::icmpv6::DstUnreachable"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6ParamProblem.html\" title=\"enum smoltcp::wire::Icmpv6ParamProblem\">ParamProblem</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6ParamProblem.html\" title=\"enum smoltcp::wire::Icmpv6ParamProblem\">ParamProblem</a>","synthetic":false,"types":["smoltcp::wire::icmpv6::ParamProblem"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6TimeExceeded.html\" title=\"enum smoltcp::wire::Icmpv6TimeExceeded\">TimeExceeded</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6TimeExceeded.html\" title=\"enum smoltcp::wire::Icmpv6TimeExceeded\">TimeExceeded</a>","synthetic":false,"types":["smoltcp::wire::icmpv6::TimeExceeded"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.IpVersion.html\" title=\"enum smoltcp::wire::IpVersion\">Version</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.IpVersion.html\" title=\"enum smoltcp::wire::IpVersion\">Version</a>","synthetic":false,"types":["smoltcp::wire::ip::Version"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.IpProtocol.html\" title=\"enum smoltcp::wire::IpProtocol\">Protocol</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.IpProtocol.html\" title=\"enum smoltcp::wire::IpProtocol\">Protocol</a>","synthetic":false,"types":["smoltcp::wire::ip::Protocol"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.IpAddress.html\" title=\"enum smoltcp::wire::IpAddress\">Address</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.IpAddress.html\" title=\"enum smoltcp::wire::IpAddress\">Address</a>","synthetic":false,"types":["smoltcp::wire::ip::Address"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.IpCidr.html\" title=\"enum smoltcp::wire::IpCidr\">Cidr</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.IpCidr.html\" title=\"enum smoltcp::wire::IpCidr\">Cidr</a>","synthetic":false,"types":["smoltcp::wire::ip::Cidr"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.IpEndpoint.html\" title=\"struct smoltcp::wire::IpEndpoint\">Endpoint</a>&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.IpEndpoint.html\" title=\"struct smoltcp::wire::IpEndpoint\">Endpoint</a>","synthetic":false,"types":["smoltcp::wire::ip::Endpoint"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.Ipv4Address.html\" title=\"struct smoltcp::wire::Ipv4Address\">Address</a>&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv4Address.html\" title=\"struct smoltcp::wire::Ipv4Address\">Address</a>","synthetic":false,"types":["smoltcp::wire::ipv4::Address"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.Ipv4Cidr.html\" title=\"struct smoltcp::wire::Ipv4Cidr\">Cidr</a>&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv4Cidr.html\" title=\"struct smoltcp::wire::Ipv4Cidr\">Cidr</a>","synthetic":false,"types":["smoltcp::wire::ipv4::Cidr"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6Address.html\" title=\"struct smoltcp::wire::Ipv6Address\">Address</a>&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6Address.html\" title=\"struct smoltcp::wire::Ipv6Address\">Address</a>","synthetic":false,"types":["smoltcp::wire::ipv6::Address"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6Cidr.html\" title=\"struct smoltcp::wire::Ipv6Cidr\">Cidr</a>&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6Cidr.html\" title=\"struct smoltcp::wire::Ipv6Cidr\">Cidr</a>","synthetic":false,"types":["smoltcp::wire::ipv6::Cidr"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Ipv6OptionType.html\" title=\"enum smoltcp::wire::Ipv6OptionType\">Type</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Ipv6OptionType.html\" title=\"enum smoltcp::wire::Ipv6OptionType\">Type</a>","synthetic":false,"types":["smoltcp::wire::ipv6option::Type"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.Ipv6OptionFailureType.html\" title=\"enum smoltcp::wire::Ipv6OptionFailureType\">FailureType</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.Ipv6OptionFailureType.html\" title=\"enum smoltcp::wire::Ipv6OptionFailureType\">FailureType</a>","synthetic":false,"types":["smoltcp::wire::ipv6option::FailureType"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.NdiscRouterFlags.html\" title=\"struct smoltcp::wire::NdiscRouterFlags\">RouterFlags</a>&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.NdiscRouterFlags.html\" title=\"struct smoltcp::wire::NdiscRouterFlags\">RouterFlags</a>","synthetic":false,"types":["smoltcp::wire::ndisc::RouterFlags"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.NdiscNeighborFlags.html\" title=\"struct smoltcp::wire::NdiscNeighborFlags\">NeighborFlags</a>&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.NdiscNeighborFlags.html\" title=\"struct smoltcp::wire::NdiscNeighborFlags\">NeighborFlags</a>","synthetic":false,"types":["smoltcp::wire::ndisc::NeighborFlags"]},{"text":"impl PartialOrd&lt;<a class=\"enum\" href=\"smoltcp/wire/enum.NdiscOptionType.html\" title=\"enum smoltcp::wire::NdiscOptionType\">Type</a>&gt; for <a class=\"enum\" href=\"smoltcp/wire/enum.NdiscOptionType.html\" title=\"enum smoltcp::wire::NdiscOptionType\">Type</a>","synthetic":false,"types":["smoltcp::wire::ndiscoption::Type"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.NdiscPrefixInfoFlags.html\" title=\"struct smoltcp::wire::NdiscPrefixInfoFlags\">PrefixInfoFlags</a>&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.NdiscPrefixInfoFlags.html\" title=\"struct smoltcp::wire::NdiscPrefixInfoFlags\">PrefixInfoFlags</a>","synthetic":false,"types":["smoltcp::wire::ndiscoption::PrefixInfoFlags"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"smoltcp/wire/struct.TcpSeqNumber.html\" title=\"struct smoltcp::wire::TcpSeqNumber\">SeqNumber</a>&gt; for <a class=\"struct\" href=\"smoltcp/wire/struct.TcpSeqNumber.html\" title=\"struct smoltcp::wire::TcpSeqNumber\">SeqNumber</a>","synthetic":false,"types":["smoltcp::wire::tcp::SeqNumber"]}];
implementors["xen"] = [{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"xen/memory/struct.PageEntry.html\" title=\"struct xen::memory::PageEntry\">PageEntry</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.PageEntry.html\" title=\"struct xen::memory::PageEntry\">PageEntry</a>","synthetic":false,"types":["xen::memory::wrappers::PageEntry"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"xen/memory/struct.PageFrameNumber.html\" title=\"struct xen::memory::PageFrameNumber\">PageFrameNumber</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.PageFrameNumber.html\" title=\"struct xen::memory::PageFrameNumber\">PageFrameNumber</a>","synthetic":false,"types":["xen::memory::wrappers::PageFrameNumber"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"xen/memory/struct.MachineFrameNumber.html\" title=\"struct xen::memory::MachineFrameNumber\">MachineFrameNumber</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.MachineFrameNumber.html\" title=\"struct xen::memory::MachineFrameNumber\">MachineFrameNumber</a>","synthetic":false,"types":["xen::memory::wrappers::MachineFrameNumber"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"xen/memory/struct.VirtualAddress.html\" title=\"struct xen::memory::VirtualAddress\">VirtualAddress</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.VirtualAddress.html\" title=\"struct xen::memory::VirtualAddress\">VirtualAddress</a>","synthetic":false,"types":["xen::memory::wrappers::VirtualAddress"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"xen/memory/struct.PhysicalAddress.html\" title=\"struct xen::memory::PhysicalAddress\">PhysicalAddress</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.PhysicalAddress.html\" title=\"struct xen::memory::PhysicalAddress\">PhysicalAddress</a>","synthetic":false,"types":["xen::memory::wrappers::PhysicalAddress"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"xen/memory/struct.MachineAddress.html\" title=\"struct xen::memory::MachineAddress\">MachineAddress</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.MachineAddress.html\" title=\"struct xen::memory::MachineAddress\">MachineAddress</a>","synthetic":false,"types":["xen::memory::wrappers::MachineAddress"]},{"text":"impl PartialOrd&lt;<a class=\"struct\" href=\"xen/memory/struct.TLBFlushFlags.html\" title=\"struct xen::memory::TLBFlushFlags\">TLBFlushFlags</a>&gt; for <a class=\"struct\" href=\"xen/memory/struct.TLBFlushFlags.html\" title=\"struct xen::memory::TLBFlushFlags\">TLBFlushFlags</a>","synthetic":false,"types":["xen::memory::TLBFlushFlags"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()