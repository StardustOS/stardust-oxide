(function() {var implementors = {};
implementors["ahash"] = [{"text":"impl Debug for <a class=\"struct\" href=\"ahash/struct.AHasher.html\" title=\"struct ahash::AHasher\">AHasher</a>","synthetic":false,"types":["ahash::fallback_hash::AHasher"]},{"text":"impl Debug for <a class=\"struct\" href=\"ahash/struct.RandomState.html\" title=\"struct ahash::RandomState\">RandomState</a>","synthetic":false,"types":["ahash::random_state::RandomState"]}];
implementors["buddy_system_allocator"] = [{"text":"impl Debug for <a class=\"struct\" href=\"buddy_system_allocator/linked_list/struct.LinkedList.html\" title=\"struct buddy_system_allocator::linked_list::LinkedList\">LinkedList</a>","synthetic":false,"types":["buddy_system_allocator::linked_list::LinkedList"]},{"text":"impl&lt;const ORDER:&nbsp;usize&gt; Debug for <a class=\"struct\" href=\"buddy_system_allocator/struct.Heap.html\" title=\"struct buddy_system_allocator::Heap\">Heap</a>&lt;ORDER&gt;","synthetic":false,"types":["buddy_system_allocator::Heap"]}];
implementors["byteorder"] = [{"text":"impl Debug for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>","synthetic":false,"types":["byteorder::BigEndian"]},{"text":"impl Debug for <a class=\"enum\" href=\"byteorder/enum.LittleEndian.html\" title=\"enum byteorder::LittleEndian\">LittleEndian</a>","synthetic":false,"types":["byteorder::LittleEndian"]}];
implementors["hashbrown"] = [{"text":"impl&lt;K, V, S, A&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.HashMap.html\" title=\"struct hashbrown::hash_map::HashMap\">HashMap</a>&lt;K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Debug,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Debug,<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Allocator + Clone,&nbsp;</span>","synthetic":false,"types":["hashbrown::map::HashMap"]},{"text":"impl&lt;K:&nbsp;Debug, V:&nbsp;Debug&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Iter.html\" title=\"struct hashbrown::hash_map::Iter\">Iter</a>&lt;'_, K, V&gt;","synthetic":false,"types":["hashbrown::map::Iter"]},{"text":"impl&lt;K:&nbsp;Debug, V:&nbsp;Debug, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoKeys.html\" title=\"struct hashbrown::hash_map::IntoKeys\">IntoKeys</a>&lt;K, V, A&gt;","synthetic":false,"types":["hashbrown::map::IntoKeys"]},{"text":"impl&lt;K:&nbsp;Debug, V:&nbsp;Debug, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoValues.html\" title=\"struct hashbrown::hash_map::IntoValues\">IntoValues</a>&lt;K, V, A&gt;","synthetic":false,"types":["hashbrown::map::IntoValues"]},{"text":"impl&lt;K:&nbsp;Debug, V&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Keys.html\" title=\"struct hashbrown::hash_map::Keys\">Keys</a>&lt;'_, K, V&gt;","synthetic":false,"types":["hashbrown::map::Keys"]},{"text":"impl&lt;K, V:&nbsp;Debug&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Values.html\" title=\"struct hashbrown::hash_map::Values\">Values</a>&lt;'_, K, V&gt;","synthetic":false,"types":["hashbrown::map::Values"]},{"text":"impl&lt;K, V, S, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawEntryBuilderMut.html\" title=\"struct hashbrown::hash_map::RawEntryBuilderMut\">RawEntryBuilderMut</a>&lt;'_, K, V, S, A&gt;","synthetic":false,"types":["hashbrown::map::RawEntryBuilderMut"]},{"text":"impl&lt;K:&nbsp;Debug, V:&nbsp;Debug, S, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"enum\" href=\"hashbrown/hash_map/enum.RawEntryMut.html\" title=\"enum hashbrown::hash_map::RawEntryMut\">RawEntryMut</a>&lt;'_, K, V, S, A&gt;","synthetic":false,"types":["hashbrown::map::RawEntryMut"]},{"text":"impl&lt;K:&nbsp;Debug, V:&nbsp;Debug, S, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawOccupiedEntryMut.html\" title=\"struct hashbrown::hash_map::RawOccupiedEntryMut\">RawOccupiedEntryMut</a>&lt;'_, K, V, S, A&gt;","synthetic":false,"types":["hashbrown::map::RawOccupiedEntryMut"]},{"text":"impl&lt;K, V, S, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawVacantEntryMut.html\" title=\"struct hashbrown::hash_map::RawVacantEntryMut\">RawVacantEntryMut</a>&lt;'_, K, V, S, A&gt;","synthetic":false,"types":["hashbrown::map::RawVacantEntryMut"]},{"text":"impl&lt;K, V, S, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawEntryBuilder.html\" title=\"struct hashbrown::hash_map::RawEntryBuilder\">RawEntryBuilder</a>&lt;'_, K, V, S, A&gt;","synthetic":false,"types":["hashbrown::map::RawEntryBuilder"]},{"text":"impl&lt;K:&nbsp;Debug, V:&nbsp;Debug, S, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"enum\" href=\"hashbrown/hash_map/enum.Entry.html\" title=\"enum hashbrown::hash_map::Entry\">Entry</a>&lt;'_, K, V, S, A&gt;","synthetic":false,"types":["hashbrown::map::Entry"]},{"text":"impl&lt;K:&nbsp;Debug, V:&nbsp;Debug, S, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedEntry.html\" title=\"struct hashbrown::hash_map::OccupiedEntry\">OccupiedEntry</a>&lt;'_, K, V, S, A&gt;","synthetic":false,"types":["hashbrown::map::OccupiedEntry"]},{"text":"impl&lt;K:&nbsp;Debug, V, S, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.VacantEntry.html\" title=\"struct hashbrown::hash_map::VacantEntry\">VacantEntry</a>&lt;'_, K, V, S, A&gt;","synthetic":false,"types":["hashbrown::map::VacantEntry"]},{"text":"impl&lt;K:&nbsp;Borrow&lt;Q&gt;, Q:&nbsp;?Sized + Debug, V:&nbsp;Debug, S, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"enum\" href=\"hashbrown/hash_map/enum.EntryRef.html\" title=\"enum hashbrown::hash_map::EntryRef\">EntryRef</a>&lt;'_, '_, K, Q, V, S, A&gt;","synthetic":false,"types":["hashbrown::map::EntryRef"]},{"text":"impl&lt;K:&nbsp;Borrow&lt;Q&gt;, Q:&nbsp;?Sized + Debug, V:&nbsp;Debug, S, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedEntryRef.html\" title=\"struct hashbrown::hash_map::OccupiedEntryRef\">OccupiedEntryRef</a>&lt;'_, '_, K, Q, V, S, A&gt;","synthetic":false,"types":["hashbrown::map::OccupiedEntryRef"]},{"text":"impl&lt;K:&nbsp;Borrow&lt;Q&gt;, Q:&nbsp;?Sized + Debug, V, S, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.VacantEntryRef.html\" title=\"struct hashbrown::hash_map::VacantEntryRef\">VacantEntryRef</a>&lt;'_, '_, K, Q, V, S, A&gt;","synthetic":false,"types":["hashbrown::map::VacantEntryRef"]},{"text":"impl&lt;K:&nbsp;Debug, V:&nbsp;Debug, S, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedError.html\" title=\"struct hashbrown::hash_map::OccupiedError\">OccupiedError</a>&lt;'_, K, V, S, A&gt;","synthetic":false,"types":["hashbrown::map::OccupiedError"]},{"text":"impl&lt;K, V&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IterMut.html\" title=\"struct hashbrown::hash_map::IterMut\">IterMut</a>&lt;'_, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Debug,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Debug,&nbsp;</span>","synthetic":false,"types":["hashbrown::map::IterMut"]},{"text":"impl&lt;K:&nbsp;Debug, V:&nbsp;Debug, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoIter.html\" title=\"struct hashbrown::hash_map::IntoIter\">IntoIter</a>&lt;K, V, A&gt;","synthetic":false,"types":["hashbrown::map::IntoIter"]},{"text":"impl&lt;K, V&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.ValuesMut.html\" title=\"struct hashbrown::hash_map::ValuesMut\">ValuesMut</a>&lt;'_, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Debug,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Debug,&nbsp;</span>","synthetic":false,"types":["hashbrown::map::ValuesMut"]},{"text":"impl&lt;K, V, A&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Drain.html\" title=\"struct hashbrown::hash_map::Drain\">Drain</a>&lt;'_, K, V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Debug,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Debug,<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Allocator + Clone,&nbsp;</span>","synthetic":false,"types":["hashbrown::map::Drain"]},{"text":"impl&lt;T, S, A&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Debug,<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Allocator + Clone,&nbsp;</span>","synthetic":false,"types":["hashbrown::set::HashSet"]},{"text":"impl&lt;K:&nbsp;Debug&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Iter.html\" title=\"struct hashbrown::hash_set::Iter\">Iter</a>&lt;'_, K&gt;","synthetic":false,"types":["hashbrown::set::Iter"]},{"text":"impl&lt;K:&nbsp;Debug, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_set/struct.IntoIter.html\" title=\"struct hashbrown::hash_set::IntoIter\">IntoIter</a>&lt;K, A&gt;","synthetic":false,"types":["hashbrown::set::IntoIter"]},{"text":"impl&lt;K:&nbsp;Debug, A:&nbsp;Allocator + Clone&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Drain.html\" title=\"struct hashbrown::hash_set::Drain\">Drain</a>&lt;'_, K, A&gt;","synthetic":false,"types":["hashbrown::set::Drain"]},{"text":"impl&lt;T, S, A&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Intersection.html\" title=\"struct hashbrown::hash_set::Intersection\">Intersection</a>&lt;'_, T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Debug + Eq + Hash,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: BuildHasher,<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Allocator + Clone,&nbsp;</span>","synthetic":false,"types":["hashbrown::set::Intersection"]},{"text":"impl&lt;T, S, A&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Difference.html\" title=\"struct hashbrown::hash_set::Difference\">Difference</a>&lt;'_, T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Debug + Eq + Hash,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: BuildHasher,<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Allocator + Clone,&nbsp;</span>","synthetic":false,"types":["hashbrown::set::Difference"]},{"text":"impl&lt;T, S, A&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_set/struct.SymmetricDifference.html\" title=\"struct hashbrown::hash_set::SymmetricDifference\">SymmetricDifference</a>&lt;'_, T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Debug + Eq + Hash,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: BuildHasher,<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Allocator + Clone,&nbsp;</span>","synthetic":false,"types":["hashbrown::set::SymmetricDifference"]},{"text":"impl&lt;T, S, A&gt; Debug for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Union.html\" title=\"struct hashbrown::hash_set::Union\">Union</a>&lt;'_, T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Debug + Eq + Hash,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: BuildHasher,<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Allocator + Clone,&nbsp;</span>","synthetic":false,"types":["hashbrown::set::Union"]},{"text":"impl Debug for <a class=\"enum\" href=\"hashbrown/enum.TryReserveError.html\" title=\"enum hashbrown::TryReserveError\">TryReserveError</a>","synthetic":false,"types":["hashbrown::TryReserveError"]}];
implementors["lock_api"] = [{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"lock_api/trait.RawMutex.html\" title=\"trait lock_api::RawMutex\">RawMutex</a>, T:&nbsp;?Sized + Debug&gt; Debug for <a class=\"struct\" href=\"lock_api/struct.Mutex.html\" title=\"struct lock_api::Mutex\">Mutex</a>&lt;R, T&gt;","synthetic":false,"types":["lock_api::mutex::Mutex"]},{"text":"impl&lt;'a, R:&nbsp;<a class=\"trait\" href=\"lock_api/trait.RawMutex.html\" title=\"trait lock_api::RawMutex\">RawMutex</a> + 'a, T:&nbsp;Debug + ?Sized + 'a&gt; Debug for <a class=\"struct\" href=\"lock_api/struct.MutexGuard.html\" title=\"struct lock_api::MutexGuard\">MutexGuard</a>&lt;'a, R, T&gt;","synthetic":false,"types":["lock_api::mutex::MutexGuard"]},{"text":"impl&lt;'a, R:&nbsp;<a class=\"trait\" href=\"lock_api/trait.RawMutex.html\" title=\"trait lock_api::RawMutex\">RawMutex</a> + 'a, T:&nbsp;Debug + ?Sized + 'a&gt; Debug for <a class=\"struct\" href=\"lock_api/struct.MappedMutexGuard.html\" title=\"struct lock_api::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;","synthetic":false,"types":["lock_api::mutex::MappedMutexGuard"]},{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"lock_api/trait.RawMutex.html\" title=\"trait lock_api::RawMutex\">RawMutex</a>, G:&nbsp;<a class=\"trait\" href=\"lock_api/trait.GetThreadId.html\" title=\"trait lock_api::GetThreadId\">GetThreadId</a>, T:&nbsp;?Sized + Debug&gt; Debug for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutex.html\" title=\"struct lock_api::ReentrantMutex\">ReentrantMutex</a>&lt;R, G, T&gt;","synthetic":false,"types":["lock_api::remutex::ReentrantMutex"]},{"text":"impl&lt;'a, R:&nbsp;<a class=\"trait\" href=\"lock_api/trait.RawMutex.html\" title=\"trait lock_api::RawMutex\">RawMutex</a> + 'a, G:&nbsp;<a class=\"trait\" href=\"lock_api/trait.GetThreadId.html\" title=\"trait lock_api::GetThreadId\">GetThreadId</a> + 'a, T:&nbsp;Debug + ?Sized + 'a&gt; Debug for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutexGuard.html\" title=\"struct lock_api::ReentrantMutexGuard\">ReentrantMutexGuard</a>&lt;'a, R, G, T&gt;","synthetic":false,"types":["lock_api::remutex::ReentrantMutexGuard"]},{"text":"impl&lt;'a, R:&nbsp;<a class=\"trait\" href=\"lock_api/trait.RawMutex.html\" title=\"trait lock_api::RawMutex\">RawMutex</a> + 'a, G:&nbsp;<a class=\"trait\" href=\"lock_api/trait.GetThreadId.html\" title=\"trait lock_api::GetThreadId\">GetThreadId</a> + 'a, T:&nbsp;Debug + ?Sized + 'a&gt; Debug for <a class=\"struct\" href=\"lock_api/struct.MappedReentrantMutexGuard.html\" title=\"struct lock_api::MappedReentrantMutexGuard\">MappedReentrantMutexGuard</a>&lt;'a, R, G, T&gt;","synthetic":false,"types":["lock_api::remutex::MappedReentrantMutexGuard"]},{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"lock_api/trait.RawRwLock.html\" title=\"trait lock_api::RawRwLock\">RawRwLock</a>, T:&nbsp;?Sized + Debug&gt; Debug for <a class=\"struct\" href=\"lock_api/struct.RwLock.html\" title=\"struct lock_api::RwLock\">RwLock</a>&lt;R, T&gt;","synthetic":false,"types":["lock_api::rwlock::RwLock"]},{"text":"impl&lt;'a, R:&nbsp;<a class=\"trait\" href=\"lock_api/trait.RawRwLock.html\" title=\"trait lock_api::RawRwLock\">RawRwLock</a> + 'a, T:&nbsp;Debug + ?Sized + 'a&gt; Debug for <a class=\"struct\" href=\"lock_api/struct.RwLockReadGuard.html\" title=\"struct lock_api::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, R, T&gt;","synthetic":false,"types":["lock_api::rwlock::RwLockReadGuard"]},{"text":"impl&lt;'a, R:&nbsp;<a class=\"trait\" href=\"lock_api/trait.RawRwLock.html\" title=\"trait lock_api::RawRwLock\">RawRwLock</a> + 'a, T:&nbsp;Debug + ?Sized + 'a&gt; Debug for <a class=\"struct\" href=\"lock_api/struct.RwLockWriteGuard.html\" title=\"struct lock_api::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, R, T&gt;","synthetic":false,"types":["lock_api::rwlock::RwLockWriteGuard"]},{"text":"impl&lt;'a, R:&nbsp;<a class=\"trait\" href=\"lock_api/trait.RawRwLockUpgrade.html\" title=\"trait lock_api::RawRwLockUpgrade\">RawRwLockUpgrade</a> + 'a, T:&nbsp;Debug + ?Sized + 'a&gt; Debug for <a class=\"struct\" href=\"lock_api/struct.RwLockUpgradableReadGuard.html\" title=\"struct lock_api::RwLockUpgradableReadGuard\">RwLockUpgradableReadGuard</a>&lt;'a, R, T&gt;","synthetic":false,"types":["lock_api::rwlock::RwLockUpgradableReadGuard"]},{"text":"impl&lt;'a, R:&nbsp;<a class=\"trait\" href=\"lock_api/trait.RawRwLock.html\" title=\"trait lock_api::RawRwLock\">RawRwLock</a> + 'a, T:&nbsp;Debug + ?Sized + 'a&gt; Debug for <a class=\"struct\" href=\"lock_api/struct.MappedRwLockReadGuard.html\" title=\"struct lock_api::MappedRwLockReadGuard\">MappedRwLockReadGuard</a>&lt;'a, R, T&gt;","synthetic":false,"types":["lock_api::rwlock::MappedRwLockReadGuard"]},{"text":"impl&lt;'a, R:&nbsp;<a class=\"trait\" href=\"lock_api/trait.RawRwLock.html\" title=\"trait lock_api::RawRwLock\">RawRwLock</a> + 'a, T:&nbsp;Debug + ?Sized + 'a&gt; Debug for <a class=\"struct\" href=\"lock_api/struct.MappedRwLockWriteGuard.html\" title=\"struct lock_api::MappedRwLockWriteGuard\">MappedRwLockWriteGuard</a>&lt;'a, R, T&gt;","synthetic":false,"types":["lock_api::rwlock::MappedRwLockWriteGuard"]}];
implementors["log"] = [{"text":"impl Debug for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>","synthetic":false,"types":["log::Level"]},{"text":"impl Debug for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>","synthetic":false,"types":["log::LevelFilter"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"struct\" href=\"log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'a&gt;","synthetic":false,"types":["log::Record"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"struct\" href=\"log/struct.RecordBuilder.html\" title=\"struct log::RecordBuilder\">RecordBuilder</a>&lt;'a&gt;","synthetic":false,"types":["log::RecordBuilder"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;","synthetic":false,"types":["log::Metadata"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;","synthetic":false,"types":["log::MetadataBuilder"]},{"text":"impl Debug for <a class=\"struct\" href=\"log/struct.SetLoggerError.html\" title=\"struct log::SetLoggerError\">SetLoggerError</a>","synthetic":false,"types":["log::SetLoggerError"]},{"text":"impl Debug for <a class=\"struct\" href=\"log/struct.ParseLevelError.html\" title=\"struct log::ParseLevelError\">ParseLevelError</a>","synthetic":false,"types":["log::ParseLevelError"]}];
implementors["managed"] = [{"text":"impl&lt;'a, T:&nbsp;'a + ?Sized&gt; Debug for <a class=\"enum\" href=\"managed/enum.Managed.html\" title=\"enum managed::Managed\">Managed</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Debug,&nbsp;</span>","synthetic":false,"types":["managed::object::Managed"]},{"text":"impl&lt;'a, T:&nbsp;'a&gt; Debug for <a class=\"enum\" href=\"managed/enum.ManagedSlice.html\" title=\"enum managed::ManagedSlice\">ManagedSlice</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Debug,&nbsp;</span>","synthetic":false,"types":["managed::slice::ManagedSlice"]},{"text":"impl Debug for <a class=\"struct\" href=\"managed/struct.SlotIndex.html\" title=\"struct managed::SlotIndex\">Slot</a>","synthetic":false,"types":["managed::slotmap::Slot"]},{"text":"impl Debug for <a class=\"struct\" href=\"managed/struct.SlotKey.html\" title=\"struct managed::SlotKey\">Key</a>","synthetic":false,"types":["managed::slotmap::Key"]},{"text":"impl&lt;'a, K:&nbsp;'a, V:&nbsp;'a&gt; Debug for <a class=\"enum\" href=\"managed/enum.ManagedMap.html\" title=\"enum managed::ManagedMap\">ManagedMap</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Debug,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Debug,&nbsp;</span>","synthetic":false,"types":["managed::map::ManagedMap"]}];
implementors["once_cell"] = [{"text":"impl&lt;T:&nbsp;Debug&gt; Debug for <a class=\"struct\" href=\"once_cell/unsync/struct.OnceCell.html\" title=\"struct once_cell::unsync::OnceCell\">OnceCell</a>&lt;T&gt;","synthetic":false,"types":["once_cell::unsync::OnceCell"]},{"text":"impl&lt;T:&nbsp;Debug, F&gt; Debug for <a class=\"struct\" href=\"once_cell/unsync/struct.Lazy.html\" title=\"struct once_cell::unsync::Lazy\">Lazy</a>&lt;T, F&gt;","synthetic":false,"types":["once_cell::unsync::Lazy"]},{"text":"impl Debug for <a class=\"struct\" href=\"once_cell/race/struct.OnceNonZeroUsize.html\" title=\"struct once_cell::race::OnceNonZeroUsize\">OnceNonZeroUsize</a>","synthetic":false,"types":["once_cell::race::OnceNonZeroUsize"]},{"text":"impl Debug for <a class=\"struct\" href=\"once_cell/race/struct.OnceBool.html\" title=\"struct once_cell::race::OnceBool\">OnceBool</a>","synthetic":false,"types":["once_cell::race::OnceBool"]},{"text":"impl&lt;T&gt; Debug for <a class=\"struct\" href=\"once_cell/race/struct.OnceBox.html\" title=\"struct once_cell::race::OnceBox\">OnceBox</a>&lt;T&gt;","synthetic":false,"types":["once_cell::race::once_box::OnceBox"]}];
implementors["scopeguard"] = [{"text":"impl Debug for <a class=\"enum\" href=\"scopeguard/enum.Always.html\" title=\"enum scopeguard::Always\">Always</a>","synthetic":false,"types":["scopeguard::Always"]},{"text":"impl&lt;T, F, S&gt; Debug for <a class=\"struct\" href=\"scopeguard/struct.ScopeGuard.html\" title=\"struct scopeguard::ScopeGuard\">ScopeGuard</a>&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Debug,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnOnce(T),<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"scopeguard/trait.Strategy.html\" title=\"trait scopeguard::Strategy\">Strategy</a>,&nbsp;</span>","synthetic":false,"types":["scopeguard::ScopeGuard"]}];
implementors["smoltcp"] = [{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/iface/struct.Neighbor.html\" title=\"struct smoltcp::iface::Neighbor\">Neighbor</a>","synthetic":false,"types":["smoltcp::iface::neighbor::Neighbor"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"struct\" href=\"smoltcp/iface/struct.NeighborCache.html\" title=\"struct smoltcp::iface::NeighborCache\">Cache</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::iface::neighbor::Cache"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/iface/struct.Route.html\" title=\"struct smoltcp::iface::Route\">Route</a>","synthetic":false,"types":["smoltcp::iface::route::Route"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"struct\" href=\"smoltcp/iface/struct.Routes.html\" title=\"struct smoltcp::iface::Routes\">Routes</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::iface::route::Routes"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"struct\" href=\"smoltcp/iface/struct.SocketStorage.html\" title=\"struct smoltcp::iface::SocketStorage\">SocketStorage</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::iface::socket_set::SocketStorage"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/iface/struct.SocketHandle.html\" title=\"struct smoltcp::iface::SocketHandle\">SocketHandle</a>","synthetic":false,"types":["smoltcp::iface::socket_set::SocketHandle"]},{"text":"impl&lt;D:&nbsp;Debug + for&lt;'a&gt; <a class=\"trait\" href=\"smoltcp/phy/trait.Device.html\" title=\"trait smoltcp::phy::Device\">Device</a>&lt;'a&gt;&gt; Debug for <a class=\"struct\" href=\"smoltcp/phy/struct.FaultInjector.html\" title=\"struct smoltcp::phy::FaultInjector\">FaultInjector</a>&lt;D&gt;","synthetic":false,"types":["smoltcp::phy::fault_injector::FaultInjector"]},{"text":"impl&lt;D:&nbsp;Debug + for&lt;'a&gt; <a class=\"trait\" href=\"smoltcp/phy/trait.Device.html\" title=\"trait smoltcp::phy::Device\">Device</a>&lt;'a&gt;, FTx:&nbsp;Debug + <a class=\"trait\" href=\"smoltcp/phy/trait.Fuzzer.html\" title=\"trait smoltcp::phy::Fuzzer\">Fuzzer</a>, FRx:&nbsp;Debug + <a class=\"trait\" href=\"smoltcp/phy/trait.Fuzzer.html\" title=\"trait smoltcp::phy::Fuzzer\">Fuzzer</a>&gt; Debug for <a class=\"struct\" href=\"smoltcp/phy/struct.FuzzInjector.html\" title=\"struct smoltcp::phy::FuzzInjector\">FuzzInjector</a>&lt;D, FTx, FRx&gt;","synthetic":false,"types":["smoltcp::phy::fuzz_injector::FuzzInjector"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/phy/struct.Loopback.html\" title=\"struct smoltcp::phy::Loopback\">Loopback</a>","synthetic":false,"types":["smoltcp::phy::loopback::Loopback"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/phy/enum.PcapLinkType.html\" title=\"enum smoltcp::phy::PcapLinkType\">PcapLinkType</a>","synthetic":false,"types":["smoltcp::phy::pcap_writer::PcapLinkType"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/phy/enum.PcapMode.html\" title=\"enum smoltcp::phy::PcapMode\">PcapMode</a>","synthetic":false,"types":["smoltcp::phy::pcap_writer::PcapMode"]},{"text":"impl&lt;D:&nbsp;Debug, S:&nbsp;Debug&gt; Debug for <a class=\"struct\" href=\"smoltcp/phy/struct.PcapWriter.html\" title=\"struct smoltcp::phy::PcapWriter\">PcapWriter</a>&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: for&lt;'a&gt; <a class=\"trait\" href=\"smoltcp/phy/trait.Device.html\" title=\"trait smoltcp::phy::Device\">Device</a>&lt;'a&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"smoltcp/phy/trait.PcapSink.html\" title=\"trait smoltcp::phy::PcapSink\">PcapSink</a>,&nbsp;</span>","synthetic":false,"types":["smoltcp::phy::pcap_writer::PcapWriter"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/phy/enum.Checksum.html\" title=\"enum smoltcp::phy::Checksum\">Checksum</a>","synthetic":false,"types":["smoltcp::phy::Checksum"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/phy/struct.ChecksumCapabilities.html\" title=\"struct smoltcp::phy::ChecksumCapabilities\">ChecksumCapabilities</a>","synthetic":false,"types":["smoltcp::phy::ChecksumCapabilities"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/phy/struct.DeviceCapabilities.html\" title=\"struct smoltcp::phy::DeviceCapabilities\">DeviceCapabilities</a>","synthetic":false,"types":["smoltcp::phy::DeviceCapabilities"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/phy/enum.Medium.html\" title=\"enum smoltcp::phy::Medium\">Medium</a>","synthetic":false,"types":["smoltcp::phy::Medium"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/socket/enum.TcpState.html\" title=\"enum smoltcp::socket::TcpState\">State</a>","synthetic":false,"types":["smoltcp::socket::tcp::State"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"struct\" href=\"smoltcp/socket/struct.TcpSocket.html\" title=\"struct smoltcp::socket::TcpSocket\">TcpSocket</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::socket::tcp::TcpSocket"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"enum\" href=\"smoltcp/socket/enum.Socket.html\" title=\"enum smoltcp::socket::Socket\">Socket</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::socket::Socket"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/storage/struct.Assembler.html\" title=\"struct smoltcp::storage::Assembler\">Assembler</a>","synthetic":false,"types":["smoltcp::storage::assembler::Assembler"]},{"text":"impl&lt;H:&nbsp;Debug&gt; Debug for <a class=\"struct\" href=\"smoltcp/storage/struct.PacketMetadata.html\" title=\"struct smoltcp::storage::PacketMetadata\">PacketMetadata</a>&lt;H&gt;","synthetic":false,"types":["smoltcp::storage::packet_buffer::PacketMetadata"]},{"text":"impl&lt;'a, H:&nbsp;Debug + 'a&gt; Debug for <a class=\"struct\" href=\"smoltcp/storage/struct.PacketBuffer.html\" title=\"struct smoltcp::storage::PacketBuffer\">PacketBuffer</a>&lt;'a, H&gt;","synthetic":false,"types":["smoltcp::storage::packet_buffer::PacketBuffer"]},{"text":"impl&lt;'a, T:&nbsp;Debug + 'a&gt; Debug for <a class=\"struct\" href=\"smoltcp/storage/struct.RingBuffer.html\" title=\"struct smoltcp::storage::RingBuffer\">RingBuffer</a>&lt;'a, T&gt;","synthetic":false,"types":["smoltcp::storage::ring_buffer::RingBuffer"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/time/struct.Instant.html\" title=\"struct smoltcp::time::Instant\">Instant</a>","synthetic":false,"types":["smoltcp::time::Instant"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/time/struct.Duration.html\" title=\"struct smoltcp::time::Duration\">Duration</a>","synthetic":false,"types":["smoltcp::time::Duration"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/pretty_print/struct.PrettyIndent.html\" title=\"struct smoltcp::wire::pretty_print::PrettyIndent\">PrettyIndent</a>","synthetic":false,"types":["smoltcp::wire::pretty_print::PrettyIndent"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.ArpHardware.html\" title=\"enum smoltcp::wire::ArpHardware\">Hardware</a>","synthetic":false,"types":["smoltcp::wire::arp::Hardware"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.ArpOperation.html\" title=\"enum smoltcp::wire::ArpOperation\">Operation</a>","synthetic":false,"types":["smoltcp::wire::arp::Operation"]},{"text":"impl&lt;T:&nbsp;Debug + AsRef&lt;[u8]&gt;&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.ArpPacket.html\" title=\"struct smoltcp::wire::ArpPacket\">Packet</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::arp::Packet"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.ArpRepr.html\" title=\"enum smoltcp::wire::ArpRepr\">Repr</a>","synthetic":false,"types":["smoltcp::wire::arp::Repr"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.EthernetProtocol.html\" title=\"enum smoltcp::wire::EthernetProtocol\">EtherType</a>","synthetic":false,"types":["smoltcp::wire::ethernet::EtherType"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.EthernetAddress.html\" title=\"struct smoltcp::wire::EthernetAddress\">Address</a>","synthetic":false,"types":["smoltcp::wire::ethernet::Address"]},{"text":"impl&lt;T:&nbsp;Debug + AsRef&lt;[u8]&gt;&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.EthernetFrame.html\" title=\"struct smoltcp::wire::EthernetFrame\">Frame</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::ethernet::Frame"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.EthernetRepr.html\" title=\"struct smoltcp::wire::EthernetRepr\">Repr</a>","synthetic":false,"types":["smoltcp::wire::ethernet::Repr"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.IcmpRepr.html\" title=\"enum smoltcp::wire::IcmpRepr\">Repr</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::wire::icmp::Repr"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4Message.html\" title=\"enum smoltcp::wire::Icmpv4Message\">Message</a>","synthetic":false,"types":["smoltcp::wire::icmpv4::Message"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4DstUnreachable.html\" title=\"enum smoltcp::wire::Icmpv4DstUnreachable\">DstUnreachable</a>","synthetic":false,"types":["smoltcp::wire::icmpv4::DstUnreachable"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4Redirect.html\" title=\"enum smoltcp::wire::Icmpv4Redirect\">Redirect</a>","synthetic":false,"types":["smoltcp::wire::icmpv4::Redirect"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4TimeExceeded.html\" title=\"enum smoltcp::wire::Icmpv4TimeExceeded\">TimeExceeded</a>","synthetic":false,"types":["smoltcp::wire::icmpv4::TimeExceeded"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4ParamProblem.html\" title=\"enum smoltcp::wire::Icmpv4ParamProblem\">ParamProblem</a>","synthetic":false,"types":["smoltcp::wire::icmpv4::ParamProblem"]},{"text":"impl&lt;T:&nbsp;Debug + AsRef&lt;[u8]&gt;&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.Icmpv4Packet.html\" title=\"struct smoltcp::wire::Icmpv4Packet\">Packet</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::icmpv4::Packet"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv4Repr.html\" title=\"enum smoltcp::wire::Icmpv4Repr\">Repr</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::wire::icmpv4::Repr"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6Message.html\" title=\"enum smoltcp::wire::Icmpv6Message\">Message</a>","synthetic":false,"types":["smoltcp::wire::icmpv6::Message"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6DstUnreachable.html\" title=\"enum smoltcp::wire::Icmpv6DstUnreachable\">DstUnreachable</a>","synthetic":false,"types":["smoltcp::wire::icmpv6::DstUnreachable"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6ParamProblem.html\" title=\"enum smoltcp::wire::Icmpv6ParamProblem\">ParamProblem</a>","synthetic":false,"types":["smoltcp::wire::icmpv6::ParamProblem"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6TimeExceeded.html\" title=\"enum smoltcp::wire::Icmpv6TimeExceeded\">TimeExceeded</a>","synthetic":false,"types":["smoltcp::wire::icmpv6::TimeExceeded"]},{"text":"impl&lt;T:&nbsp;Debug + AsRef&lt;[u8]&gt;&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.Icmpv6Packet.html\" title=\"struct smoltcp::wire::Icmpv6Packet\">Packet</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::icmpv6::Packet"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.Icmpv6Repr.html\" title=\"enum smoltcp::wire::Icmpv6Repr\">Repr</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::wire::icmpv6::Repr"]},{"text":"impl&lt;T:&nbsp;Debug + AsRef&lt;[u8]&gt;&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.IgmpPacket.html\" title=\"struct smoltcp::wire::IgmpPacket\">Packet</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::igmp::Packet"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.IgmpRepr.html\" title=\"enum smoltcp::wire::IgmpRepr\">Repr</a>","synthetic":false,"types":["smoltcp::wire::igmp::Repr"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.IgmpVersion.html\" title=\"enum smoltcp::wire::IgmpVersion\">IgmpVersion</a>","synthetic":false,"types":["smoltcp::wire::igmp::IgmpVersion"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.IpVersion.html\" title=\"enum smoltcp::wire::IpVersion\">Version</a>","synthetic":false,"types":["smoltcp::wire::ip::Version"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.IpProtocol.html\" title=\"enum smoltcp::wire::IpProtocol\">Protocol</a>","synthetic":false,"types":["smoltcp::wire::ip::Protocol"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.IpAddress.html\" title=\"enum smoltcp::wire::IpAddress\">Address</a>","synthetic":false,"types":["smoltcp::wire::ip::Address"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.IpCidr.html\" title=\"enum smoltcp::wire::IpCidr\">Cidr</a>","synthetic":false,"types":["smoltcp::wire::ip::Cidr"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.IpEndpoint.html\" title=\"struct smoltcp::wire::IpEndpoint\">Endpoint</a>","synthetic":false,"types":["smoltcp::wire::ip::Endpoint"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.IpRepr.html\" title=\"enum smoltcp::wire::IpRepr\">Repr</a>","synthetic":false,"types":["smoltcp::wire::ip::Repr"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv4Address.html\" title=\"struct smoltcp::wire::Ipv4Address\">Address</a>","synthetic":false,"types":["smoltcp::wire::ipv4::Address"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv4Cidr.html\" title=\"struct smoltcp::wire::Ipv4Cidr\">Cidr</a>","synthetic":false,"types":["smoltcp::wire::ipv4::Cidr"]},{"text":"impl&lt;T:&nbsp;Debug + AsRef&lt;[u8]&gt;&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv4Packet.html\" title=\"struct smoltcp::wire::Ipv4Packet\">Packet</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::ipv4::Packet"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv4Repr.html\" title=\"struct smoltcp::wire::Ipv4Repr\">Repr</a>","synthetic":false,"types":["smoltcp::wire::ipv4::Repr"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6Address.html\" title=\"struct smoltcp::wire::Ipv6Address\">Address</a>","synthetic":false,"types":["smoltcp::wire::ipv6::Address"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6Cidr.html\" title=\"struct smoltcp::wire::Ipv6Cidr\">Cidr</a>","synthetic":false,"types":["smoltcp::wire::ipv6::Cidr"]},{"text":"impl&lt;T:&nbsp;Debug + AsRef&lt;[u8]&gt;&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6Packet.html\" title=\"struct smoltcp::wire::Ipv6Packet\">Packet</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::ipv6::Packet"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6Repr.html\" title=\"struct smoltcp::wire::Ipv6Repr\">Repr</a>","synthetic":false,"types":["smoltcp::wire::ipv6::Repr"]},{"text":"impl&lt;T:&nbsp;Debug + AsRef&lt;[u8]&gt;&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6FragmentHeader.html\" title=\"struct smoltcp::wire::Ipv6FragmentHeader\">Header</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::ipv6fragment::Header"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6FragmentRepr.html\" title=\"struct smoltcp::wire::Ipv6FragmentRepr\">Repr</a>","synthetic":false,"types":["smoltcp::wire::ipv6fragment::Repr"]},{"text":"impl&lt;T:&nbsp;Debug + AsRef&lt;[u8]&gt;&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6HopByHopHeader.html\" title=\"struct smoltcp::wire::Ipv6HopByHopHeader\">Header</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::ipv6hopbyhop::Header"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6HopByHopRepr.html\" title=\"struct smoltcp::wire::Ipv6HopByHopRepr\">Repr</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::wire::ipv6hopbyhop::Repr"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.Ipv6OptionType.html\" title=\"enum smoltcp::wire::Ipv6OptionType\">Type</a>","synthetic":false,"types":["smoltcp::wire::ipv6option::Type"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.Ipv6OptionFailureType.html\" title=\"enum smoltcp::wire::Ipv6OptionFailureType\">FailureType</a>","synthetic":false,"types":["smoltcp::wire::ipv6option::FailureType"]},{"text":"impl&lt;T:&nbsp;Debug + AsRef&lt;[u8]&gt;&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6Option.html\" title=\"struct smoltcp::wire::Ipv6Option\">Ipv6Option</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::ipv6option::Ipv6Option"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.Ipv6OptionRepr.html\" title=\"enum smoltcp::wire::Ipv6OptionRepr\">Repr</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::wire::ipv6option::Repr"]},{"text":"impl&lt;T:&nbsp;Debug + AsRef&lt;[u8]&gt;&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6RoutingHeader.html\" title=\"struct smoltcp::wire::Ipv6RoutingHeader\">Header</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::ipv6routing::Header"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.Ipv6RoutingRepr.html\" title=\"enum smoltcp::wire::Ipv6RoutingRepr\">Repr</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::wire::ipv6routing::Repr"]},{"text":"impl&lt;T:&nbsp;Debug + AsRef&lt;[u8]&gt;&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.MldAddressRecord.html\" title=\"struct smoltcp::wire::MldAddressRecord\">AddressRecord</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::mld::AddressRecord"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.MldRepr.html\" title=\"enum smoltcp::wire::MldRepr\">Repr</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::wire::mld::Repr"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.NdiscRouterFlags.html\" title=\"struct smoltcp::wire::NdiscRouterFlags\">RouterFlags</a>","synthetic":false,"types":["smoltcp::wire::ndisc::RouterFlags"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.NdiscNeighborFlags.html\" title=\"struct smoltcp::wire::NdiscNeighborFlags\">NeighborFlags</a>","synthetic":false,"types":["smoltcp::wire::ndisc::NeighborFlags"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.NdiscRepr.html\" title=\"enum smoltcp::wire::NdiscRepr\">Repr</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::wire::ndisc::Repr"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.NdiscOptionType.html\" title=\"enum smoltcp::wire::NdiscOptionType\">Type</a>","synthetic":false,"types":["smoltcp::wire::ndiscoption::Type"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.NdiscPrefixInfoFlags.html\" title=\"struct smoltcp::wire::NdiscPrefixInfoFlags\">PrefixInfoFlags</a>","synthetic":false,"types":["smoltcp::wire::ndiscoption::PrefixInfoFlags"]},{"text":"impl&lt;T:&nbsp;Debug + AsRef&lt;[u8]&gt;&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.NdiscOption.html\" title=\"struct smoltcp::wire::NdiscOption\">NdiscOption</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::ndiscoption::NdiscOption"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.NdiscPrefixInformation.html\" title=\"struct smoltcp::wire::NdiscPrefixInformation\">PrefixInformation</a>","synthetic":false,"types":["smoltcp::wire::ndiscoption::PrefixInformation"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.NdiscRedirectedHeader.html\" title=\"struct smoltcp::wire::NdiscRedirectedHeader\">RedirectedHeader</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::wire::ndiscoption::RedirectedHeader"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.NdiscOptionRepr.html\" title=\"enum smoltcp::wire::NdiscOptionRepr\">Repr</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::wire::ndiscoption::Repr"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.TcpSeqNumber.html\" title=\"struct smoltcp::wire::TcpSeqNumber\">SeqNumber</a>","synthetic":false,"types":["smoltcp::wire::tcp::SeqNumber"]},{"text":"impl&lt;T:&nbsp;Debug + AsRef&lt;[u8]&gt;&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.TcpPacket.html\" title=\"struct smoltcp::wire::TcpPacket\">Packet</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::tcp::Packet"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.TcpOption.html\" title=\"enum smoltcp::wire::TcpOption\">TcpOption</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::wire::tcp::TcpOption"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.TcpControl.html\" title=\"enum smoltcp::wire::TcpControl\">Control</a>","synthetic":false,"types":["smoltcp::wire::tcp::Control"]},{"text":"impl&lt;'a&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.TcpRepr.html\" title=\"struct smoltcp::wire::TcpRepr\">Repr</a>&lt;'a&gt;","synthetic":false,"types":["smoltcp::wire::tcp::Repr"]},{"text":"impl&lt;T:&nbsp;Debug + AsRef&lt;[u8]&gt;&gt; Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.UdpPacket.html\" title=\"struct smoltcp::wire::UdpPacket\">Packet</a>&lt;T&gt;","synthetic":false,"types":["smoltcp::wire::udp::Packet"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.UdpRepr.html\" title=\"struct smoltcp::wire::UdpRepr\">Repr</a>","synthetic":false,"types":["smoltcp::wire::udp::Repr"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/wire/enum.HardwareAddress.html\" title=\"enum smoltcp::wire::HardwareAddress\">HardwareAddress</a>","synthetic":false,"types":["smoltcp::wire::HardwareAddress"]},{"text":"impl Debug for <a class=\"struct\" href=\"smoltcp/wire/struct.RawHardwareAddress.html\" title=\"struct smoltcp::wire::RawHardwareAddress\">RawHardwareAddress</a>","synthetic":false,"types":["smoltcp::wire::RawHardwareAddress"]},{"text":"impl Debug for <a class=\"enum\" href=\"smoltcp/enum.Error.html\" title=\"enum smoltcp::Error\">Error</a>","synthetic":false,"types":["smoltcp::Error"]}];
implementors["spin"] = [{"text":"impl&lt;T:&nbsp;Debug, F, R&gt; Debug for <a class=\"struct\" href=\"spin/lazy/struct.Lazy.html\" title=\"struct spin::lazy::Lazy\">Lazy</a>&lt;T, F, R&gt;","synthetic":false,"types":["spin::lazy::Lazy"]},{"text":"impl&lt;T:&nbsp;?Sized + Debug, R&gt; Debug for <a class=\"struct\" href=\"spin/mutex/spin/struct.SpinMutex.html\" title=\"struct spin::mutex::spin::SpinMutex\">SpinMutex</a>&lt;T, R&gt;","synthetic":false,"types":["spin::mutex::spin::SpinMutex"]},{"text":"impl&lt;'a, T:&nbsp;?Sized + Debug&gt; Debug for <a class=\"struct\" href=\"spin/mutex/spin/struct.SpinMutexGuard.html\" title=\"struct spin::mutex::spin::SpinMutexGuard\">SpinMutexGuard</a>&lt;'a, T&gt;","synthetic":false,"types":["spin::mutex::spin::SpinMutexGuard"]},{"text":"impl&lt;T:&nbsp;?Sized + Debug, R&gt; Debug for <a class=\"struct\" href=\"spin/mutex/struct.Mutex.html\" title=\"struct spin::mutex::Mutex\">Mutex</a>&lt;T, R&gt;","synthetic":false,"types":["spin::mutex::Mutex"]},{"text":"impl&lt;'a, T:&nbsp;?Sized + Debug&gt; Debug for <a class=\"struct\" href=\"spin/mutex/struct.MutexGuard.html\" title=\"struct spin::mutex::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":false,"types":["spin::mutex::MutexGuard"]},{"text":"impl&lt;T:&nbsp;Debug, R&gt; Debug for <a class=\"struct\" href=\"spin/once/struct.Once.html\" title=\"struct spin::once::Once\">Once</a>&lt;T, R&gt;","synthetic":false,"types":["spin::once::Once"]},{"text":"impl&lt;T:&nbsp;?Sized + Debug, R&gt; Debug for <a class=\"struct\" href=\"spin/rwlock/struct.RwLock.html\" title=\"struct spin::rwlock::RwLock\">RwLock</a>&lt;T, R&gt;","synthetic":false,"types":["spin::rwlock::RwLock"]},{"text":"impl&lt;'rwlock, T:&nbsp;?Sized + Debug&gt; Debug for <a class=\"struct\" href=\"spin/rwlock/struct.RwLockReadGuard.html\" title=\"struct spin::rwlock::RwLockReadGuard\">RwLockReadGuard</a>&lt;'rwlock, T&gt;","synthetic":false,"types":["spin::rwlock::RwLockReadGuard"]},{"text":"impl&lt;'rwlock, T:&nbsp;?Sized + Debug, R&gt; Debug for <a class=\"struct\" href=\"spin/rwlock/struct.RwLockUpgradableGuard.html\" title=\"struct spin::rwlock::RwLockUpgradableGuard\">RwLockUpgradableGuard</a>&lt;'rwlock, T, R&gt;","synthetic":false,"types":["spin::rwlock::RwLockUpgradableGuard"]},{"text":"impl&lt;'rwlock, T:&nbsp;?Sized + Debug, R&gt; Debug for <a class=\"struct\" href=\"spin/rwlock/struct.RwLockWriteGuard.html\" title=\"struct spin::rwlock::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'rwlock, T, R&gt;","synthetic":false,"types":["spin::rwlock::RwLockWriteGuard"]}];
implementors["xen"] = [{"text":"impl Debug for <a class=\"struct\" href=\"xen/events/struct.EventAction.html\" title=\"struct xen::events::EventAction\">EventAction</a>","synthetic":false,"types":["xen::events::EventAction"]},{"text":"impl Debug for <a class=\"enum\" href=\"xen/grant_table/enum.Error.html\" title=\"enum xen::grant_table::Error\">Error</a>","synthetic":false,"types":["xen::grant_table::error::Error"]},{"text":"impl Debug for <a class=\"enum\" href=\"xen/grant_table/enum.GrantStatusError.html\" title=\"enum xen::grant_table::GrantStatusError\">GrantStatusError</a>","synthetic":false,"types":["xen::grant_table::error::GrantStatusError"]},{"text":"impl Debug for <a class=\"enum\" href=\"xen/hypercall/enum.Error.html\" title=\"enum xen::hypercall::Error\">Error</a>","synthetic":false,"types":["xen::hypercall::Error"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen/memory/struct.PageEntry.html\" title=\"struct xen::memory::PageEntry\">PageEntry</a>","synthetic":false,"types":["xen::memory::wrappers::PageEntry"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen/memory/struct.PageFrameNumber.html\" title=\"struct xen::memory::PageFrameNumber\">PageFrameNumber</a>","synthetic":false,"types":["xen::memory::wrappers::PageFrameNumber"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen/memory/struct.MachineFrameNumber.html\" title=\"struct xen::memory::MachineFrameNumber\">MachineFrameNumber</a>","synthetic":false,"types":["xen::memory::wrappers::MachineFrameNumber"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen/memory/struct.VirtualAddress.html\" title=\"struct xen::memory::VirtualAddress\">VirtualAddress</a>","synthetic":false,"types":["xen::memory::wrappers::VirtualAddress"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen/memory/struct.PhysicalAddress.html\" title=\"struct xen::memory::PhysicalAddress\">PhysicalAddress</a>","synthetic":false,"types":["xen::memory::wrappers::PhysicalAddress"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen/memory/struct.MachineAddress.html\" title=\"struct xen::memory::MachineAddress\">MachineAddress</a>","synthetic":false,"types":["xen::memory::wrappers::MachineAddress"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen/memory/struct.TLBFlushFlags.html\" title=\"struct xen::memory::TLBFlushFlags\">TLBFlushFlags</a>","synthetic":false,"types":["xen::memory::TLBFlushFlags"]},{"text":"impl Debug for <a class=\"enum\" href=\"xen/xenbus/enum.State.html\" title=\"enum xen::xenbus::State\">State</a>","synthetic":false,"types":["xen::xenbus::State"]},{"text":"impl Debug for <a class=\"enum\" href=\"xen/xenbus/enum.MessageKind.html\" title=\"enum xen::xenbus::MessageKind\">MessageKind</a>","synthetic":false,"types":["xen::xenbus::MessageKind"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen/xenbus/struct.MessageHeader.html\" title=\"struct xen::xenbus::MessageHeader\">MessageHeader</a>","synthetic":false,"types":["xen::xenbus::MessageHeader"]}];
implementors["xen_sys"] = [{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.__fsid_t.html\" title=\"struct xen_sys::__fsid_t\">__fsid_t</a>","synthetic":false,"types":["xen_sys::__fsid_t"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.iret_context.html\" title=\"struct xen_sys::iret_context\">iret_context</a>","synthetic":false,"types":["xen_sys::iret_context"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.arch_vcpu_info.html\" title=\"struct xen_sys::arch_vcpu_info\">arch_vcpu_info</a>","synthetic":false,"types":["xen_sys::arch_vcpu_info"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.trap_info.html\" title=\"struct xen_sys::trap_info\">trap_info</a>","synthetic":false,"types":["xen_sys::trap_info"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.vcpu_guest_context__bindgen_ty_1.html\" title=\"struct xen_sys::vcpu_guest_context__bindgen_ty_1\">vcpu_guest_context__bindgen_ty_1</a>","synthetic":false,"types":["xen_sys::vcpu_guest_context__bindgen_ty_1"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.arch_shared_info.html\" title=\"struct xen_sys::arch_shared_info\">arch_shared_info</a>","synthetic":false,"types":["xen_sys::arch_shared_info"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.mmu_update.html\" title=\"struct xen_sys::mmu_update\">mmu_update</a>","synthetic":false,"types":["xen_sys::mmu_update"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.multicall_entry.html\" title=\"struct xen_sys::multicall_entry\">multicall_entry</a>","synthetic":false,"types":["xen_sys::multicall_entry"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.vcpu_time_info.html\" title=\"struct xen_sys::vcpu_time_info\">vcpu_time_info</a>","synthetic":false,"types":["xen_sys::vcpu_time_info"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.vcpu_info.html\" title=\"struct xen_sys::vcpu_info\">vcpu_info</a>","synthetic":false,"types":["xen_sys::vcpu_info"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.shared_info.html\" title=\"struct xen_sys::shared_info\">shared_info</a>","synthetic":false,"types":["xen_sys::shared_info"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.start_info__bindgen_ty_1__bindgen_ty_1.html\" title=\"struct xen_sys::start_info__bindgen_ty_1__bindgen_ty_1\">start_info__bindgen_ty_1__bindgen_ty_1</a>","synthetic":false,"types":["xen_sys::start_info__bindgen_ty_1__bindgen_ty_1"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.start_info__bindgen_ty_1__bindgen_ty_2.html\" title=\"struct xen_sys::start_info__bindgen_ty_1__bindgen_ty_2\">start_info__bindgen_ty_1__bindgen_ty_2</a>","synthetic":false,"types":["xen_sys::start_info__bindgen_ty_1__bindgen_ty_2"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.xen_multiboot_mod_list.html\" title=\"struct xen_sys::xen_multiboot_mod_list\">xen_multiboot_mod_list</a>","synthetic":false,"types":["xen_sys::xen_multiboot_mod_list"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.dom0_vga_console_info__bindgen_ty_1__bindgen_ty_1.html\" title=\"struct xen_sys::dom0_vga_console_info__bindgen_ty_1__bindgen_ty_1\">dom0_vga_console_info__bindgen_ty_1__bindgen_ty_1</a>","synthetic":false,"types":["xen_sys::dom0_vga_console_info__bindgen_ty_1__bindgen_ty_1"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.dom0_vga_console_info__bindgen_ty_1__bindgen_ty_2.html\" title=\"struct xen_sys::dom0_vga_console_info__bindgen_ty_1__bindgen_ty_2\">dom0_vga_console_info__bindgen_ty_1__bindgen_ty_2</a>","synthetic":false,"types":["xen_sys::dom0_vga_console_info__bindgen_ty_1__bindgen_ty_2"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.xen_uuid_t.html\" title=\"struct xen_sys::xen_uuid_t\">xen_uuid_t</a>","synthetic":false,"types":["xen_sys::xen_uuid_t"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.evtchn_alloc_unbound.html\" title=\"struct xen_sys::evtchn_alloc_unbound\">evtchn_alloc_unbound</a>","synthetic":false,"types":["xen_sys::evtchn_alloc_unbound"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.evtchn_bind_interdomain.html\" title=\"struct xen_sys::evtchn_bind_interdomain\">evtchn_bind_interdomain</a>","synthetic":false,"types":["xen_sys::evtchn_bind_interdomain"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.evtchn_bind_virq.html\" title=\"struct xen_sys::evtchn_bind_virq\">evtchn_bind_virq</a>","synthetic":false,"types":["xen_sys::evtchn_bind_virq"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.evtchn_bind_pirq.html\" title=\"struct xen_sys::evtchn_bind_pirq\">evtchn_bind_pirq</a>","synthetic":false,"types":["xen_sys::evtchn_bind_pirq"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.evtchn_bind_ipi.html\" title=\"struct xen_sys::evtchn_bind_ipi\">evtchn_bind_ipi</a>","synthetic":false,"types":["xen_sys::evtchn_bind_ipi"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.evtchn_close.html\" title=\"struct xen_sys::evtchn_close\">evtchn_close</a>","synthetic":false,"types":["xen_sys::evtchn_close"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.evtchn_send.html\" title=\"struct xen_sys::evtchn_send\">evtchn_send</a>","synthetic":false,"types":["xen_sys::evtchn_send"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.evtchn_status__bindgen_ty_1__bindgen_ty_1.html\" title=\"struct xen_sys::evtchn_status__bindgen_ty_1__bindgen_ty_1\">evtchn_status__bindgen_ty_1__bindgen_ty_1</a>","synthetic":false,"types":["xen_sys::evtchn_status__bindgen_ty_1__bindgen_ty_1"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.evtchn_status__bindgen_ty_1__bindgen_ty_2.html\" title=\"struct xen_sys::evtchn_status__bindgen_ty_1__bindgen_ty_2\">evtchn_status__bindgen_ty_1__bindgen_ty_2</a>","synthetic":false,"types":["xen_sys::evtchn_status__bindgen_ty_1__bindgen_ty_2"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.evtchn_bind_vcpu.html\" title=\"struct xen_sys::evtchn_bind_vcpu\">evtchn_bind_vcpu</a>","synthetic":false,"types":["xen_sys::evtchn_bind_vcpu"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.evtchn_unmask.html\" title=\"struct xen_sys::evtchn_unmask\">evtchn_unmask</a>","synthetic":false,"types":["xen_sys::evtchn_unmask"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.evtchn_reset.html\" title=\"struct xen_sys::evtchn_reset\">evtchn_reset</a>","synthetic":false,"types":["xen_sys::evtchn_reset"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.evtchn_init_control.html\" title=\"struct xen_sys::evtchn_init_control\">evtchn_init_control</a>","synthetic":false,"types":["xen_sys::evtchn_init_control"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.evtchn_expand_array.html\" title=\"struct xen_sys::evtchn_expand_array\">evtchn_expand_array</a>","synthetic":false,"types":["xen_sys::evtchn_expand_array"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.evtchn_set_priority.html\" title=\"struct xen_sys::evtchn_set_priority\">evtchn_set_priority</a>","synthetic":false,"types":["xen_sys::evtchn_set_priority"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.evtchn_fifo_control_block.html\" title=\"struct xen_sys::evtchn_fifo_control_block\">evtchn_fifo_control_block</a>","synthetic":false,"types":["xen_sys::evtchn_fifo_control_block"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.sched_shutdown.html\" title=\"struct xen_sys::sched_shutdown\">sched_shutdown</a>","synthetic":false,"types":["xen_sys::sched_shutdown"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.sched_poll.html\" title=\"struct xen_sys::sched_poll\">sched_poll</a>","synthetic":false,"types":["xen_sys::sched_poll"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.sched_remote_shutdown.html\" title=\"struct xen_sys::sched_remote_shutdown\">sched_remote_shutdown</a>","synthetic":false,"types":["xen_sys::sched_remote_shutdown"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.sched_watchdog.html\" title=\"struct xen_sys::sched_watchdog\">sched_watchdog</a>","synthetic":false,"types":["xen_sys::sched_watchdog"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.sched_pin_override.html\" title=\"struct xen_sys::sched_pin_override\">sched_pin_override</a>","synthetic":false,"types":["xen_sys::sched_pin_override"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.grant_entry.html\" title=\"struct xen_sys::grant_entry\">grant_entry</a>","synthetic":false,"types":["xen_sys::grant_entry"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.gnttab_map_grant_ref.html\" title=\"struct xen_sys::gnttab_map_grant_ref\">gnttab_map_grant_ref</a>","synthetic":false,"types":["xen_sys::gnttab_map_grant_ref"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.gnttab_unmap_grant_ref.html\" title=\"struct xen_sys::gnttab_unmap_grant_ref\">gnttab_unmap_grant_ref</a>","synthetic":false,"types":["xen_sys::gnttab_unmap_grant_ref"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.gnttab_setup_table.html\" title=\"struct xen_sys::gnttab_setup_table\">gnttab_setup_table</a>","synthetic":false,"types":["xen_sys::gnttab_setup_table"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.gnttab_dump_table.html\" title=\"struct xen_sys::gnttab_dump_table\">gnttab_dump_table</a>","synthetic":false,"types":["xen_sys::gnttab_dump_table"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.gnttab_transfer.html\" title=\"struct xen_sys::gnttab_transfer\">gnttab_transfer</a>","synthetic":false,"types":["xen_sys::gnttab_transfer"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.gnttab_query_size.html\" title=\"struct xen_sys::gnttab_query_size\">gnttab_query_size</a>","synthetic":false,"types":["xen_sys::gnttab_query_size"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.gnttab_unmap_and_replace.html\" title=\"struct xen_sys::gnttab_unmap_and_replace\">gnttab_unmap_and_replace</a>","synthetic":false,"types":["xen_sys::gnttab_unmap_and_replace"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.xen_netif_ctrl_request.html\" title=\"struct xen_sys::xen_netif_ctrl_request\">xen_netif_ctrl_request</a>","synthetic":false,"types":["xen_sys::xen_netif_ctrl_request"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.xen_netif_ctrl_response.html\" title=\"struct xen_sys::xen_netif_ctrl_response\">xen_netif_ctrl_response</a>","synthetic":false,"types":["xen_sys::xen_netif_ctrl_response"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.xen_netif_gref.html\" title=\"struct xen_sys::xen_netif_gref\">xen_netif_gref</a>","synthetic":false,"types":["xen_sys::xen_netif_gref"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.xen_netif_ctrl_sring__bindgen_ty_1__bindgen_ty_1.html\" title=\"struct xen_sys::xen_netif_ctrl_sring__bindgen_ty_1__bindgen_ty_1\">xen_netif_ctrl_sring__bindgen_ty_1__bindgen_ty_1</a>","synthetic":false,"types":["xen_sys::xen_netif_ctrl_sring__bindgen_ty_1__bindgen_ty_1"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.xen_netif_ctrl_sring__bindgen_ty_1__bindgen_ty_2.html\" title=\"struct xen_sys::xen_netif_ctrl_sring__bindgen_ty_1__bindgen_ty_2\">xen_netif_ctrl_sring__bindgen_ty_1__bindgen_ty_2</a>","synthetic":false,"types":["xen_sys::xen_netif_ctrl_sring__bindgen_ty_1__bindgen_ty_2"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.xen_netif_ctrl_front_ring.html\" title=\"struct xen_sys::xen_netif_ctrl_front_ring\">xen_netif_ctrl_front_ring</a>","synthetic":false,"types":["xen_sys::xen_netif_ctrl_front_ring"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.xen_netif_ctrl_back_ring.html\" title=\"struct xen_sys::xen_netif_ctrl_back_ring\">xen_netif_ctrl_back_ring</a>","synthetic":false,"types":["xen_sys::xen_netif_ctrl_back_ring"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.netif_tx_request.html\" title=\"struct xen_sys::netif_tx_request\">netif_tx_request</a>","synthetic":false,"types":["xen_sys::netif_tx_request"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.netif_extra_info__bindgen_ty_1__bindgen_ty_1.html\" title=\"struct xen_sys::netif_extra_info__bindgen_ty_1__bindgen_ty_1\">netif_extra_info__bindgen_ty_1__bindgen_ty_1</a>","synthetic":false,"types":["xen_sys::netif_extra_info__bindgen_ty_1__bindgen_ty_1"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.netif_extra_info__bindgen_ty_1__bindgen_ty_2.html\" title=\"struct xen_sys::netif_extra_info__bindgen_ty_1__bindgen_ty_2\">netif_extra_info__bindgen_ty_1__bindgen_ty_2</a>","synthetic":false,"types":["xen_sys::netif_extra_info__bindgen_ty_1__bindgen_ty_2"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.netif_extra_info__bindgen_ty_1__bindgen_ty_3.html\" title=\"struct xen_sys::netif_extra_info__bindgen_ty_1__bindgen_ty_3\">netif_extra_info__bindgen_ty_1__bindgen_ty_3</a>","synthetic":false,"types":["xen_sys::netif_extra_info__bindgen_ty_1__bindgen_ty_3"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.netif_tx_response.html\" title=\"struct xen_sys::netif_tx_response\">netif_tx_response</a>","synthetic":false,"types":["xen_sys::netif_tx_response"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.netif_rx_request.html\" title=\"struct xen_sys::netif_rx_request\">netif_rx_request</a>","synthetic":false,"types":["xen_sys::netif_rx_request"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.netif_rx_response.html\" title=\"struct xen_sys::netif_rx_response\">netif_rx_response</a>","synthetic":false,"types":["xen_sys::netif_rx_response"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.netif_tx_sring__bindgen_ty_1__bindgen_ty_1.html\" title=\"struct xen_sys::netif_tx_sring__bindgen_ty_1__bindgen_ty_1\">netif_tx_sring__bindgen_ty_1__bindgen_ty_1</a>","synthetic":false,"types":["xen_sys::netif_tx_sring__bindgen_ty_1__bindgen_ty_1"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.netif_tx_sring__bindgen_ty_1__bindgen_ty_2.html\" title=\"struct xen_sys::netif_tx_sring__bindgen_ty_1__bindgen_ty_2\">netif_tx_sring__bindgen_ty_1__bindgen_ty_2</a>","synthetic":false,"types":["xen_sys::netif_tx_sring__bindgen_ty_1__bindgen_ty_2"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.netif_tx_front_ring.html\" title=\"struct xen_sys::netif_tx_front_ring\">netif_tx_front_ring</a>","synthetic":false,"types":["xen_sys::netif_tx_front_ring"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.netif_tx_back_ring.html\" title=\"struct xen_sys::netif_tx_back_ring\">netif_tx_back_ring</a>","synthetic":false,"types":["xen_sys::netif_tx_back_ring"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.netif_rx_sring__bindgen_ty_1__bindgen_ty_1.html\" title=\"struct xen_sys::netif_rx_sring__bindgen_ty_1__bindgen_ty_1\">netif_rx_sring__bindgen_ty_1__bindgen_ty_1</a>","synthetic":false,"types":["xen_sys::netif_rx_sring__bindgen_ty_1__bindgen_ty_1"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.netif_rx_sring__bindgen_ty_1__bindgen_ty_2.html\" title=\"struct xen_sys::netif_rx_sring__bindgen_ty_1__bindgen_ty_2\">netif_rx_sring__bindgen_ty_1__bindgen_ty_2</a>","synthetic":false,"types":["xen_sys::netif_rx_sring__bindgen_ty_1__bindgen_ty_2"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.netif_rx_front_ring.html\" title=\"struct xen_sys::netif_rx_front_ring\">netif_rx_front_ring</a>","synthetic":false,"types":["xen_sys::netif_rx_front_ring"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.netif_rx_back_ring.html\" title=\"struct xen_sys::netif_rx_back_ring\">netif_rx_back_ring</a>","synthetic":false,"types":["xen_sys::netif_rx_back_ring"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.xencons_interface.html\" title=\"struct xen_sys::xencons_interface\">xencons_interface</a>","synthetic":false,"types":["xen_sys::xencons_interface"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.xsd_errors.html\" title=\"struct xen_sys::xsd_errors\">xsd_errors</a>","synthetic":false,"types":["xen_sys::xsd_errors"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.xsd_sockmsg.html\" title=\"struct xen_sys::xsd_sockmsg\">xsd_sockmsg</a>","synthetic":false,"types":["xen_sys::xsd_sockmsg"]},{"text":"impl Debug for <a class=\"struct\" href=\"xen_sys/struct.xenstore_domain_interface.html\" title=\"struct xen_sys::xenstore_domain_interface\">xenstore_domain_interface</a>","synthetic":false,"types":["xen_sys::xenstore_domain_interface"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()