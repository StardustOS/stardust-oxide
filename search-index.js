var searchIndex = JSON.parse('{\
"ahash":{"doc":"AHash is a hashing algorithm is intended to be a high …","t":[3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AHasher","CallHasher","RandomState","borrow","borrow","borrow_mut","borrow_mut","build_hasher","clone","clone","clone_into","clone_into","default","default","finish","fmt","fmt","from","from","generate_with","get_hash","into","into","new","new_with_keys","set_random_source","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_seed","with_seeds","write","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize"],"q":["ahash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A <code>Hasher</code> for hashing an arbitrary stream of bytes.","Provides a way to get an optimized hasher for a given data …","Provides a Hasher factory. This is typically used (e.g. by …","","","","","Constructs a new AHasher with keys based on this …","","","","","Constructs a new AHasher with fixed keys. If <code>std</code> is …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Allows for supplying seeds, but each time it is called the …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Use randomly generated keys","Creates a new hasher keyed to the provided key.","Provides an optional way to manually supply a source of …","","","","","","","","","Allows for explicitly setting a seed to used.","Allows for explicitly setting the seeds to used.","","","","","","",""],"i":[0,0,0,1,2,1,2,2,1,2,1,2,1,2,1,1,2,1,2,2,3,1,2,2,1,2,1,2,1,2,1,2,1,2,2,2,1,1,1,1,1,1,1],"f":[null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["ahasher",3]],[[["",0]],["ahasher",3]],[[["",0]],["randomstate",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["ahasher",3]],[[]],[[["",0]],["u64",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["u64",0],["u64",0],["u64",0],["u64",0]],["randomstate",3]],[[["",0],["",0]],["u64",0]],[[]],[[]],[[],["randomstate",3]],[[["u128",0],["u128",0]],["ahasher",3]],[[],["result",4,[["bool",0]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["usize",0]],["randomstate",3]],[[["u64",0],["u64",0],["u64",0],["u64",0]],["randomstate",3]],[[["",0]]],[[["",0],["u128",0]]],[[["",0],["u16",0]]],[[["",0],["u32",0]]],[[["",0],["u64",0]]],[[["",0],["u8",0]]],[[["",0],["usize",0]]]],"p":[[3,"AHasher"],[3,"RandomState"],[8,"CallHasher"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structures."],"i":[0],"f":[null],"p":[]},\
"buddy_system_allocator":{"doc":"","t":[3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["FrameAllocator","Heap","LockedFrameAllocator","LockedHeap","LockedHeapWithRescue","add_frame","add_to_heap","alloc","alloc","alloc","alloc","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","dealloc","dealloc","dealloc","dealloc","deref","deref","deref","empty","empty","fmt","from","from","from","from","from","init","insert","into","into","into","into","into","linked_list","new","new","new","new","new","stats_alloc_actual","stats_alloc_user","stats_total_bytes","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Iter","IterMut","LinkedList","ListNode","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","from","from","into","into","into","into","into_iter","into_iter","is_empty","iter","iter_mut","new","next","next","pop","pop","push","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value"],"q":["buddy_system_allocator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","buddy_system_allocator::linked_list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A frame allocator that uses buddy system, requiring a …","A heap that uses buddy system with configurable order.","A locked version of <code>FrameAllocator</code>","A locked version of <code>Heap</code>","A locked version of <code>Heap</code> with rescue before oom","Add a range of frame number [start, end) to the allocator","Add a range of memory [start, end) to the heap","Alloc a range of frames from the allocator, return the …","Alloc a range of memory from the heap satifying <code>layout</code> …","","","","","","","","","","","","","Dealloc a range of frames [frame, frame+count) from the …","Dealloc a range of memory from the heap","","","","","","Create an empty heap","Creates an empty heap","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Add a range of memory [start, end) to the heap","Add a range of frame to the allocator","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Provide the intrusive LinkedList","Create an empty frame allocator","Creates an empty heap","Create an empty heap","Creates an empty heap","Creates an empty heap","Return the number of bytes that are actually allocated","Return the number of bytes that user requests","Return the total number of bytes in the heap","","","","","","","","","","","","","","","","An iterator over the linked list","A mutable iterator over the linked list","An intrusive linked list","Represent a mutable node in <code>LinkedList</code>","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Return <code>true</code> if the list is empty","Return an iterator over the items in the list","Return an mutable iterator over the items in the list","Create a new LinkedList","","","Remove the node from the list","Try to remove the first item in the list","Push <code>item</code> to the front of the list","","","","","","","","","","","","","","Returns the pointed address"],"i":[0,0,0,0,0,1,2,1,2,3,4,1,5,2,3,4,1,5,2,3,4,1,2,3,4,5,3,4,2,3,2,1,5,2,3,4,2,1,1,5,2,3,4,0,1,5,2,3,4,2,2,2,1,5,2,3,4,1,5,2,3,4,1,5,2,3,4,0,0,0,0,6,7,8,9,6,7,8,9,9,9,9,6,7,8,9,6,7,8,9,6,8,9,9,9,9,6,8,7,9,9,9,6,7,8,9,6,7,8,9,6,7,8,9,7],"f":[null,null,null,null,null,[[["",0],["usize",0],["usize",0]]],[[["",0],["usize",0],["usize",0]]],[[["",0],["usize",0]],["option",4,[["usize",0]]]],[[["",0],["layout",3]],["result",4,[["nonnull",3,[["u8",0]]]]]],[[["",0],["layout",3]]],[[["",0],["layout",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["usize",0],["usize",0]]],[[["",0],["nonnull",3,[["u8",0]]],["layout",3]]],[[["",0],["layout",3]]],[[["",0],["layout",3]]],[[["",0]],["mutex",3]],[[["",0]]],[[["",0]]],[[]],[[]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["",0],["usize",0],["usize",0]]],[[["",0],["range",3,[["usize",0]]]]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[],["lockedframeallocator",3]],[[]],[[]],[[]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["linkedlist",3]],[[["",0],["",0]]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["iter",3]],[[["",0]],["itermut",3]],[[],["linkedlist",3]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]]],"p":[[3,"FrameAllocator"],[3,"Heap"],[3,"LockedHeap"],[3,"LockedHeapWithRescue"],[3,"LockedFrameAllocator"],[3,"Iter"],[3,"ListNode"],[3,"IterMut"],[3,"LinkedList"]]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","t":[6,4,8,6,4,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11],"n":["BE","BigEndian","ByteOrder","LE","LittleEndian","NativeEndian","NetworkEndian","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","default","default","eq","eq","fmt","fmt","from","from","from_slice_f32","from_slice_f32","from_slice_f32","from_slice_f64","from_slice_f64","from_slice_f64","from_slice_i128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_u128","from_slice_u128","from_slice_u128","from_slice_u16","from_slice_u16","from_slice_u16","from_slice_u32","from_slice_u32","from_slice_u32","from_slice_u64","from_slice_u64","from_slice_u64","hash","hash","into","into","partial_cmp","partial_cmp","read_f32","read_f32_into","read_f32_into_unchecked","read_f64","read_f64_into","read_f64_into_unchecked","read_i128","read_i128_into","read_i16","read_i16_into","read_i24","read_i32","read_i32_into","read_i48","read_i64","read_i64_into","read_int","read_int128","read_u128","read_u128","read_u128","read_u128_into","read_u128_into","read_u128_into","read_u16","read_u16","read_u16","read_u16_into","read_u16_into","read_u16_into","read_u24","read_u32","read_u32","read_u32","read_u32_into","read_u32_into","read_u32_into","read_u48","read_u64","read_u64","read_u64","read_u64_into","read_u64_into","read_u64_into","read_uint","read_uint","read_uint","read_uint128","read_uint128","read_uint128","try_from","try_from","try_into","try_into","type_id","type_id","write_f32","write_f32_into","write_f64","write_f64_into","write_i128","write_i128_into","write_i16","write_i16_into","write_i24","write_i32","write_i32_into","write_i48","write_i64","write_i64_into","write_i8_into","write_int","write_int128","write_u128","write_u128","write_u128","write_u128_into","write_u128_into","write_u128_into","write_u16","write_u16","write_u16","write_u16_into","write_u16_into","write_u16_into","write_u24","write_u32","write_u32","write_u32","write_u32_into","write_u32_into","write_u32_into","write_u48","write_u64","write_u64","write_u64","write_u64_into","write_u64_into","write_u64_into","write_uint","write_uint","write_uint","write_uint128","write_uint128","write_uint128"],"q":["byteorder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A type alias for <code>BigEndian</code>.","Defines big-endian serialization.","<code>ByteOrder</code> describes types that can serialize integers as …","A type alias for <code>LittleEndian</code>.","Defines little-endian serialization.","Defines system native-endian serialization.","Defines network byte order serialization.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given slice of IEEE754 single-precision (4 …","","","Converts the given slice of IEEE754 double-precision (8 …","","","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to a …","","","Converts the given slice of unsigned 16 bit integers to a …","","","Converts the given slice of unsigned 32 bit integers to a …","","","Converts the given slice of unsigned 64 bit integers to a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads a signed 128 bit integer from <code>buf</code>.","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 16 bit integer from <code>buf</code>.","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from <code>buf</code>.","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from <code>buf</code>.","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 16 bit integer from <code>buf</code>.","","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned n-bytes integer from <code>buf</code>.","","","Reads an unsigned n-bytes integer from <code>buf</code>.","","","","","","","","","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","",""],"i":[0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,3,1,2,3,1,2,3,3,3,3,3,1,2,3,1,2,3,1,2,3,1,2,1,2,1,2,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2,1,2,1,2,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,3,1,2,3,1,2,3,1,2,3,1,2],"f":[null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["bigendian",4]],[[["",0]],["littleendian",4]],[[["",0],["bigendian",4]],["ordering",4]],[[["",0],["littleendian",4]],["ordering",4]],[[],["bigendian",4]],[[],["littleendian",4]],[[["",0],["bigendian",4]],["bool",0]],[[["",0],["littleendian",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[["",0],["bigendian",4]],["option",4,[["ordering",4]]]],[[["",0],["littleendian",4]],["option",4,[["ordering",4]]]],[[],["f32",0]],[[]],[[]],[[],["f64",0]],[[]],[[]],[[],["i128",0]],[[]],[[],["i16",0]],[[]],[[],["i32",0]],[[],["i32",0]],[[]],[[],["i64",0]],[[],["i64",0]],[[]],[[["usize",0]],["i64",0]],[[["usize",0]],["i128",0]],[[],["u128",0]],[[],["u128",0]],[[],["u128",0]],[[]],[[]],[[]],[[],["u16",0]],[[],["u16",0]],[[],["u16",0]],[[]],[[]],[[]],[[],["u32",0]],[[],["u32",0]],[[],["u32",0]],[[],["u32",0]],[[]],[[]],[[]],[[],["u64",0]],[[],["u64",0]],[[],["u64",0]],[[],["u64",0]],[[]],[[]],[[]],[[["usize",0]],["u64",0]],[[["usize",0]],["u64",0]],[[["usize",0]],["u64",0]],[[["usize",0]],["u128",0]],[[["usize",0]],["u128",0]],[[["usize",0]],["u128",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["f32",0]]],[[]],[[["f64",0]]],[[]],[[["i128",0]]],[[]],[[["i16",0]]],[[]],[[["i32",0]]],[[["i32",0]]],[[]],[[["i64",0]]],[[["i64",0]]],[[]],[[]],[[["i64",0],["usize",0]]],[[["i128",0],["usize",0]]],[[["u128",0]]],[[["u128",0]]],[[["u128",0]]],[[]],[[]],[[]],[[["u16",0]]],[[["u16",0]]],[[["u16",0]]],[[]],[[]],[[]],[[["u32",0]]],[[["u32",0]]],[[["u32",0]]],[[["u32",0]]],[[]],[[]],[[]],[[["u64",0]]],[[["u64",0]]],[[["u64",0]]],[[["u64",0]]],[[]],[[]],[[]],[[["u64",0],["usize",0]]],[[["u64",0],["usize",0]]],[[["u64",0],["usize",0]]],[[["u128",0],["usize",0]]],[[["u128",0],["usize",0]]],[[["u128",0],["usize",0]]]],"p":[[4,"BigEndian"],[4,"LittleEndian"],[8,"ByteOrder"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[null],"p":[]},\
"const_random":{"doc":"","t":[14],"n":["const_random"],"q":["const_random"],"d":["Random constants"],"i":[0],"f":[null],"p":[]},\
"cty":{"doc":"Type aliases to C types like c_int for use with bindgen","t":[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6],"n":["c_char","c_double","c_float","c_int","c_long","c_longlong","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","int16_t","int32_t","int64_t","int8_t","intmax_t","intptr_t","ptrdiff_t","size_t","ssize_t","uint16_t","uint32_t","uint64_t","uint8_t","uintmax_t","uintptr_t"],"q":["cty","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[]},\
"hashbrown":{"doc":"This crate is a Rust port of Google’s high-performance …","t":[13,13,3,3,4,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,12,6,3,3,4,4,3,3,3,3,3,3,3,13,13,13,3,3,3,3,3,4,3,3,13,13,13,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AllocError","CapacityOverflow","HashMap","HashSet","TryReserveError","borrow","borrow_mut","clone","clone_into","eq","fmt","from","hash_map","hash_set","into","ne","to_owned","try_from","try_into","type_id","layout","DefaultHashBuilder","Drain","DrainFilter","Entry","EntryRef","HashMap","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Keys","Occupied","Occupied","Occupied","OccupiedEntry","OccupiedEntryRef","OccupiedError","RawEntryBuilder","RawEntryBuilderMut","RawEntryMut","RawOccupiedEntryMut","RawVacantEntryMut","Vacant","Vacant","Vacant","VacantEntry","VacantEntryRef","Values","ValuesMut","allocator","and_modify","and_modify","and_modify","and_replace_entry_with","and_replace_entry_with","and_replace_entry_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","contains_key","default","drain","drain_filter","drop","entry","entry","entry_ref","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hash","from_hash","from_iter","from_key","from_key","from_key_hashed_nocheck","from_key_hashed_nocheck","get","get","get","get","get_key_value","get_key_value","get_key_value_mut","get_key_value_mut","get_many_key_value_mut","get_many_key_value_unchecked_mut","get_many_mut","get_many_unchecked_mut","get_mut","get_mut","get_mut","get_mut","hasher","index","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_hashed_nocheck","insert_key","insert_unique_unchecked","insert_with_hasher","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_key","into_key","into_key_value","into_keys","into_mut","into_mut","into_mut","into_values","is_empty","iter","iter_mut","key","key","key","key","key","key","key","key_mut","keys","len","len","len","len","len","len","len","len","len","len","new","new_in","next","next","next","next","next","next","next","next","next","next","or_default","or_default","or_insert","or_insert","or_insert","or_insert_with","or_insert_with","or_insert_with","or_insert_with_key","or_insert_with_key","raw_entry","raw_entry_mut","remove","remove","remove","remove","remove_entry","remove_entry","remove_entry","remove_entry","replace_entry","replace_entry","replace_entry_with","replace_entry_with","replace_entry_with","replace_key","replace_key","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","values","values_mut","with_capacity","with_capacity_and_hasher","with_capacity_and_hasher_in","with_capacity_in","with_hasher","with_hasher_in","0","0","0","0","0","0","Difference","Drain","DrainFilter","HashSet","Intersection","IntoIter","Iter","SymmetricDifference","Union","allocator","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","default","difference","drain","drain_filter","drop","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_iter","get","get_or_insert","get_or_insert_owned","get_or_insert_with","hasher","insert","insert_unique_unchecked","intersection","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_disjoint","is_empty","is_subset","is_superset","iter","len","len","len","len","new","new_in","next","next","next","next","next","next","next","next","remove","replace","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_capacity","with_capacity_and_hasher","with_capacity_and_hasher_in","with_capacity_in","with_hasher","with_hasher_in"],"q":["hashbrown","","","","","","","","","","","","","","","","","","","","hashbrown::TryReserveError","hashbrown::hash_maphashbrown::hash_map::Entry","","hashbrown::hash_map::EntryRef","","hashbrown::hash_map::RawEntryMut","","hashbrown::hash_setd":["The memory allocator returned an error","Error due to the computed capacity exceeding the collection…","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","The error type for <code>try_reserve</code> methods.","","","","","","","Returns the argument unchanged.","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","Calls <code>U::from(self)</code>.","","","","","","The layout of the allocation request that failed.","Default hasher for <code>HashMap</code>.","A draining iterator over the entries of a <code>HashMap</code>.","A draining iterator over entries of a <code>HashMap</code> which don’…","A view into a single entry in a map, which may either be …","A view into a single entry in a map, which may either be …","A hash map implemented with quadratic probing and SIMD …","An owning iterator over the entries of a <code>HashMap</code>.","An owning iterator over the keys of a <code>HashMap</code>.","An owning iterator over the values of a <code>HashMap</code>.","An iterator over the entries of a <code>HashMap</code>.","A mutable iterator over the entries of a <code>HashMap</code>.","An iterator over the keys of a <code>HashMap</code>.","An occupied entry.","An occupied entry.","An occupied entry.","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","The error returned by <code>try_insert</code> when the key already …","A builder for computing where in a <code>HashMap</code> a key-value …","A builder for computing where in a <code>HashMap</code> a key-value …","A view into a single entry in a map, which may either be …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A vacant entry.","A vacant entry.","A vacant entry.","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","An iterator over the values of a <code>HashMap</code>.","A mutable iterator over the values of a <code>HashMap</code>.","Returns a reference to the underlying allocator.","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the map can hold without …","Clears the map, removing all key-value pairs. Keeps the …","","","","","","","","","","Returns <code>true</code> if the map contains a value for the specified …","Creates an empty <code>HashMap&lt;K, V, S, A&gt;</code>, with the <code>Default</code> …","Clears the map, returning all key-value pairs as an …","Drains elements which are true under the given predicate, …","","Gets the given key’s corresponding entry in the map for …","The entry in the map that was already occupied.","Gets the given key’s corresponding entry by reference in …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Examples","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>RawEntryMut</code> from the given hash.","Access an entry by hash.","","Creates a <code>RawEntryMut</code> from the given key.","Access an entry by key.","Creates a <code>RawEntryMut</code> from the given key and its hash.","Access an entry by a key and its hash.","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a reference to the key and value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a mutable reference to the key and value in the entry.","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Returns a reference to the map’s <code>BuildHasher</code>.","Returns a reference to the value corresponding to the …","Inserts a key-value pair into the map.","Sets the value of the entry, and returns a …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntryRef’s …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns the entry’s old …","Insert a key-value pair into the map without checking if …","Set the value of an entry with a custom hasher function.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a consuming iterator, that is, one that moves each …","","","","","","","","","","","Converts the entry into a mutable reference to the key in …","Take ownership of the key.","Take ownership of the key.","Converts the OccupiedEntry into a mutable reference to the …","Creates a consuming iterator visiting all the keys in …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntryRef into a mutable reference to …","Creates a consuming iterator visiting all the values in …","Returns <code>true</code> if the map contains no elements.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","Gets a reference to the key in the entry.","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Gets a mutable reference to the key in the entry.","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the map.","","","","","","","","","","Creates an empty <code>HashMap</code>.","Creates an empty <code>HashMap</code> using the given allocator.","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting, if empty, …","Ensures a value is in the entry by inserting, if empty, …","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","Removes a key from the map, returning the value at the key …","Takes the value out of the entry, and returns it.","Takes the value out of the entry, and returns it.","Takes the value out of the entry, and returns it.","Removes a key from the map, returning the stored key and …","Take the ownership of the key and value from the map.","Take the ownership of the key and value from the map.","Take the ownership of the key and value from the map.","Replaces the entry, returning the old key and value. The …","Replaces the entry, returning the old key and value. The …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Replaces the key in the hash map with the key used to …","Replaces the key in the hash map with the key used to …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","Shrinks the capacity of the map with a lower limit. It …","Shrinks the capacity of the map as much as possible. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to insert a key-value pair into the map, and returns …","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","","","","","","","","","","","","","","The value which was not inserted, because the entry was …","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary order.","Creates an empty <code>HashMap</code> with the specified capacity.","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> with the specified capacity using …","Creates an empty <code>HashMap</code> which will use the given hash …","Creates an empty <code>HashMap</code> which will use the given hash …","","","","","","","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>HashSet</code>.","A draining iterator over entries of a <code>HashSet</code> which don’…","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>HashSet</code>.","An iterator over the items of a <code>HashSet</code>.","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>HashSet</code>…","Returns a reference to the underlying allocator.","","","","","","","","","","","","","","","","","","","Returns the number of elements the set can hold without …","Clears the set, removing all values.","","","","","","","","","","","","","","Returns <code>true</code> if the set contains a value.","Creates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …","Visits the values representing the difference, i.e., the …","Clears the set, returning all elements in an iterator.","Drains elements which are true under the given predicate, …","","","","","","","","","","","","","Returns the argument unchanged.","","Examples","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a reference to the value in the set, if any, that …","Inserts the given <code>value</code> into the set if it is not present, …","Inserts an owned copy of the given <code>value</code> into the set if …","Inserts a value computed from <code>f</code> into the set if the given …","Returns a reference to the set’s <code>BuildHasher</code>.","Adds a value to the set.","Insert a value the set without checking if the value …","Visits the values representing the intersection, i.e., the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a consuming iterator, that is, one that moves each …","","","","","","","","","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","Returns <code>true</code> if the set contains no elements.","Returns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…","Returns <code>true</code> if the set is a superset of another, i.e., …","An iterator visiting all elements in arbitrary order. The …","Returns the number of elements in the set.","","","","Creates an empty <code>HashSet</code>.","Creates an empty <code>HashSet</code>.","","","","","","","","","Removes a value from the set. Returns whether the value was","Adds a value to the set, replacing the existing value, if …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","Shrinks the capacity of the set with a lower limit. It …","Shrinks the capacity of the set as much as possible. It …","","","","","","","","","Visits the values representing the symmetric difference, …","Removes and returns the value in the set, if any, that is …","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","Visits the values representing the union, i.e., all the …","Creates an empty <code>HashSet</code> with the specified capacity.","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashSet</code> with the specified capacity.","Creates a new empty hash set which will use the given …","Creates a new empty hash set which will use the given …"],"i":[1,1,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,3,4,5,0,0,0,0,0,0,0,0,3,4,5,0,0,0,0,6,3,4,5,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,3,18,19,20,4,21,22,5,23,24,25,6,7,8,9,10,11,12,13,14,15,16,17,3,18,19,20,4,21,22,5,23,24,25,6,6,6,7,12,13,6,6,7,12,13,6,6,6,6,15,6,25,6,6,6,6,6,7,8,9,10,11,12,13,14,16,17,3,18,19,20,4,21,22,5,23,24,25,25,6,6,7,8,9,10,11,12,13,14,15,16,17,3,18,19,20,4,21,22,5,23,24,25,17,20,6,17,20,17,20,6,18,21,23,6,18,6,18,6,6,6,6,6,18,21,23,6,6,6,3,18,19,4,21,22,5,23,24,19,18,6,19,6,7,8,9,10,11,12,13,14,15,16,17,3,18,19,20,4,21,22,5,23,24,25,6,7,8,9,10,11,12,13,14,15,16,18,22,24,18,6,18,21,23,6,6,6,6,18,4,21,22,5,23,24,18,6,6,7,8,9,10,11,12,13,14,16,6,6,7,8,9,10,11,12,13,14,15,16,4,5,3,4,5,3,4,5,4,5,6,6,6,18,21,23,6,18,21,23,21,23,18,21,23,21,23,6,6,6,6,7,8,9,10,11,12,13,14,15,16,6,7,12,13,25,6,7,8,9,10,11,12,13,14,15,16,17,3,18,19,20,4,21,22,5,23,24,25,6,6,7,8,9,10,11,12,13,14,15,16,17,3,18,19,20,4,21,22,5,23,24,25,6,6,7,8,9,10,11,12,13,14,15,16,17,3,18,19,20,4,21,22,5,23,24,25,25,6,6,6,6,6,6,6,6,26,27,28,29,30,31,0,0,0,0,0,0,0,0,0,32,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,32,32,33,37,38,39,40,32,32,33,37,38,39,40,32,32,32,32,32,36,32,32,32,32,33,34,35,37,38,39,40,32,32,32,33,34,35,36,37,38,39,40,32,32,32,32,32,32,32,32,32,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,32,32,32,32,32,33,34,35,32,32,33,34,35,36,37,38,39,40,32,32,32,32,32,32,33,34,35,36,37,38,39,40,32,32,32,33,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,32,33,34,35,36,37,38,39,40,32,32,32,32,32,32,32],"f":[null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["tryreserveerror",4]],[[["",0],["",0]]],[[["",0],["tryreserveerror",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],null,null,[[]],[[["",0],["tryreserveerror",4]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["usize",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]],["bool",0]],[[]],[[["",0]],["drain",3]],[[["",0]],["drainfilter",3]],[[["",0]]],[[["",0]],["entry",4]],null,[[["",0],["",0]],["entryref",4,[["sized",8]]]],[[["",0],["",0]],["bool",0]],[[["",0],["intoiterator",8]]],[[["",0],["intoiterator",8]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",0]],["rawentrymut",4]],[[["u64",0]],["option",4]],[[["intoiterator",8]]],[[["",0]],["rawentrymut",4]],[[["",0]],["option",4]],[[["u64",0],["",0]],["rawentrymut",4]],[[["u64",0],["",0]],["option",4]],[[["",0],["",0]],["option",4]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["",0]],["option",4]],[[["",0]]],[[["",0],["",0]],["option",4]],[[["",0]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0],["",0]],["option",4]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["",0]],["",0]],[[["",0]],["option",4]],[[],["rawoccupiedentrymut",3]],[[["",0]]],[[]],[[],["occupiedentry",3]],[[["",0]]],[[],["",0]],[[],["occupiedentryref",3]],[[["",0]]],[[],["",0]],[[["u64",0]]],[[["",0]]],[[["",0]]],[[["u64",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["",0]],[[]],[[]],[[]],[[],["intokeys",3]],[[],["",0]],[[],["",0]],[[],["",0]],[[],["intovalues",3]],[[["",0]],["bool",0]],[[["",0]],["iter",3]],[[["",0]],["itermut",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["keys",3]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[]],[[]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[],["",0]],[[],["",0]],[[]],[[],["",0]],[[],["",0]],[[]],[[["fnonce",8]],["",0]],[[["fnonce",8]],["",0]],[[["fnonce",8]],["",0]],[[["fnonce",8]],["",0]],[[["",0]],["rawentrybuilder",3]],[[["",0]],["rawentrybuildermut",3]],[[["",0],["",0]],["option",4]],[[]],[[]],[[]],[[["",0],["",0]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["rawentrymut",4]],[[],["entry",4]],[[],["entryref",4]],[[]],[[]],[[["",0],["usize",0]]],[[["",0]]],[[["",0],["usize",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["result",4,[["occupiederror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0],["usize",0]],["result",4,[["tryreserveerror",4]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["values",3]],[[["",0]],["valuesmut",3]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["usize",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]],["bool",0]],[[]],[[["",0],["",0]],["difference",3]],[[["",0]],["drain",3]],[[["",0]],["drainfilter",3]],[[["",0]]],[[["",0],["",0]],["bool",0]],[[["",0],["intoiterator",8]]],[[["",0],["intoiterator",8]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[["hashmap",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]]],[[["",0],["",0]],["option",4]],[[["",0]],["",0]],[[["",0],["",0]],["",0]],[[["",0],["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["bool",0]],[[["",0]],["",0]],[[["",0],["",0]],["intersection",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0]],["iter",3]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[]],[[]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0],["",0]],["bool",0]],[[["",0]],["option",4]],[[["",0],["usize",0]]],[[["",0]]],[[["",0],["usize",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["",0]],["symmetricdifference",3]],[[["",0],["",0]],["option",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0],["usize",0]],["result",4,[["tryreserveerror",4]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["",0]],["union",3]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[]],[[]]],"p":[[4,"TryReserveError"],[13,"AllocError"],[4,"RawEntryMut"],[4,"Entry"],[4,"EntryRef"],[3,"HashMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"IntoKeys"],[3,"IntoValues"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"DrainFilter"],[3,"ValuesMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"OccupiedEntryRef"],[3,"VacantEntryRef"],[3,"OccupiedError"],[13,"Occupied"],[13,"Vacant"],[13,"Occupied"],[13,"Vacant"],[13,"Occupied"],[13,"Vacant"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"DrainFilter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":[8,5,14],"n":["LazyStatic","initialize","lazy_static"],"q":["lazy_static","",""],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[null,[[["",0]]],null],"p":[]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":[16,16,8,16,16,3,3,18,18,18,18,16,16,3,3,3,3,3,3,8,8,8,3,8,8,8,8,8,8,8,8,8,8,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,10,10,11,11,11,10,10,10,10,10,10,10,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,10,10,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11],"n":["Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_exclusive","bump_shared","bump_shared","bump_upgradable","bump_upgradable","const_new","const_new","const_new","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked_exclusive","is_locked_exclusive","is_locked_exclusive","is_owned_by_current_thread","is_owned_by_current_thread","lock","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","map","map","map","map","map","map","map","map","mutex","new","new","new","nonzero_thread_id","raw","raw","raw","read","read_recursive","remutex","rwlock","rwlock","rwlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upgradable_read","upgrade","upgrade","write"],"q":["lock_apid":["Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a lock …","Marker type which indicates that the Guard type for a lock …","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support fair …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support locking with …","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared lock …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable read …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock procotol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock procotol.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code> object.","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if …","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The inner …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into a …","Locks this <code>RwLock</code> with exclusive write access, blocking …"],"i":[1,2,0,3,4,0,0,3,5,6,4,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,21,21,10,6,13,16,17,18,22,22,22,22,23,23,9,12,15,9,12,15,9,12,15,10,11,13,14,16,17,18,19,20,10,11,17,20,24,17,18,25,17,25,10,11,13,14,16,17,18,19,20,9,10,10,11,11,12,13,13,14,14,15,16,16,17,17,18,18,19,19,20,20,9,12,9,12,15,15,15,15,7,8,9,9,9,10,11,6,12,12,12,13,14,15,15,15,16,17,18,19,20,9,12,15,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,9,12,15,3,3,9,6,12,4,4,15,4,4,15,6,12,3,9,6,12,4,4,26,27,10,11,13,14,16,17,19,20,10,9,12,15,5,9,12,15,15,15,13,16,17,18,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,3,9,6,12,4,2,2,1,9,6,12,4,2,26,28,28,2,1,9,6,12,27,29,29,10,11,13,14,16,17,19,20,15,15,15,15,15,15,15,15,15,27,18,29,18,29,18,15,15,15,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,3,6,4,22,21,10,11,6,13,14,16,17,18,19,20,4,22,27,23,10,13,16,17,18,10,13,16,17,18,15,27,18,15],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["mutex",3]],[[],["reentrantmutex",3]],[[],["rwlock",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["mutex",3]],[[],["reentrantmutex",3]],[[],["rwlock",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[],["rwlockreadguard",3]],[[],["rwlockreadguard",3]],[[["",0]]],[[],["rwlockupgradablereadguard",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[]],[[]],[[["never",0]]],[[]],[[],["mutex",3]],[[]],[[]],[[]],[[["never",0]]],[[],["reentrantmutex",3]],[[]],[[]],[[]],[[],["rwlock",3]],[[["never",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]]],[[["",0]],["mutexguard",3]],[[["",0]]],[[["",0]],["reentrantmutexguard",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["mappedmutexguard",3,[["sized",8]]]],[[],["mappedmutexguard",3,[["sized",8]]]],[[],["mappedreentrantmutexguard",3,[["sized",8]]]],[[],["mappedreentrantmutexguard",3,[["sized",8]]]],[[],["mappedrwlockreadguard",3,[["sized",8]]]],[[],["mappedrwlockwriteguard",3,[["sized",8]]]],[[],["mappedrwlockreadguard",3,[["sized",8]]]],[[],["mappedrwlockwriteguard",3,[["sized",8]]]],[[["",0]],["mutex",3]],[[],["mutex",3]],[[],["reentrantmutex",3]],[[],["rwlock",3]],[[["",0]],["nonzerousize",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["rwlockreadguard",3]],[[["",0]],["rwlockreadguard",3]],[[["",0]],["reentrantmutex",3]],[[["",0]],["rwlock",3]],[[["",0]],["rwlock",3]],[[["",0]],["rwlock",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["mutexguard",3]]]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["reentrantmutexguard",3]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["mutexguard",3]]]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["reentrantmutexguard",3]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["mutexguard",3]]]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["reentrantmutexguard",3]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["result",4,[["mappedmutexguard",3,[["sized",8]]]]]],[[],["result",4,[["mappedmutexguard",3,[["sized",8]]]]]],[[],["result",4,[["mappedreentrantmutexguard",3,[["sized",8]]]]]],[[],["result",4,[["mappedreentrantmutexguard",3,[["sized",8]]]]]],[[],["result",4,[["mappedrwlockreadguard",3,[["sized",8]]]]]],[[],["result",4,[["mappedrwlockwriteguard",3,[["sized",8]]]]]],[[],["result",4,[["mappedrwlockreadguard",3,[["sized",8]]]]]],[[],["result",4,[["mappedrwlockwriteguard",3,[["sized",8]]]]]],[[["",0]],["option",4,[["rwlockreadguard",3]]]],[[["",0]],["option",4,[["rwlockreadguard",3]]]],[[["",0]],["option",4,[["rwlockreadguard",3]]]],[[["",0]],["option",4,[["rwlockreadguard",3]]]],[[["",0]],["option",4,[["rwlockreadguard",3]]]],[[["",0]],["option",4,[["rwlockreadguard",3]]]],[[["",0]],["option",4,[["rwlockupgradablereadguard",3]]]],[[["",0]],["option",4,[["rwlockupgradablereadguard",3]]]],[[["",0]],["option",4,[["rwlockupgradablereadguard",3]]]],[[["",0]],["bool",0]],[[],["result",4,[["rwlockwriteguard",3]]]],[[["",0]],["bool",0]],[[],["result",4,[["rwlockwriteguard",3]]]],[[["",0]],["bool",0]],[[],["result",4,[["rwlockwriteguard",3]]]],[[["",0]],["option",4,[["rwlockwriteguard",3]]]],[[["",0]],["option",4,[["rwlockwriteguard",3]]]],[[["",0]],["option",4,[["rwlockwriteguard",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[]],[[]],[[["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["rwlockupgradablereadguard",3]],[[["",0]]],[[],["rwlockwriteguard",3]],[[["",0]],["rwlockwriteguard",3]]],"p":[[8,"RawMutexTimed"],[8,"RawRwLockTimed"],[8,"RawMutex"],[8,"RawRwLock"],[8,"GetThreadId"],[3,"RawReentrantMutex"],[3,"GuardSend"],[3,"GuardNoSend"],[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"MappedReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableReadGuard"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawMutexFair"],[8,"RawRwLockFair"],[8,"RawRwLockUpgradeFair"],[8,"RawRwLockDowngrade"],[8,"RawRwLockUpgradeDowngrade"],[8,"RawRwLockRecursive"],[8,"RawRwLockUpgrade"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgradeTimed"]]},\
"log":{"doc":"A lightweight logging facade.","t":[13,13,13,13,13,13,4,4,8,3,3,13,3,3,3,17,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,10,11,11,11,11,11,11,11,14,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,14,14,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14],"n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","ge","ge","ge","ge","gt","gt","gt","gt","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","le","le","le","le","level","level","level","level","line","line","log","log","log_enabled","logger","lt","lt","lt","lt","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","ne","ne","ne","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":["logd":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","","","","","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","","","","","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","","","","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[1,2,1,2,1,2,0,0,0,0,0,2,0,0,0,0,0,1,2,1,2,3,4,1,2,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,4,6,3,5,1,2,3,5,1,2,5,6,0,9,1,1,2,2,5,6,8,0,3,4,3,4,9,1,1,2,2,3,4,5,6,7,7,8,8,1,2,3,4,5,6,7,8,1,2,1,1,2,2,1,1,2,2,1,2,5,6,0,1,2,3,4,5,6,7,8,1,2,1,1,2,2,3,4,5,6,3,4,9,0,0,0,1,1,2,2,1,2,0,3,4,3,4,3,4,5,6,8,4,6,1,1,2,2,5,6,0,0,0,3,4,5,6,2,1,0,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["arguments",3]],[[["",0],["arguments",3]],["recordbuilder",3]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["record",3]],[[["",0]],["metadata",3]],[[],["recordbuilder",3]],[[],["metadatabuilder",3]],[[["",0]],["level",4]],[[["",0]],["levelfilter",4]],[[["",0]],["record",3]],[[["",0]],["metadata",3]],[[["",0],["level",4]],["ordering",4]],[[["",0],["levelfilter",4]],["ordering",4]],[[["",0],["metadata",3]],["ordering",4]],[[["",0],["metadatabuilder",3]],["ordering",4]],null,[[["",0],["metadata",3]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["level",4]],["bool",0]],[[["",0],["level",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["metadata",3]],["bool",0]],[[["",0],["metadatabuilder",3]],["bool",0]],[[["",0],["parselevelerror",3]],["bool",0]],null,[[["",0]],["option",4,[["str",0]]]],[[["",0],["option",4,[["str",0]]]],["recordbuilder",3]],[[["",0]],["option",4,[["str",0]]]],[[["",0],["option",4,[["str",0]]]],["recordbuilder",3]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4,[["level",4]]]],[[["str",0]],["result",4,[["levelfilter",4]]]],[[["",0],["level",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["level",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["level",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["level",4]],["bool",0]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["level",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["level",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0]],["level",4]],[[["",0],["level",4]],["recordbuilder",3]],[[["",0]],["level",4]],[[["",0],["level",4]],["metadatabuilder",3]],[[["",0]],["option",4,[["u32",0]]]],[[["",0],["option",4,[["u32",0]]]],["recordbuilder",3]],[[["",0],["record",3]]],null,null,[[],["log",8]],[[["",0],["level",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["level",4]],["bool",0]],[[],["level",4]],[[],["levelfilter",4]],[[],["levelfilter",4]],[[["",0]],["metadata",3]],[[["",0],["metadata",3]],["recordbuilder",3]],[[["",0]],["option",4,[["str",0]]]],[[["",0],["option",4,[["str",0]]]],["recordbuilder",3]],[[["",0]],["option",4,[["str",0]]]],[[["",0],["option",4,[["str",0]]]],["recordbuilder",3]],[[["",0],["metadata",3]],["bool",0]],[[["",0],["metadatabuilder",3]],["bool",0]],[[["",0],["parselevelerror",3]],["bool",0]],[[],["recordbuilder",3]],[[],["metadatabuilder",3]],[[["",0],["levelfilter",4]],["option",4,[["ordering",4]]]],[[["",0],["level",4]],["option",4,[["ordering",4]]]],[[["",0],["levelfilter",4]],["option",4,[["ordering",4]]]],[[["",0],["level",4]],["option",4,[["ordering",4]]]],[[["",0],["metadata",3]],["option",4,[["ordering",4]]]],[[["",0],["metadatabuilder",3]],["option",4,[["ordering",4]]]],[[["log",8]],["result",4,[["setloggererror",3]]]],[[["log",8]],["result",4,[["setloggererror",3]]]],[[["levelfilter",4]]],[[["",0]],["str",0]],[[["",0],["str",0]],["recordbuilder",3]],[[["",0]],["str",0]],[[["",0],["str",0]],["metadatabuilder",3]],[[["",0]],["option",4,[["level",4]]]],[[["",0]],["levelfilter",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"],[8,"Log"]]},\
"managed":{"doc":"A library that provides a way to logically own objects, …","t":[13,13,13,13,13,4,4,4,4,4,13,13,13,13,13,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12],"n":["Borrowed","Borrowed","Borrowed","Borrowed","Borrowed","Managed","ManagedMap","ManagedMapIter","ManagedMapIterMut","ManagedSlice","Owned","Owned","Owned","Owned","Owned","SlotIndex","SlotKey","SlotMap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get_mut","get_mut","hash","hash","insert","insert","into","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","iter","iter_mut","len","ne","ne","new","next","next","range","remove","remove","reserve","size_hint","size_hint","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0"],"q":["managed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","managed::Managed","","managed::ManagedMap","","managed::ManagedMapIter","","managed::ManagedMapIterMut","","managed::ManagedSlice",""],"d":["Borrowed variant.","Borrowed variant.","Borrowed variant.","Borrowed variant.","Borrowed variant.","A managed object.","A managed map.","","","A managed slice.","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","Provides links between slots and elements.","An index into a slotmap.","Provides a slotmap based on external memory.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve a value by index.","","Retrieve a mutable value by index.","","","","Try to insert a value into the map.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","ManagedMap contains no elements?","","","Returns the number of elements in the ManagedMap.","","","Create a slot map.","","","","Remove an element.","","Reserve a new entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,4,5,0,0,0,0,0,1,2,3,4,5,0,0,0,1,2,6,3,4,5,7,8,1,2,6,3,4,5,7,8,3,7,8,7,8,7,8,1,2,1,2,7,8,1,2,3,7,8,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,6,3,3,3,4,5,7,8,6,3,6,3,7,8,6,3,1,2,6,3,4,5,7,8,4,5,3,3,3,3,7,8,6,4,5,3,6,3,6,4,5,7,8,1,2,6,3,4,5,7,8,1,2,6,3,4,5,7,8,1,2,6,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["slot",3]],[[["",0]],["key",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["slot",3]],[[],["key",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["slot",3]],["bool",0]],[[["",0],["key",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["vec",3]]],[[["box",3]]],[[["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3]]],[[]],[[]],[[]],[[]],[[]],[[["btreemap",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["key",3]],["option",4]],[[["",0],["",0]],["option",4]],[[["",0],["key",3]],["option",4]],[[["",0],["",0]],["option",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["option",4,[["key",3]]]],[[["",0]],["result",4,[["option",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["iter",4]],[[["",0]],["itermut",4]],[[["",0]],["usize",0]],[[["",0],["slot",3]],["bool",0]],[[["",0],["key",3]],["bool",0]],[[["slice",4],["slice",4,[["slot",3]]]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["range",3]],[[["",0],["key",3]],["option",4]],[[["",0],["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null],"p":[[4,"Managed"],[4,"ManagedSlice"],[4,"ManagedMap"],[4,"ManagedMapIter"],[4,"ManagedMapIterMut"],[3,"SlotMap"],[3,"SlotIndex"],[3,"SlotKey"],[13,"Borrowed"],[13,"Owned"],[13,"Borrowed"],[13,"Owned"],[13,"Borrowed"],[13,"Owned"],[13,"Borrowed"],[13,"Owned"],[13,"Borrowed"],[13,"Owned"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members and …","t":[14,14,14,14,14],"n":["offset_of","offset_of_tuple","raw_field","raw_field_tuple","span_of"],"q":["memoffset","","","",""],"d":["Calculates the offset of the specified field from the …","Calculates the offset of the specified field from the …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Produces a range instance representing the sub-slice …"],"i":[0,0,0,0,0],"f":[null,null,null,null,null],"p":[]},\
"once_cell":{"doc":"Overview","t":[0,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["race","unsync","OnceBool","OnceBox","OnceNonZeroUsize","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","default","default","drop","fmt","fmt","fmt","from","from","from","get","get","get","get_or_init","get_or_init","get_or_init","get_or_try_init","get_or_try_init","get_or_try_init","into","into","into","new","new","new","set","set","set","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","default","deref","deref_mut","eq","fmt","fmt","force","from","from","from","from","get","get_mut","get_or_init","get_or_try_init","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id"],"q":["once_cell","","once_cell::race","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","once_cell::unsync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Thread-safe, non-blocking, “first one wins” flavor of …","Single-threaded version of <code>OnceCell</code>.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets the underlying value.","Gets the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","","","","","","","","","","A value which is initialized on the first access.","A cell which can be written to only once. It is not thread …","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","","","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets a mutable reference to the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value.","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","",""],"i":[0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,4,5,4,5,4,4,4,5,5,5,4,4,5,5,4,4,4,5,4,4,4,4,4,5,4,5,4,5,4,4,4,4,5,4,4,5,4,5],"f":[null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[],["oncenonzerousize",3]],[[],["oncebool",3]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["",0]],["option",4]],[[["",0]],["option",4,[["nonzerousize",3]]]],[[["",0]],["option",4,[["bool",0]]]],[[["",0]],["",0]],[[["",0]],["nonzerousize",3]],[[["",0]],["bool",0]],[[["",0]],["result",4]],[[["",0]],["result",4,[["nonzerousize",3]]]],[[["",0]],["result",4,[["bool",0]]]],[[]],[[]],[[]],[[],["oncebox",3]],[[],["oncenonzerousize",3]],[[],["oncebool",3]],[[["",0],["box",3]],["result",4,[["box",3]]]],[[["",0],["nonzerousize",3]],["result",4]],[[["",0],["bool",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["oncecell",3]],[[["",0],["",0]]],[[]],[[],["lazy",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["lazy",3]],["",0]],[[]],[[["never",0]]],[[]],[[]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["",0]],[[["",0]],["result",4]],[[]],[[]],[[],["option",4]],[[["lazy",3]],["result",4]],[[],["oncecell",3]],[[],["lazy",3]],[[["",0]],["result",4]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"OnceBox"],[3,"OnceNonZeroUsize"],[3,"OnceBool"],[3,"OnceCell"],[3,"Lazy"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of …","t":[4,3,8,11,11,11,11,14,11,11,11,11,11,11,11,5,11,11,11,10,11,11,11,11,11,11,11,11],"n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":["scopeguard","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,1,2,1,2,0,1,1,1,1,2,1,2,0,1,2,1,3,2,1,2,1,2,1,2,1],"f":[null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[],["scopeguard",3,[["always",4]]]],[[]],[[]],[[]],[[],["bool",0]],[[],["bool",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["scopeguard",3]]],"p":[[3,"ScopeGuard"],[4,"Always"],[8,"Strategy"]]},\
"smoltcp":{"doc":"The <em>smoltcp</em> library is built in a layered structure, with …","t":[13,13,4,13,13,13,13,13,13,6,13,13,13,11,11,11,11,11,11,11,11,0,11,0,0,0,0,11,11,11,11,11,0,3,18,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,4,3,8,3,13,13,3,3,8,13,13,3,4,13,4,4,8,3,13,13,8,16,3,13,13,8,16,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,12,8,13,13,13,13,13,13,13,13,4,13,13,13,3,6,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,3,18,3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,18,13,13,13,4,4,3,4,13,18,18,13,13,13,13,13,13,13,13,13,13,13,13,17,13,13,13,13,13,13,13,13,13,13,13,13,3,3,13,4,3,13,13,13,13,13,4,13,13,13,13,13,13,13,13,17,17,17,17,13,4,4,4,3,4,4,4,4,13,4,4,3,4,4,4,13,3,4,4,4,4,3,4,4,4,13,13,13,13,13,13,3,3,3,3,13,13,13,13,13,13,3,3,13,3,3,3,3,13,3,4,4,4,13,3,3,13,3,4,18,18,18,13,18,17,18,18,13,13,13,13,13,3,13,13,4,13,13,13,3,3,4,4,3,3,3,4,3,13,13,13,13,13,13,13,13,13,13,13,13,18,18,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,2,13,13,13,18,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,18,13,13,13,13,13,13,13,13,17,13,13,13,4,4,3,3,3,13,13,13,13,13,13,13,17,18,18,18,13,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11],"n":["Checksum","Dropped","Error","Exhausted","Finished","Fragmented","Illegal","Malformed","NotSupported","Result","Truncated","Unaddressable","Unrecognized","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","iface","into","phy","socket","storage","time","to_owned","to_string","try_from","try_into","type_id","wire","Context","EMPTY","Interface","InterfaceBuilder","Neighbor","NeighborCache","Route","Routes","SocketHandle","SocketStorage","add_default_ipv4_route","add_default_ipv6_route","add_socket","any_ip","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","default","device","device_mut","eq","expires_at","fill","finalize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_socket","get_socket_and_context","hardware_addr","hardware_addr","has_ip_addr","has_multicast_group","has_multicast_group","has_solicited_node","hash","into","into","into","into","into","into","into","into","into","ip_addrs","ip_addrs","ipv4_addr","ipv4_address","ipv4_address","ipv4_multicast_groups","join_multicast_group","leave_multicast_group","ne","neighbor_cache","new","new","new","new_ipv4_gateway","new_ipv6_gateway","new_with_limit","partial_cmp","poll","poll_at","poll_delay","preferred_until","random_seed","remove_default_ipv4_route","remove_default_ipv6_route","remove_socket","routes","routes","routes_mut","set_hardware_addr","sockets","sockets_mut","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update_ip_addrs","via_router","Both","Both","Checksum","ChecksumCapabilities","Device","DeviceCapabilities","Ethernet","Ethernet","FaultInjector","FuzzInjector","Fuzzer","Ieee802154WithFcs","Ip","Loopback","Medium","None","PcapLinkType","PcapMode","PcapSink","PcapWriter","Rx","RxOnly","RxToken","RxToken","Tracer","Tx","TxOnly","TxToken","TxToken","Unknown","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket_interval","capabilities","capabilities","capabilities","capabilities","capabilities","capabilities","checksum","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consume","consume","corrupt_chance","default","default","default","default","drop_chance","eq","eq","eq","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","fuzz_packet","get_mut","get_mut","get_ref","get_ref","global_header","global_header","icmpv4","icmpv6","ignored","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","ip_mtu","ipv4","max_burst_size","max_packet_size","max_rx_rate","max_transmission_unit","max_tx_rate","medium","ne","new","new","new","new","new","packet","packet","packet_header","packet_header","partial_cmp","receive","receive","receive","receive","receive","receive","rx","set_bucket_interval","set_corrupt_chance","set_drop_chance","set_max_packet_size","set_max_rx_rate","set_max_tx_rate","tcp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transmit","transmit","transmit","transmit","transmit","transmit","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udp","write","write_u16","write_u16","write_u32","write_u32","0","AnySocket","CloseWait","Closed","Closing","Established","FinWait1","FinWait2","LastAck","Listen","Socket","SynReceived","SynSent","Tcp","TcpSocket","TcpSocketBuffer","TcpState","TimeWait","abort","ack_delay","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_recv","can_send","clone","clone_into","close","connect","downcast","downcast","eq","fmt","fmt","fmt","fmt","from","from","from","hop_limit","into","into","into","is_active","is_listening","is_open","keep_alive","listen","local_endpoint","may_recv","may_send","nagle_enabled","new","peek","peek_slice","recv","recv_capacity","recv_queue","recv_slice","remote_endpoint","send","send_capacity","send_queue","send_slice","set_ack_delay","set_hop_limit","set_keep_alive","set_nagle_enabled","set_timeout","state","timeout","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","write_str","0","Assembler","EMPTY","PacketBuffer","PacketMetadata","Resettable","RingBuffer","add","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone_into","contiguous_window","dequeue","dequeue_allocated","dequeue_many","dequeue_many_with","dequeue_one","dequeue_one_with","dequeue_slice","dequeue_with","enqueue","enqueue_many","enqueue_many_with","enqueue_one","enqueue_one_with","enqueue_slice","enqueue_unallocated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_allocated","get_unallocated","into","into","into","into","is_empty","is_empty","is_empty","is_full","is_full","iter_data","len","new","new","new","packet_capacity","payload_capacity","peek","read_allocated","remove_front","reset","reset","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","window","write_unallocated","Duration","Instant","ZERO","add","add","add_assign","add_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","div","div_assign","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from_micros","from_micros","from_micros_const","from_millis","from_millis","from_millis_const","from_secs","from_secs","into","into","micros","micros","millis","millis","mul","mul_assign","ne","ne","partial_cmp","partial_cmp","secs","secs","shl","shl_assign","shr","shr_assign","sub","sub","sub","sub_assign","sub_assign","to_owned","to_owned","to_string","to_string","total_micros","total_micros","total_millis","total_millis","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","ADDRCONF","AddrUnreachable","AdminProhibit","Arp","ArpHardware","ArpOperation","ArpPacket","ArpRepr","AtPointer","BROADCAST","BROADCAST","BadLength","BeyondScope","CommProhibited","Discard","DiscardSendAll","DiscardSendUnicast","DstHostUnknown","DstNetUnknown","DstUnreachable","DstUnreachable","DstUnreachable","DstUnreachable","ETHERNET_HEADER_LEN","EchoReply","EchoReply","EchoReply","EchoReply","EchoRequest","EchoRequest","EchoRequest","EchoRequest","EndOfList","ErroneousHdrField","Ethernet","Ethernet","EthernetAddress","EthernetFrame","EthernetIpv4","EthernetProtocol","EthernetRepr","FailedPolicy","Fin","FragExpired","FragReassemExceeded","FragRequired","HardwareAddress","HopByHop","HopLimitExceeded","Host","HostPrecedViol","HostProhibited","HostToS","HostUnreachToS","HostUnreachable","IPV4_HEADER_LEN","IPV4_MIN_MTU","IPV6_HEADER_LEN","IPV6_MIN_MTU","Icmp","IcmpRepr","Icmpv4DstUnreachable","Icmpv4Message","Icmpv4Packet","Icmpv4ParamProblem","Icmpv4Redirect","Icmpv4Repr","Icmpv4TimeExceeded","Icmpv6","Icmpv6DstUnreachable","Icmpv6Message","Icmpv6Packet","Icmpv6ParamProblem","Icmpv6Repr","Icmpv6TimeExceeded","Igmp","IgmpPacket","IgmpRepr","IgmpVersion","IpAddress","IpCidr","IpEndpoint","IpProtocol","IpRepr","IpVersion","Ipv4","Ipv4","Ipv4","Ipv4","Ipv4","Ipv4","Ipv4Address","Ipv4Cidr","Ipv4Packet","Ipv4Repr","Ipv6","Ipv6","Ipv6","Ipv6","Ipv6","Ipv6","Ipv6Address","Ipv6Cidr","Ipv6Frag","Ipv6FragmentHeader","Ipv6FragmentRepr","Ipv6HopByHopHeader","Ipv6HopByHopRepr","Ipv6NoNxt","Ipv6Option","Ipv6OptionFailureType","Ipv6OptionRepr","Ipv6OptionType","Ipv6Opts","Ipv6Packet","Ipv6Repr","Ipv6Route","Ipv6RoutingHeader","Ipv6RoutingRepr","LINK_LOCAL_ALL_NODES","LINK_LOCAL_ALL_ROUTERS","LOOPBACK","LeaveGroup","MANAGED","MAX_HARDWARE_ADDRESS_LEN","MULTICAST_ALL_ROUTERS","MULTICAST_ALL_SYSTEMS","MaxSegmentSize","MembershipQuery","MembershipReport","MissingOption","Mld","MldAddressRecord","MldQuery","MldReport","MldRepr","Mtu","Mtu","Ndisc","NdiscNeighborFlags","NdiscOption","NdiscOptionRepr","NdiscOptionType","NdiscPrefixInfoFlags","NdiscPrefixInformation","NdiscRedirectedHeader","NdiscRepr","NdiscRouterFlags","NeighborAdvert","NeighborAdvert","NeighborSolicit","NeighborSolicit","Net","NetProhibited","NetToS","NetUnreachToS","NetUnreachable","NoOperation","NoRoute","None","ON_LINK","OTHER","OVERRIDE","Pad1","Pad1","PadN","PadN","ParamProblem","ParamProblem","ParamProblem","PktTooBig","PktTooBig","PortUnreachable","PortUnreachable","PrecedCutoff","PrefixInformation","PrefixInformation","PrettyPrinter","ProtoUnreachable","Psh","Query","ROUTER","RawHardwareAddress","Redirect","Redirect","Redirect","RedirectedHeader","RedirectedHeader","RejectRoute","Reply","Report","Request","RouterAdvert","RouterAdvert","RouterAdvert","RouterSolicit","RouterSolicit","RouterSolicit","Rpl","Rst","SOLICITED","SOLICITED_NODE_PREFIX","SackPermitted","SackRange","Skip","SourceLinkLayerAddr","SourceLinkLayerAddr","SrcHostIsolated","SrcRouteFailed","Syn","TCP_HEADER_LEN","TargetLinkLayerAddr","TargetLinkLayerAddr","Tcp","TcpControl","TcpOption","TcpPacket","TcpRepr","TcpSeqNumber","TimeExceeded","TimeExceeded","TimeExceeded","Timestamp","TimestampReply","TtlExpired","Type2","UDP_HEADER_LEN","UNSPECIFIED","UNSPECIFIED","UNSPECIFIED","Udp","UdpPacket","UdpRepr","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","UnrecognizedNxtHdr","UnrecognizedOption","Unspecified","Unspecified","Unspecified","Version1","Version2","WindowScale","ack","ack_number","ack_number","add","add_assign","addr","address","address","address","addresses","all","all","all","as_bytes","as_bytes","as_bytes","as_bytes","as_bytes","as_bytes","as_ipv4","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_unspecified","aux_data_len","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","checksum","checksum","checksum","checksum","checksum","checksum","clear_flags","clear_flags","clear_prefix_reserved","clear_redirected_reserved","clear_reserved","clear_reserved","clear_reserved","clear_s_flag","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmpr_e","cmpr_i","complement","complement","complement","contains","contains","contains","contains_addr","contains_addr","contains_addr","contains_subnet","contains_subnet","contains_subnet","control","current_hop_limit","cwr","data","data","data","data","data_len","data_len","data_mut","data_mut","data_mut","default","default","default","default","default","default","default","default","dest_addr","difference","difference","difference","dont_frag","dscp","dst_addr","dst_addr","dst_addr","dst_addr","dst_addr","dst_addr","dst_addr","dst_port","dst_port","dst_port","dst_port","ece","echo_ident","echo_ident","echo_seq_no","echo_seq_no","ecn","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","ethertype","ethertype","extend","extend","extend","fill_checksum","fill_checksum","fill_checksum","fill_checksum","fill_checksum","fill_checksum","fin","flags","flow_label","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frag_offset","frag_offset","frag_offset","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bytes","from_bytes","from_bytes","from_bytes","from_iter","from_iter","from_iter","from_netmask","from_parts","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","group_addr","hardware_len","hardware_type","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","header","header_len","header_len","header_len","header_len","header_len","header_len","header_len","header_len","header_len","header_len","home_address","hop_limit","hop_limit","hop_limit","hop_limit","hop_limit","ident","ident","ident","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","is_all","is_all","is_all","is_broadcast","is_broadcast","is_broadcast","is_broadcast","is_empty","is_empty","is_empty","is_empty","is_empty","is_error","is_ipv4_mapped","is_link_local","is_link_local","is_local","is_loopback","is_loopback","is_mld","is_multicast","is_multicast","is_multicast","is_multicast","is_ndisc","is_specified","is_unicast","is_unicast","is_unicast","is_unicast","is_unicast","is_unspecified","is_unspecified","is_unspecified","len","len","len","length","link_layer_addr","lower","max_resp_code","max_resp_code","max_seg_size","mcast_addr","mcast_addr","more_frags","more_frags","more_frags","msg_code","msg_code","msg_type","msg_type","msg_type","mtu","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","neighbor_flags","netmask","network","new","new","new","new","new","new","new","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","next_header","next_header","next_header","next_header","next_header","next_header","next_header","not","not","not","nr_mcast_addr_rcrds","ns","num_srcs","num_srcs","of_packet","operation","option_type","option_type","options","options","options","options","options_mut","options_mut","pad","param_problem_ptr","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","payload","payload","payload","payload","payload","payload","payload","payload","payload_len","payload_len","payload_len","payload_len","payload_mut","payload_mut","payload_mut","payload_mut","payload_mut","payload_mut","payload_mut","pkt_too_big_mtu","port","preferred_lifetime","preferred_lifetime","prefix","prefix","prefix_flags","prefix_len","prefix_len","prefix_len","prefix_len","prefix_len","prefix_len","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","protocol","protocol","protocol","protocol_len","protocol_type","psh","qqic","qrv","quash_psh","reachable_time","record_type","remove","remove","remove","retrans_time","router_flags","router_lifetime","routing_type","rst","s_flag","sack_permitted","sack_ranges","segment_len","segment_len","segments_left","selective_ack_permitted","selective_ack_ranges","seq_number","seq_number","set","set","set","set_ack","set_ack_number","set_addresses","set_aux_data_len","set_checksum","set_checksum","set_checksum","set_checksum","set_checksum","set_checksum","set_cmpr_e","set_cmpr_i","set_current_hop_limit","set_cwr","set_data_len","set_data_len","set_dest_addr","set_dont_frag","set_dscp","set_dst_addr","set_dst_addr","set_dst_addr","set_dst_port","set_dst_port","set_ece","set_echo_ident","set_echo_ident","set_echo_seq_no","set_echo_seq_no","set_ecn","set_ethertype","set_fin","set_flow_label","set_frag_offset","set_frag_offset","set_group_address","set_hardware_len","set_hardware_type","set_header_len","set_header_len","set_header_len","set_header_len","set_home_address","set_hop_limit","set_hop_limit","set_ident","set_ident","set_len","set_link_layer_addr","set_max_resp_code","set_max_resp_code","set_mcast_addr","set_mcast_addr","set_more_frags","set_more_frags","set_msg_code","set_msg_code","set_msg_type","set_msg_type","set_msg_type","set_mtu","set_neighbor_flags","set_next_header","set_next_header","set_next_header","set_next_header","set_nr_mcast_addr_rcrds","set_ns","set_num_srcs","set_num_srcs","set_operation","set_option_type","set_option_type","set_pad","set_param_problem_ptr","set_payload_len","set_payload_len","set_pkt_too_big_mtu","set_preferred_lifetime","set_prefix","set_prefix_flags","set_prefix_len","set_protocol","set_protocol_len","set_protocol_type","set_psh","set_qqic","set_qrv","set_reachable_time","set_record_type","set_retrans_time","set_router_flags","set_router_lifetime","set_routing_type","set_rst","set_s_flag","set_segments_left","set_seq_number","set_source_hardware_addr","set_source_protocol_addr","set_src_addr","set_src_addr","set_src_addr","set_src_port","set_src_port","set_syn","set_target_addr","set_target_hardware_addr","set_target_protocol_addr","set_total_len","set_traffic_class","set_urg","set_urgent_at","set_valid_lifetime","set_version","set_version","set_window_len","solicited_node","source_hardware_addr","source_protocol_addr","src_addr","src_addr","src_addr","src_addr","src_addr","src_addr","src_addr","src_port","src_port","src_port","src_port","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","syn","target_addr","target_hardware_addr","target_protocol_addr","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","toggle","toggle","total_len","total_len","total_len","traffic_class","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","urg","urgent_at","v4","v6","valid_lifetime","valid_lifetime","verify_checksum","verify_checksum","verify_checksum","verify_checksum","verify_checksum","verify_checksum","version","version","version","window_len","window_len","window_scale","write_parts","0","0","operation","source_hardware_addr","source_protocol_addr","target_hardware_addr","target_protocol_addr","0","0","0","0","0","0","0","0","data","data","data","header","ident","ident","reason","seq_no","seq_no","0","0","0","0","0","0","data","data","data","data","data","data","header","header","header","header","ident","ident","mtu","pointer","reason","reason","reason","seq_no","seq_no","0","group_addr","group_addr","group_addr","max_resp_time","version","version","0","0","0","0","0","0","0","dst_addr","hop_limit","payload_len","protocol","src_addr","0","0","data","length","type_","0","addresses","cmpr_e","cmpr_i","home_address","length","length","next_header","next_header","pad","segments_left","segments_left","data","data","max_resp_code","mcast_addr","nr_mcast_addr_rcrds","num_srcs","qqic","qrv","s_flag","0","0","0","0","0","data","length","type_","0","dest_addr","flags","flags","hop_limit","lladdr","lladdr","lladdr","lladdr","lladdr","mtu","prefix_info","reachable_time","redirected_hdr","retrans_time","router_lifetime","target_addr","target_addr","target_addr","0","0","0","data","kind","PrettyIndent","PrettyPrint","PrettyPrinter","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","increase","into","into","new","new","pretty_print","print","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["smoltcp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoltcp::iface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoltcp::physmoltcp::phy::PcapLinkType","smoltcp::socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoltcp::socket::Socket","smoltcp::storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoltcp::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoltcp::wiresmoltcp::wire::ArpHardware","smoltcp::wire::ArpOperation","smoltcp::wire::ArpRepr","","","","","smoltcp::wire::EthernetProtocol","smoltcp::wire::HardwareAddress","smoltcp::wire::IcmpRepr","","smoltcp::wire::Icmpv4DstUnreachable","smoltcp::wire::Icmpv4Message","smoltcp::wire::Icmpv4ParamProblem","smoltcp::wire::Icmpv4Redirect","smoltcp::wire::Icmpv4Repr","","","","","","","","","smoltcp::wire::Icmpv4TimeExceeded","smoltcp::wire::Icmpv6DstUnreachable","smoltcp::wire::Icmpv6Message","smoltcp::wire::Icmpv6ParamProblem","smoltcp::wire::Icmpv6Repr","","","","","","","","","","","","","","","","","","","","","smoltcp::wire::Icmpv6TimeExceeded","smoltcp::wire::IgmpRepr","","","","","","smoltcp::wire::IpAddress","","smoltcp::wire::IpCidr","","smoltcp::wire::IpProtocol","smoltcp::wire::IpRepr","","","","","","","smoltcp::wire::Ipv6OptionFailureType","smoltcp::wire::Ipv6OptionRepr","","","","smoltcp::wire::Ipv6OptionType","smoltcp::wire::Ipv6RoutingRepr","","","","","","","","","","","smoltcp::wire::MldRepr","","","","","","","","","smoltcp::wire::NdiscOptionRepr","","","","","","","","smoltcp::wire::NdiscOptionType","smoltcp::wire::NdiscRepr","","","","","","","","","","","","","","","","","","smoltcp::wire::TcpOption","","","","","smoltcp::wire::pretty_print","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An incoming packet had an incorrect checksum and was …","An incoming packet was recognized but contradicted …","The error type for the networking stack.","An operation cannot proceed because a buffer is empty or …","The operation is finished. E.g. when reading from a TCP …","An incoming IP packet has been split into several IP …","An operation is not permitted in the current state.","An incoming packet was recognized but was …","An incoming packet was recognized but some parts are not …","The result type for the networking stack.","An incoming packet could not be parsed because some of its …","An endpoint or address of a remote host could not be …","An incoming packet could not be recognized and was dropped.","","","","","","","","Returns the argument unchanged.","Network interface logic.","Calls <code>U::from(self)</code>.","Access to networking hardware.","Communication between endpoints.","Specialized containers.","Time structures.","","","","","","Low-level packet access and construction.","The device independent part of an Ethernet network …","","A  network interface.","A builder structure used for creating a network interface.","A cached neighbor.","A neighbor cache backed by a map.","A prefix of addresses that should be routed via a router","A routing table.","A handle, identifying a socket in an Interface.","Opaque struct with space for storing one socket.","Add a default ipv4 gateway (ie. “ip route add 0.0.0.0/0 …","Add a default ipv6 gateway (ie. “ip -6 route add ::/0 …","Add a socket to the interface, and return its handle.","Enable or disable the AnyIP capability, allowing packets …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the inner device.","Get a mutable reference to the inner device.","","<code>None</code> means “forever”.","","Create a network interface using the previously provided …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a socket from the interface by its handle, as mutable.","Get a socket by handle, and the socket context.","Get the HardwareAddress address of the interface.","Set the Hardware address the interface will use. See also …","Check whether the interface has the given IP address …","Check whether the interface listens to given destination …","Check whether the interface listens to given destination …","Determine if the given <code>Ipv6Address</code> is the solicited node …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the IP addresses of the interface.","Set the IP addresses the interface will use. See also …","Get the first IPv4 address if present.","Get the first IPv4 address of the interface.","Get the first IPv4 address of the interface.","Provide storage for multicast groups.","Add an address to a list of subscribed multicast IP …","Remove an address from the subscribed multicast IP …","","Set the Neighbor Cache the interface will use.","Create a builder used for creating a network interface …","Create a cache. The backing storage is cleared upon …","Creates a routing tables. The backing storage is <strong>not</strong> …","Returns a route to 0.0.0.0/0 via the <code>gateway</code>, with no …","Returns a route to ::/0 via the <code>gateway</code>, with no expiry.","","","Transmit packets queued in the given sockets, and receive …","Return a <em>soft deadline</em> for calling poll the next time. The …","Return an <em>advisory wait time</em> for calling poll the next …","<code>None</code> means “forever”.","Set the random seed for this interface.","Remove the default ipv4 gateway","Remove the default ipv6 gateway","Remove a socket from the set, without changing its state.","","Set the IP routes the interface will use. See also routes.","","Set the HardwareAddress address of the interface.","Get an iterator to the inner sockets.","Get a mutable iterator to the inner sockets.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the routes of this node.","Update the IP addresses of the interface.","","Capture both received and transmitted packets.","Verify checksum when receiving and compute checksum when …","A description of checksum behavior for a particular …","A description of checksum behavior for every supported …","An interface for sending and receiving raw network frames.","A description of device capabilities.","Ethernet frames","Ethernet medium. Devices of this type send and receive …","A fault injector device.","A fuzz injector device.","Represents a fuzzer. It is expected to replace bytes in …","IEEE 802.15.4 packets with FCS included.","IPv4 or IPv6 packets (depending on the version field)","A loopback device.","Type of medium of a device.","Ignore checksum completely.","Captured packet header type.","Packet capture mode.","A packet capture sink.","A packet capture writer device.","Verify checksum when receiving.","Capture only received packets.","A token to receive a single network packet.","","A tracer device.","Compute checksum before sending.","Capture only transmitted packets.","A token to transmit a single network packet.","","","","","","","","","","","","","","","","","","","","","","","","","Return the interval for packet rate limiting, in …","Get a description of device capabilities.","","","","","","Checksum behavior.","","","","","","","","","","","","","","Consumes the token to receive a single network packet.","Consumes the token to send a single network packet.","Return the probability of corrupting a packet, in percents.","","","","","Return the probability of dropping a packet, in percents.","","","","Flush data written into the sync.","Flush data written into the sync.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Modify a single packet with fuzzed data.","Get a mutable reference to the underlying device.","Get a mutable reference to the underlying device.","Get a reference to the underlying device.","Get a reference to the underlying device.","Write the libpcap global header into the sink.","Write the libpcap global header into the sink.","","","Checksum behavior that results in not computing or …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the underlying device, consuming the tracer.","Return the underlying device, consuming the fault injector.","Return the underlying device, consuming the fuzz injector.","","","Maximum burst size, in terms of MTU.","Return the maximum packet size, in octets.","Return the maximum packet reception rate, in packets per …","Maximum transmission unit.","Return the maximum packet transmission rate, in packets …","Medium of the device.","","Create a tracer device.","Create a fault injector device, using the given random …","Create a fuzz injector device.","Creates a loopback device.","Creates a packet capture writer.","Write the libpcap packet header followed by packet data …","Write the libpcap packet header followed by packet data …","Write the libpcap packet header into the sink.","Write the libpcap packet header into the sink.","","Construct a token pair consisting of one receive token and …","","","","","","Returns whether checksum should be verified when receiving.","Set the interval for packet rate limiting, in milliseconds.","Set the probability of corrupting a packet, in percents.","Set the probability of dropping a packet, in percents.","Set the maximum packet size, in octets.","Set the maximum packet reception rate, in packets per …","Set the maximum packet transmission rate, in packets per …","","","","","","","","Construct a transmit token.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether checksum should be verified when sending.","","","","","","","","","","","","","Write data into the sink.","Write an <code>u16</code> into the sink, in native byte order.","Write an <code>u16</code> into the sink, in native byte order.","Write an <code>u32</code> into the sink, in native byte order.","Write an <code>u32</code> into the sink, in native byte order.","","A conversion trait for network sockets.","","","","","","","","","A network socket.","","","","A Transmission Control Protocol socket.","A TCP socket ring buffer.","The state of a TCP socket, according to RFC 793.","","Aborts the connection, if any.","Return the ACK delay duration.","","","","","","","Check whether the receive half of the full-duplex …","Check whether the transmit half of the full-duplex …","","","Close the transmit half of the full-duplex connection.","Connect to a given endpoint.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return the time-to-live (IPv4) or hop limit (IPv6) value …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return whether a connection is active.","Return whether the socket is passively listening for …","Return whether the socket is open.","Return the keep-alive interval.","Start listening on the given endpoint.","Return the local endpoint.","Return whether the receive half of the full-duplex …","Return whether the transmit half of the full-duplex …","Return whether Nagle’s Algorithm is enabled.","Create a socket using the given buffers.","Peek at a sequence of received octets without removing …","Peek at a sequence of received octets without removing …","Call <code>f</code> with the largest contiguous slice of octets in the …","Return the maximum number of bytes inside the recv buffer.","Return the amount of octets queued in the receive buffer. …","Dequeue a sequence of received octets, and fill a slice …","Return the remote endpoint.","Call <code>f</code> with the largest contiguous slice of octets in the …","Return the maximum number of bytes inside the transmit …","Return the amount of octets queued in the transmit buffer.","Enqueue a sequence of octets to be sent, and fill it from …","Set the ACK delay duration.","Set the time-to-live (IPv4) or hop limit (IPv6) value used …","Set the keep-alive interval.","Enable or disable Nagle’s Algorithm.","Set the timeout duration.","Return the connection state, in terms of the TCP state …","Return the timeout duration.","","","","","","","","","","","","","","","","A buffer (re)assembler.","Empty packet description.","An UDP packet ring buffer.","Size and header of a packet.","A trait for setting a value to a known state.","A ring buffer.","Add a new contiguous range to the assembler, and return …","","","","","","","","","Return the maximum number of elements in the ring buffer.","Clear the ring buffer.","","","Return the largest number of elements that can be added to …","Dequeue a single packet from the buffer, and return a …","Dequeue the given number of allocated buffer elements.","Dequeue a slice of elements up to the given size from the …","Call <code>f</code> with the largest contiguous slice of allocated …","Dequeue an element from the buffer, and return a reference …","Call <code>f</code> with a single buffer element, and dequeue the …","Dequeue as many elements from the buffer into the given …","Call <code>f</code> with a single packet from the buffer, and dequeue …","Enqueue a single packet with the given header into the …","Enqueue a slice of elements up to the given size into the …","Call <code>f</code> with the largest contiguous slice of unallocated …","Enqueue a single element into the buffer, and return a …","Call <code>f</code> with a single buffer element, and enqueue the …","Enqueue as many elements from the given slice into the …","Enqueue the given number of unallocated buffer elements.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Return the largest contiguous slice of allocated buffer …","Return the largest contiguous slice of unallocated buffer …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return whether the assembler contains no data.","Query whether the buffer is empty.","Query whether the buffer is empty.","Query whether the buffer is full.","Query whether the buffer is full.","Iterate over all of the contiguous data ranges.","Return the current number of elements in the ring buffer.","Create a new buffer assembler for buffers of the given …","Create a new packet buffer with the provided metadata and …","Create a ring buffer with the given storage.","Return the maximum number packets that can be stored.","Return the maximum number of bytes in the payload ring …","Peek at a single packet from the buffer without removing …","Read as many elements from allocated buffer elements into …","Remove a contiguous range from the front of the assembler …","","Clear the ring buffer, and reset every element.","","","","","","","","","","","","","","","Return the number of elements that can be added to the …","Write as many elements from the given slice into …","A relative amount of time.","A representation of an absolute time value.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Create a new <code>Instant</code> from a number of microseconds.","Create a new <code>Duration</code> from a number of microeconds.","","Create a new <code>Instant</code> from a number of milliseconds.","Create a new <code>Duration</code> from a number of milliseconds.","Create a new <code>Instant</code> from a number of milliseconds.","Create a new <code>Instant</code> from a number of seconds.","Create a new <code>Instant</code> from a number of seconds.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The fractional number of microseconds that have passed …","The fractional number of milliseconds in this <code>Duration</code>.","The fractional number of milliseconds that have passed …","The fractional number of milliseconds in this <code>Duration</code>.","","","","","","","The number of whole seconds that have passed since the …","The number of whole seconds in this <code>Duration</code>.","","","","","","","","","","","","","","The total number of milliseconds that have passed since …","The total number of microseconds in this <code>Duration</code>.","The total number of milliseconds that have passed since …","The total number of milliseconds in this <code>Duration</code>.","","","","","","","","","","","","Address unreachable.","Communication with destination administratively prohibited.","","ARP hardware type.","ARP operation type.","A read/write wrapper around an Address Resolution Protocol …","A high-level representation of an Address Resolution …","Pointer indicates the error","The broadcast address.","The broadcast address.","Bad length","Beyond scope of source address.","Communication administratively prohibited","Discard the containing packet","Discard the containing packet and notify the sender","Discard the containing packet and only notify the sender …","Destination host unknown","Destination network unknown","Destination unreachable","","Destination Unreachable.","","The Ethernet header length","Echo reply","","Echo Reply","","Echo request","","Echo Request","","","Erroneous header field encountered.","","","A six-octet Ethernet II address.","A read/write wrapper around an Ethernet II frame buffer.","An Ethernet and IPv4 Address Resolution Protocol packet.","Ethernet protocol type.","A high-level representation of an Internet Protocol …","Source address failed ingress/egress policy.","","Fragment reassembly time exceeded","Fragment reassembly time exceeded.","Fragmentation required, and DF flag set","Representation of an hardware address, such as an Ethernet …","","Hop limit exceeded in transit.","Redirect Datagram for the Host","Host precedence violation","Host administratively prohibited","Redirect Datagram for the ToS &amp; host","Host unreachable for ToS","Destination host unreachable","","Minimum MTU required of all links supporting IPv4. See RFC …","Length of an IPv6 header.","Minimum MTU required of all links supporting IPv6. See RFC …","","","Internet protocol control message subtype for type “…","Internet protocol control message type.","A read/write wrapper around an Internet Control Message …","Internet protocol control message subtype for type “…","Internet protocol control message subtype for type “…","A high-level representation of an Internet Control Message …","Internet protocol control message subtype for type “Time …","","Internet protocol control message subtype for type “…","Internet protocol control message type.","A read/write wrapper around an Internet Control Message …","Internet protocol control message subtype for the type “…","A high-level representation of an Internet Control Message …","Internet protocol control message subtype for the type “…","","A read/write wrapper around an Internet Group Management …","A high-level representation of an Internet Group …","Type of IGMP membership report version","An internetworking address.","A specification of a CIDR block, containing an address and …","An internet endpoint address.","IP datagram encapsulated protocol.","An IP packet representation.","Internet protocol version.","","","","An IPv4 address.","","","A four-octet IPv4 address.","A specification of an IPv4 CIDR block, containing an …","A read/write wrapper around an Internet Protocol version 4 …","A high-level representation of an Internet Protocol …","","","","An IPv6 address.","","","A sixteen-octet IPv6 address.","A specification of an IPv6 CIDR block, containing an …","","A read/write wrapper around an IPv6 Fragment Header.","A high-level representation of an IPv6 Fragment header.","A read/write wrapper around an IPv6 Hop-by-Hop Options …","A high-level representation of an IPv6 Hop-by-Hop Options …","","A read/write wrapper around an IPv6 Extension Header …","Action required when parsing the given IPv6 Extension …","A high-level representation of an IPv6 Extension Header …","IPv6 Extension Header Option Type","","A read/write wrapper around an Internet Protocol version 6 …","A high-level representation of an Internet Protocol …","","A read/write wrapper around an IPv6 Routing Header buffer.","A high-level representation of an IPv6 Routing Header.","The link-local all routers multicast address.","The link-local all nodes multicast address.","The loopback address.","","","","All multicast-capable routers","All multicast-capable nodes","","","","Missing a required option","","A read/write wrapper around an MLDv2 Listener Report …","Multicast Listener Query","Multicast Listener Report","A high-level representation of an MLDv2 packet header.","MTU","","","","A read/write wrapper around an NDISC Option.","A high-level representation of an NDISC Option.","NDISC Option Type","","","","A high-level representation of an Neighbor Discovery …","","Neighbor Advertisement","","Neighbor Solicitation","","Redirect Datagram for the Network","Network administratively prohibited","Redirect Datagram for the ToS &amp; network","Network unreachable for ToS","Destination network unreachable","","No Route to destination.","","","","","1 byte of padding","","Multiple bytes of padding","","Parameter problem","Parameter Problem.","","Packet Too Big.","","Destination port unreachable","Port unreachable.","Precedence cutoff in effect","Prefix Information","","","Destination protocol unreachable","","","","Unparsed hardware address.","Message redirect","Redirect","","Redirected Header","","Reject route to destination.","","","","Router advertisement","Router Advertisement","","Router solicitation","Router Solicitation","","","","","The solicited node prefix.","","","Skip this option and continue processing the packet","Source Link-layer Address","","Source host isolated","Source route failed","","","Target Link-layer Address","","","The possible control flags of a Transmission Control …","A representation of a single TCP option.","A read/write wrapper around a Transmission Control …","A high-level representation of a Transmission Control …","A TCP sequence number.","Time exceeded","Time Exceeded.","","Timestamp","Timestamp reply","TTL expired in transit","","","An endpoint with unspecified address and port.","An unspecified address.","The unspecified address.","","A read/write wrapper around an User Datagram Protocol …","A high-level representation of an User Datagram Protocol …","","","","","","","","","","","","","","","","","","","","Unrecognized Next Header type encountered.","Unrecognized IPv6 option encountered.","","An unspecified address. May be used as a placeholder for …","","IGMPv1","IGMPv2","","Return the ACK flag.","Return the acknowledgement number field.","","","","","Return the IP address of this CIDR block.","Return the address of this IPv4 CIDR block.","Return the address of this IPv6 CIDR block.","Return the address vector in bytes","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Return an Ethernet address as a sequence of octets, in …","Return an address as a sequence of octets, in big-endian.","Return an IPv4 address as a sequence of octets, in …","Return an IPv6 address as a sequence of octets, in …","","","Convert an IPv4 mapped IPv6 address to an IPv4 address.","","","","","","","","","Return an unspecified address that has the same IP version …","Return the length of the auxilary data.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the broadcast address of this IPv4 CIDR.","Return the length of a packet that will be emitted from …","Return the length of a buffer required to hold a packet …","Return the length of a header that will be emitted from …","Return the length of a packet that will be emitted from …","Return the length of a packet that will be emitted from …","Return the length of a packet that will be emitted from …","Return the length of a header that will be emitted from …","Return the length of a header that will be emitted from …","Return the length of a header that will be emitted from …","Return the length, in bytes, of a header that will be …","Return the length, in bytes, of a header that will be …","Return the length of a header that will be emitted from …","Return the length, in bytes, of a header that will be …","Return the length of a packet that will be emitted from …","","Return the length of a header that will be emitted from …","","Return the length of a packet that will be emitted from …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Return the checksum field.","Return the checksum field.","Return the checksum field.","Return the header checksum field.","Return the checksum field.","Return the checksum field.","Clear the entire flags field.","Clear the entire flags field.","Clear the reserved bits.","Clear the reserved bits.","Clear any reserved fields in the message header.","Set reserved fields.","Initialize reserved fields to 0.","Clear the Suppress Router-Side Processing flag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the number of prefix octects elided from the last …","Return the number of prefix octects elided from addresses[…","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Query whether the subnetwork described by this CIDR block …","Query whether the subnetwork described by this IPv4 CIDR …","Query whether the subnetwork described by this IPv6 CIDR …","Query whether the subnetwork described by this CIDR block …","Query whether the subnetwork described by this IPv4 CIDR …","Query whether the subnetwork described by this IPV6 CIDR …","","Return the current hop limit field.","Return the CWR flag.","Return a pointer to the type-specific data.","Return the option data.","Return the option data.","","Return the length of the data.","Return the length of the data.","Return a mutable pointer to the type-specific data.","Return a mutable pointer to the option data.","Return a mutable pointer to the option data.","","","","","","","","","Return the destination address field.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Return the “don’t fragment” flag.","Return the Differential Services Code Point field.","Return the destination address field.","Return the destination address.","Return the destination address field.","Return the destination address field.","","","IPv6 address of the destination node.","Return the destination port field.","Return the destination port field.","","","Return the ECE flag.","Return the identifier field (for echo request and reply …","Return the identifier field (for echo request and reply …","Return the sequence number field (for echo request and …","Return the sequence number field (for echo request and …","Return the Explicit Congestion Notification field.","Emit a high-level representation into an Address …","Emit a high-level representation into an Ethernet II frame.","Emit a high-level representation into an Internet Control …","Emit a high-level representation into an Internet Control …","Emit a high-level representation into an Internet Group …","Emit this high-level representation into a buffer.","Emit a high-level representation into an Internet Protocol …","Emit a high-level representation into an Internet Protocol …","Emit a high-level representation into an IPv6 Fragment …","Emit a high-level representation into an IPv6 Hop-by-Hop …","Emit a high-level representation into an IPv6 Extension …","Emit a high-level representation into an IPv6 Routing …","Emit a high-level representation into an MLDv2 packet.","","Emit a high-level representation into an NDISC Option.","","Emit a high-level representation into a Transmission …","Emit a high-level representation into an User Datagram …","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the EtherType field, without checking for 802.1Q.","","","","","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Return the FIN flag.","","Return the flow label field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the fragment offset, in octets.","Return the fragment offset field.","The offset of the data following this header, relative to …","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Construct an Ethernet address from a sequence of octets, …","Construct an IPv4 address from a sequence of octets, in …","Construct an IPv6 address from a sequence of octets, in …","","","","","Create an IPv4 CIDR block from the given address and …","Construct an IPv6 address from a sequence of words, in …","Parse a string representation of an Ethernet address.","Parse a string representation of an IP address.","Parse a string representation of an IP CIDR.","","Parse a string representation of an IPv4 address.","Parse a string representation of an IPv4 CIDR.","Parse a string representation of an IPv6 address.","Parse a string representation of an IPv6 CIDR.","Return the source address field.","Return the hardware length field.","Return the hardware type field.","","","","","","","","","","","","","","Return the length of a frame header.","Return the header length. The result depends on the value …","Return the header length. The result depends on the value …","Return the header length, in octets.","Return the header length.","Return length of the Hop-by-Hop Options header in 8-octet …","Return the header length field. Length of the Routing …","Return the header length, in octets.","Return the length of a header that will be emitted from …","Return the length of the packet header that will be …","Return the IPv6 Home Address","Return the TTL value.","Return the time to live field.","Return the hop limit field.","","The 8-bit hop limit field.","Return the fragment identification field.","Return the fragment identification value field.","The identification for every packet that is fragmented.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume the packet, returning the underlying buffer.","Consumes the frame, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the header, returning the underlying buffer.","Consume the header, returning the underlying buffer.","Consume the ipv6 option, returning the underlying buffer.","Consume the header, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the NDISC option, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Query whether this address is the broadcast address.","Query whether the address is the broadcast address.","Query whether the address is the broadcast address.","Query wether the address is a broadcast address.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Return whether the segment has no flags set (except PSH) …","","Per RFC 4443 § 2.1 ICMPv6 message types with the highest …","Query whether the IPv6 address is an IPv4 mapped IPv6 …","Query whether the address falls into the “link-local” …","Query whether the IPv6 address is in the link-local scope.","Query whether the “locally administered” bit in the …","Query whether the address falls into the “loopback” …","Query whether the IPv6 address is the loopback address.","Return a boolean value indicating if the given message type","Query whether the “multicast” bit in the OUI is set.","Query whether the address is a valid multicast address.","Query whether the address is a multicast address.","Query whether the IPv6 address is a multicast address.","Return a boolean value indicating if the given message type","Query whether the endpoint has a specified address and …","Query whether the address is an unicast address.","Query whether the address is a valid unicast address.","Query whether the address is an unicast address.","Query whether the IPv6 address is an unicast address.","Query wether the address is an unicast address.","Query whether the address falls into the “unspecified” …","Query whether the address falls into the “unspecified” …","Query whether the IPv6 address is the unspecified address.","Return the length of a control flag, in terms of sequence …","Return the length field.","","Length of the Hop-by-Hop Options header in 8-octet units, …","Return the Source/Target Link-layer Address.","Convert an unspecified representation into a concrete one, …","Return the maximum response code field.","Return the maximum response time, using the encoding …","","Return the address being queried.","Return the multicast address field.","Return the “more fragments” flag.","Return more fragment flag field.","Whethere are not there are more fragments following this …","Return the message code field.","Return the message code field.","Return the message type field.","Return the message type field.","Return the message type field.","Return the MTU value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the Neighbor Solicitation flags.","Return the network mask of this IPv4 CIDR.","Return the network block of this IPv4 CIDR.","Create a CIDR block from the given address and prefix …","Create an endpoint address from given address and port.","Construct an IPv4 address from parts.","Create an IPv4 CIDR block from the given address and …","Construct an IPv6 address from parts.","Create an IPv6 CIDR block from the given address and …","Create a raw octet buffer with an IPv6 Routing Header …","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Imbue a raw octet buffer with ARP packet structure.","Imbue a raw octet buffer with Ethernet frame structure.","Imbue a raw octet buffer with ICMPv4 packet structure.","Imbue a raw octet buffer with ICMPv6 packet structure.","Imbue a raw octet buffer with IGMPv2 packet structure.","Imbue a raw octet buffer with IPv4 packet structure.","Create a raw octet buffer with an IPv6 packet structure.","Create a raw octet buffer with an IPv6 Fragment Header …","Create a raw octet buffer with an IPv6 Hop-by-Hop Options …","Create a raw octet buffer with an IPv6 Extension Header …","Imbue a raw octet buffer with a Address Record structure.","Create a raw octet buffer with an NDISC Option structure.","Imbue a raw octet buffer with TCP packet structure.","Imbue a raw octet buffer with UDP packet structure.","Return the next header field.","Return the next header field.","Return the next header field.","Return the next header field.","Protocol contained in the next header.","The type of header immediately following the Fragment …","The type of header immediately following the Hop-by-Hop …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Return the number of Multicast Address Records.","Return the NS flag.","Return number of sources.","Return the number of sources field.","Return the version of an IP packet stored in the provided …","Return the operation field.","Return the option type.","Return the option type.","Return the option data.","Return an <code>Iterator</code> for the contained options.","Return a pointer to the options.","The options contained in the Hop-by-Hop Options header.","Return a mutable pointer to the option data.","Return a pointer to the options.","Return the number of octects used for padding after …","Return the pointer field (for parameter problem messages).","Parse an Address Resolution Protocol packet and return a …","Parse an Ethernet II frame and return a high-level …","Parse an Internet Control Message Protocol version 4 …","Parse an Internet Control Message Protocol version 6 …","Parse an Internet Group Management Protocol v1/v2 packet …","Parse an Internet Protocol version 4 packet and return a …","Parse an Internet Protocol version 6 packet and return a …","Parse an IPv6 Fragment Header and return a high-level …","Parse an IPv6 Hop-by-Hop Options Header and return a …","Parse an IPv6 Extension Header Option and return a …","Parse an IPv6 Routing Header and return a high-level …","Parse an MLDv2 packet and return a high-level …","Parse an NDISC packet and return a high-level …","Parse an NDISC Option and return a high-level …","","Parse a Transmission Control Protocol packet and return a …","Parse an User Datagram Protocol packet and return a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a pointer to the payload, without checking for …","Return a pointer to the type-specific data.","Return a pointer to the payload.","Return a pointer to the payload.","Return a pointer to the address records.","Return a pointer to the payload.","Return a pointer to the payload.","","Return the payload length.","Return the payload length field.","","Length of the payload including the extension headers.","Return a mutable pointer to the payload.","Return a mutable pointer to the type-specific data.","Return a mutable pointer to the payload.","Return a mutable pointer to the payload.","Return a pointer to the address records.","Return a mutable pointer to the payload data.","Return a mutable pointer to the payload.","Return the MTU field (for packet too big messages).","","Return the preferred lifetime of the prefix.","","Return the prefix.","","Return the prefix information flags.","If <code>self</code> is a CIDR-compatible subnet mask, return …","Return the prefix length of this CIDR block.","Return the prefix length of this IPv4 CIDR block.","Return the prefix length of this IPv6 CIDR block.","Return the prefix length.","","Pretty-printing of packet representation.","","","","","","","","","","Return the protocol.","Return the protocol field.","","Return the protocol length field.","Return the protocol type field.","Return the PSH flag.","Return the Querier’s Query Interval Code.","Return the Querier’s Robustness Variable.","Turn the PSH flag into no flag, and keep the rest as-is.","Return the reachable time field.","Return the record type for the given sources.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Return the retransmit time field.","Return the Router Advertisement flags.","Return the router lifetime field.","Return the routing type field.","Return the RST flag.","Return the Suppress Router-Side Processing flag.","","","Return the length of the segment, in terms of sequence …","Return the length of the segment, in terms of sequence …","Return the segments left field.","Returns whether the selective acknowledgement SYN flag is …","Return the selective acknowledgement ranges, if any. If …","Return the sequence number field.","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Set the ACK flag.","Set the acknowledgement number field.","Set address data","Return the length of the auxilary data.","Set the checksum field.","","Set the checksum field.","Set the header checksum field.","Set the checksum field.","Set the checksum field.","Set the number of prefix octects elided from the last …","Set the number of prefix octects elided from addresses[…","Set the current hop limit field.","Set the CWR flag.","Set the option data length.","Set the option data length.","Set the destination address field.","Set the “don’t fragment” flag.","Set the Differential Services Code Point field.","Set the destination address field.","Set the destination address field.","Set the destination address field.","Set the destination port field.","Set the destination port field.","Set the ECE flag.","Set the identifier field (for echo request and reply …","Set the identifier field (for echo request and reply …","Set the sequence number field (for echo request and reply …","Set the sequence number field (for echo request and reply …","Set the Explicit Congestion Notification field.","Set the EtherType field.","Set the FIN flag.","Set the flow label field.","Set the fragment offset, in octets.","Set the fragment offset field.","Set the group address field","Set the hardware length field.","Set the hardware type field.","Set the header length, in octets.","Set the option data length. Length of the Hop-by-Hop …","Set the option data length. Length of the Routing header …","Set the header length, in octets.","Set the Ipv6 Home Address","Set the time to live field.","Set the hop limit field.","Set the fragment identification field.","Set the fragmentation identification field.","Set the length field.","Set the Source/Target Link-layer Address.","Set the maximum response code field.","Set the maximum response time, using the encoding …","Set the address being queried.","Return the multicast address field.","Set the “more fragments” flag.","Set the more fragments flag field.","Set the message code field.","Set the message code field.","Set the message type field.","Set the message type field.","Set the message type field.","Set the MTU value.","Set the Neighbor Solicitation flags.","Set the next header field.","Set the next header field.","Set the next header field.","Set the next header field.","Set the number of Multicast Address Records.","Set the NS flag.","Set number of sources.","Return the number of sources field.","Set the operation field.","Set the option type.","Set the option type.","Set the number of octects used for padding after …","Set the pointer field (for parameter problem messages).","Set the payload length.","Set the payload length field.","Set the MTU field (for packet too big messages).","Set the preferred lifetime of the prefix.","Set the prefix.","Set the prefix information flags.","Set the prefix length.","Set the protocol field.","Set the protocol length field.","Set the protocol type field.","Set the PSH flag.","Set the Querier’s Query Interval Code.","Set the Querier’s Robustness Variable.","Set the reachable time field.","Return the record type for the given sources.","Set the retransmit time field.","Set the Router Advertisement flags.","Set the router lifetime field.","Set the routing type.","Set the RST flag.","Set the Suppress Router-Side Processing flag.","Set the segments left field.","Set the sequence number field.","Set the source hardware address field.","Set the source protocol address field.","Set the source address field.","Set the source address field.","Set the source address field.","Set the source port field.","Set the source port field.","Set the SYN flag.","Set the target address field.","Set the target hardware address field.","Set the target protocol address field.","Set the total length field.","Set the traffic class field.","Set the URG flag.","Set the urgent pointer field.","Set the valid lifetime of the prefix.","Set the version field.","Set the version field.","Return the window size field.","The solicited node for the given unicast address.","Return the source hardware address field.","Return the source protocol address field.","Return the source address field.","Return the source address.","Return the source address field.","Return the source address field.","","","IPv6 address of the source node.","Return the source port field.","Return the source port field.","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Return the SYN flag.","Return the target address field.","Return the target hardware address field.","Return the target protocol address field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Return the total length of a packet that will be emitted …","Return the total length field.","Return the payload length added to the known header length.","Return the traffic classeturns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Return the URG flag.","Return the urgent pointer field.","Create an address wrapping an IPv4 address with the given …","Create an address wrapping an IPv6 address with the given …","Return the valid lifetime of the prefix.","","Validate the header checksum.","Validate the header checksum.","Validate the header checksum.","Validate the header checksum.","Validate the packet checksum.","Validate the packet checksum.","Return the protocol version.","Return the version field.","Return the version field.","Return the window size field.","","","Write a IPv6 address to the given slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vector of addresses, numbered 1 to <code>n</code>.","Number of prefix octets from the last segment that are …","Number of prefix octets from each segment, except the last …","The home address of the destination mobile node.","Length of the Routing header in 8-octet units, not …","Length of the Routing header in 8-octet units, not …","The type of header immediately following the Routing …","The type of header immediately following the Routing …","Number of octets that are used for padding after <code>address[n]</code>…","Number of route segments remaining.","Number of route segments remaining.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indentation state.","Interface for printing listings.","Wrapper for using a <code>PrettyPrint</code> where a <code>Display</code> is …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Increase indentation level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Format the listing with the recorded parameters when …","Create an indentation state. The entire listing will be …","Write a concise, formatted representation of a packet …","Create a <code>PrettyPrinter</code> which prints the given object.","","","","","","","",""],"i":[1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,1,1,1,1,1,0,0,2,0,0,0,0,0,0,0,0,3,3,4,5,4,6,5,7,8,9,3,2,10,4,6,5,7,8,9,3,2,10,7,9,10,7,9,10,10,2,10,4,4,10,9,8,5,7,8,9,3,2,10,10,4,6,5,7,8,9,3,2,10,4,4,4,5,4,4,6,6,10,4,6,5,7,8,9,3,2,10,4,5,4,4,6,5,4,4,10,5,5,8,3,9,9,8,10,4,4,4,9,5,3,3,4,4,5,4,4,4,4,7,9,10,10,4,6,5,7,8,9,3,2,10,4,6,5,7,8,9,3,2,10,4,6,5,7,8,9,3,2,10,3,4,9,11,12,0,0,0,0,13,14,0,0,0,13,13,0,0,12,0,0,0,0,12,11,0,15,0,12,11,0,15,13,16,17,18,19,13,11,20,12,21,22,14,16,17,18,19,13,11,20,12,21,22,14,17,15,16,17,18,19,20,22,13,11,12,21,22,14,13,11,12,21,22,14,13,23,24,17,12,21,22,14,17,13,11,14,25,25,17,18,19,13,11,20,12,21,22,14,16,17,18,19,13,13,11,20,12,21,22,14,26,16,20,16,20,25,25,21,21,21,16,17,18,19,13,11,20,12,21,22,14,16,17,18,22,21,22,17,17,22,17,22,13,16,17,18,19,20,25,25,25,25,13,15,16,17,18,19,20,12,17,17,17,17,17,17,21,13,11,12,21,22,14,15,16,17,18,19,20,16,17,18,19,13,11,20,12,21,22,14,16,17,18,19,13,11,20,12,21,22,14,12,16,17,18,19,13,11,20,12,21,22,14,21,25,25,25,25,25,27,0,28,28,28,28,28,28,28,28,0,28,28,29,0,0,0,28,30,30,28,30,29,28,30,29,30,30,28,28,30,30,31,30,28,28,28,30,29,28,30,29,30,28,30,29,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,28,28,28,30,29,28,30,29,28,30,29,31,30,30,32,0,33,0,0,0,0,34,34,33,35,36,34,33,35,36,36,36,33,33,36,35,36,36,36,36,36,36,35,35,36,36,36,36,36,36,34,34,33,35,36,34,33,35,36,36,36,36,34,33,35,36,34,35,36,35,36,34,36,34,35,36,35,35,35,36,34,37,36,33,34,34,33,35,36,34,33,35,36,34,33,35,36,36,36,0,0,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,38,38,38,39,38,39,39,38,38,39,38,38,39,38,39,39,38,39,39,38,39,38,39,38,39,38,38,38,39,38,39,38,39,38,38,38,38,38,39,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,40,41,42,43,44,45,45,46,0,0,0,0,47,40,41,47,45,48,49,49,49,48,48,50,51,52,53,0,50,51,52,53,50,51,52,53,54,55,56,57,0,0,58,0,0,45,59,60,61,48,0,62,61,63,48,48,63,48,48,0,0,0,0,62,0,0,0,0,0,0,0,0,62,0,0,0,0,0,0,62,0,0,0,0,0,0,0,0,0,46,64,65,66,67,68,0,0,0,0,46,64,65,66,67,68,0,0,62,0,0,0,0,62,0,0,0,0,62,0,0,62,0,0,42,42,42,69,70,0,41,41,54,69,69,47,53,0,52,52,0,71,72,53,0,0,0,0,0,0,0,0,0,52,73,52,73,63,48,63,48,48,54,45,59,44,70,74,75,76,75,76,50,52,53,52,53,48,45,48,71,72,0,48,59,77,74,0,50,52,73,71,72,45,78,77,78,50,52,73,50,52,73,79,59,74,80,54,54,49,71,72,48,48,59,0,71,72,62,0,0,0,0,0,50,52,53,50,50,60,79,0,81,41,42,62,0,0,56,78,46,50,48,63,60,47,52,45,55,61,62,75,49,76,71,72,54,55,55,65,66,68,82,82,54,83,83,84,43,43,81,67,85,80,86,70,74,44,40,66,41,42,57,87,42,88,89,90,91,92,93,83,94,66,95,70,74,44,70,74,44,70,74,44,70,74,44,70,74,44,70,74,44,70,74,44,56,78,88,58,46,40,89,96,64,50,48,63,60,47,90,51,52,45,55,61,91,53,97,69,82,65,62,66,67,81,68,41,85,92,98,42,80,93,99,100,101,102,103,75,49,104,76,86,79,95,77,70,74,73,71,44,105,106,107,72,43,83,54,59,84,94,108,57,87,56,78,88,58,46,40,89,96,64,50,48,63,60,47,90,51,52,45,55,61,91,53,97,69,82,65,62,66,67,81,68,41,85,92,98,42,80,93,99,100,101,102,103,75,49,104,76,86,79,95,77,70,74,73,71,44,105,106,107,72,43,83,54,59,84,94,108,57,87,85,58,89,96,51,53,69,68,98,99,101,103,76,79,77,73,72,54,84,88,89,90,91,97,92,93,100,102,104,86,95,105,83,94,90,91,97,92,83,94,92,83,105,105,91,100,86,91,56,78,88,58,46,40,89,96,64,50,48,63,60,47,90,51,52,45,55,61,91,53,69,82,65,62,66,67,81,68,41,85,92,98,42,80,93,99,101,103,75,49,76,79,95,77,70,74,73,71,44,106,107,72,43,83,54,59,84,94,108,57,87,56,78,88,58,46,40,89,96,64,50,48,63,60,47,90,51,52,45,55,61,91,53,69,82,65,62,66,67,81,68,41,85,92,98,42,80,93,99,101,103,75,49,76,79,95,77,70,74,73,71,44,106,107,72,43,83,54,59,84,94,108,57,87,56,78,46,40,50,48,63,60,47,52,45,55,61,65,62,66,67,81,41,85,42,80,75,49,70,74,71,44,86,86,70,74,44,70,74,44,67,85,80,67,85,80,84,91,83,90,104,105,107,104,105,90,104,105,40,66,81,41,85,42,80,43,91,70,74,44,92,92,89,68,92,93,96,98,99,83,94,84,108,83,90,91,90,91,92,58,96,51,53,69,68,98,99,101,103,76,79,77,73,72,54,84,108,70,74,44,56,78,88,58,46,40,96,64,50,48,63,60,47,90,51,52,45,55,61,91,53,69,82,65,62,66,67,81,68,41,85,92,98,42,80,93,99,100,101,102,103,75,49,104,76,86,79,95,77,70,74,73,71,44,105,106,107,72,43,83,54,59,84,94,108,57,87,89,96,70,74,44,90,91,97,92,83,94,83,106,93,56,78,88,88,58,58,46,46,40,40,89,89,96,64,50,50,48,48,63,60,47,90,90,51,51,52,52,45,45,55,55,61,61,91,53,97,97,69,69,82,65,65,62,62,66,66,67,67,81,81,68,41,41,85,85,92,92,98,98,42,42,80,80,93,93,99,99,100,100,101,101,102,102,103,103,75,75,49,49,104,104,76,76,86,86,79,79,95,77,70,70,70,70,70,74,74,74,74,74,73,71,71,44,44,44,44,44,105,105,106,107,72,72,43,43,83,83,54,59,84,84,94,94,108,108,57,57,87,87,92,100,101,56,56,78,78,88,58,46,46,40,89,96,64,64,64,50,50,48,48,63,63,60,60,47,47,90,51,52,52,45,45,55,55,61,61,91,53,97,69,82,65,62,62,66,66,66,67,67,67,81,81,81,68,68,68,41,85,92,98,42,42,80,93,99,100,101,102,103,75,75,49,49,49,104,76,86,79,95,77,70,74,73,71,71,44,105,106,107,72,43,83,54,59,84,94,108,57,57,87,87,87,70,74,44,70,74,44,70,74,44,40,41,42,87,70,74,44,85,42,40,66,67,81,41,85,42,80,97,88,88,40,65,66,67,81,41,85,42,80,70,74,44,107,89,90,91,92,93,102,86,83,84,108,86,68,92,93,98,99,92,100,101,70,74,44,70,74,44,70,74,44,56,78,88,58,46,40,89,96,64,50,48,63,60,47,90,51,52,45,55,61,91,53,97,69,82,65,62,66,67,81,68,41,85,92,98,42,80,93,99,100,101,102,103,75,49,104,76,86,79,95,77,70,74,73,71,44,105,106,107,72,43,83,54,59,84,94,108,57,87,88,89,90,91,97,92,93,100,102,104,86,95,105,83,94,70,74,44,40,66,41,57,70,74,44,84,87,52,42,41,42,40,41,42,52,40,66,41,42,52,81,40,66,41,42,57,66,41,42,59,94,87,103,105,68,91,97,84,91,95,92,100,101,90,91,90,91,97,105,56,78,88,58,46,40,96,64,50,48,63,60,47,90,51,52,45,55,61,91,53,69,62,66,67,81,68,41,85,92,98,42,80,93,99,100,101,102,103,75,49,104,76,86,79,95,77,70,74,73,71,44,105,106,107,72,43,83,54,84,94,108,57,87,91,85,85,67,81,41,85,42,80,86,88,89,90,91,97,92,93,100,102,104,86,95,105,83,94,88,89,90,91,97,92,93,100,102,104,95,105,83,94,93,100,102,86,99,101,103,70,74,44,91,83,91,95,65,88,104,105,102,103,83,103,102,83,86,91,58,96,51,53,69,98,99,101,103,76,79,77,73,72,54,84,108,87,56,78,46,40,50,48,63,60,47,52,45,55,61,65,62,66,67,81,41,85,42,80,75,49,70,74,71,44,43,89,91,92,93,95,83,94,84,68,93,98,99,89,91,92,93,95,83,94,91,81,105,106,105,106,105,66,67,85,80,105,106,0,88,89,90,97,92,93,105,83,94,68,92,98,88,88,83,91,91,59,91,95,70,74,44,91,91,91,86,83,91,84,84,83,84,86,83,83,83,84,70,74,44,83,83,86,95,90,91,97,92,83,94,86,86,91,83,104,105,91,92,92,89,92,93,83,94,83,90,91,90,91,92,89,83,93,92,100,97,88,88,92,102,86,83,86,92,93,92,100,94,105,91,97,91,95,92,100,90,91,90,91,97,105,91,93,100,102,86,91,83,91,95,88,104,105,86,91,68,93,91,105,105,105,105,92,88,88,83,91,91,91,95,91,91,91,86,83,91,86,83,88,88,89,92,93,83,94,83,91,88,88,92,93,83,83,105,92,93,83,42,88,88,89,68,92,93,96,98,99,83,94,84,108,70,74,44,43,43,70,74,44,70,74,44,83,91,88,88,56,78,88,58,46,40,89,96,64,50,48,63,60,47,90,51,52,45,55,61,91,53,69,82,65,62,66,67,81,68,41,85,92,98,42,80,93,99,101,103,75,49,76,79,95,77,70,74,73,71,44,106,107,72,43,83,54,59,84,94,108,57,87,88,58,46,40,89,50,48,90,51,52,45,55,61,97,69,65,62,66,67,81,41,85,92,98,42,80,93,99,100,101,102,103,75,49,104,76,86,79,71,105,72,43,83,84,94,108,57,87,70,74,44,68,92,93,93,56,78,88,58,46,40,89,96,64,50,48,63,60,47,90,51,52,45,55,61,91,53,97,69,82,65,62,66,67,81,68,41,85,92,98,42,80,93,99,100,101,102,103,75,49,104,76,86,79,95,77,70,74,73,71,44,105,106,107,72,43,83,54,59,84,94,108,57,87,56,78,88,58,46,40,89,96,64,50,48,63,60,47,90,51,52,45,55,61,91,53,97,69,82,65,62,66,67,81,68,41,85,92,98,42,80,93,99,100,101,102,103,75,49,104,76,86,79,95,77,70,74,73,71,44,105,106,107,72,43,83,54,59,84,94,108,57,87,56,78,88,58,46,40,89,96,64,50,48,63,60,47,90,51,52,45,55,61,91,53,97,69,82,65,62,66,67,81,68,41,85,92,98,42,80,93,99,100,101,102,103,75,49,104,76,86,79,95,77,70,74,73,71,44,105,106,107,72,43,83,54,59,84,94,108,57,87,70,74,44,83,83,66,66,105,106,90,91,97,92,83,94,68,92,93,83,84,84,42,109,110,111,111,111,111,111,112,113,114,115,116,117,118,119,120,121,122,122,120,121,122,120,121,123,124,125,126,127,128,129,130,131,132,133,134,129,130,131,132,133,134,130,132,129,131,132,133,134,135,136,137,138,136,136,137,139,140,141,142,143,144,145,146,146,146,146,146,147,148,149,149,149,150,151,151,151,152,152,151,152,151,151,152,151,153,154,153,153,154,153,153,153,153,155,156,157,158,159,160,160,160,161,162,163,164,163,165,163,166,164,162,163,163,163,162,163,163,166,164,162,167,168,169,170,170,0,0,0,171,172,171,172,171,172,172,171,172,172,171,172,171,172,173,171,171,172,171,172,171,172,171,172],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["error",4]],[[["",0],["",0]]],[[["",0],["error",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],null,[[]],null,null,null,null,[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[["",0],["ipv4address",3]],["result",6,[["option",4,[["route",3]]]]]],[[["",0],["ipv6address",3]],["result",6,[["option",4,[["route",3]]]]]],[[["",0],["anysocket",8]],["sockethandle",3]],[[["bool",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["neighbor",3]],[[["",0]],["route",3]],[[["",0]],["sockethandle",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["sockethandle",3]],["ordering",4]],[[],["socketstorage",3]],[[],["sockethandle",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["sockethandle",3]],["bool",0]],null,[[["",0],["ipaddress",4],["hardwareaddress",4],["instant",3]]],[[],["interface",3]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["sockethandle",3]],["",0]],[[["",0],["sockethandle",3]]],[[["",0]],["hardwareaddress",4]],[[["hardwareaddress",4]]],[[["",0],["into",8,[["ipaddress",4]]]],["bool",0]],[[["",0],["into",8,[["ipaddress",4]]]],["bool",0]],[[["",0],["into",8,[["ipaddress",4]]]],["bool",0]],[[["",0],["ipv6address",3]],["bool",0]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[]],[[["",0]],["option",4,[["ipv4address",3]]]],[[["",0]],["option",4,[["ipv4address",3]]]],[[["",0]],["option",4,[["ipv4address",3]]]],[[]],[[["",0],["into",8,[["ipaddress",4]]],["instant",3]],["result",6,[["bool",0]]]],[[["",0],["into",8,[["ipaddress",4]]],["instant",3]],["result",6,[["bool",0]]]],[[["",0],["sockethandle",3]],["bool",0]],[[["neighborcache",3]]],[[]],[[],["cache",3]],[[],["routes",3]],[[["ipv4address",3]],["route",3]],[[["ipv6address",3]],["route",3]],[[["usize",0]],["cache",3]],[[["",0],["sockethandle",3]],["option",4,[["ordering",4]]]],[[["",0],["instant",3]],["result",6,[["bool",0]]]],[[["",0],["instant",3]],["option",4,[["instant",3]]]],[[["",0],["instant",3]],["option",4,[["duration",3]]]],null,[[["u64",0]]],[[["",0]],["option",4,[["route",3]]]],[[["",0]],["option",4,[["route",3]]]],[[["",0],["sockethandle",3]],["socket",4]],[[["",0]],["routes",3]],[[],["interfacebuilder",3]],[[["",0]],["routes",3]],[[["",0],["hardwareaddress",4]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["fnonce",8]]],[[["",0],["fnonce",8]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["duration",3]],[[["",0]],["devicecapabilities",3]],[[["",0]],["devicecapabilities",3]],[[["",0]],["devicecapabilities",3]],[[["",0]],["devicecapabilities",3]],[[["",0]],["devicecapabilities",3]],[[["",0]],["devicecapabilities",3]],null,[[["",0]],["pcaplinktype",4]],[[["",0]],["pcapmode",4]],[[["",0]],["checksum",4]],[[["",0]],["checksumcapabilities",3]],[[["",0]],["devicecapabilities",3]],[[["",0]],["medium",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["pcaplinktype",4]],["ordering",4]],[[["instant",3]],["result",6]],[[["instant",3],["usize",0]],["result",6]],[[["",0]],["u8",0]],[[],["checksum",4]],[[],["checksumcapabilities",3]],[[],["devicecapabilities",3]],[[],["medium",4]],[[["",0]],["u8",0]],[[["",0],["pcaplinktype",4]],["bool",0]],[[["",0],["pcapmode",4]],["bool",0]],[[["",0],["medium",4]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["u32",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["pcaplinktype",4]]],[[["",0],["pcaplinktype",4]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["usize",0]],null,null,[[["",0]],["usize",0]],[[["",0]],["u64",0]],null,[[["",0]],["u64",0]],null,[[["",0],["pcaplinktype",4]],["bool",0]],[[],["tracer",3]],[[["u32",0]],["faultinjector",3]],[[],["fuzzinjector",3]],[[["medium",4]],["loopback",3]],[[["pcapmode",4]],["pcapwriter",3]],[[["",0],["instant",3]]],[[["",0],["instant",3]]],[[["",0],["instant",3],["usize",0]]],[[["",0],["instant",3],["usize",0]]],[[["",0],["pcaplinktype",4]],["option",4,[["ordering",4]]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["bool",0]],[[["",0],["duration",3]]],[[["",0],["u8",0]]],[[["",0],["u8",0]]],[[["",0],["usize",0]]],[[["",0],["u64",0]]],[[["",0],["u64",0]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["bool",0]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["u32",0]]],[[["",0],["u32",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]],["option",4,[["duration",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["state",4]],[[["",0],["",0]]],[[["",0]]],[[["",0],["context",3]],["result",6]],[[["socket",4]],["option",4]],[[["socket",4]],["option",4]],[[["",0],["state",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["",0]],["option",4,[["u8",0]]]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["duration",3]]]],[[["",0]],["result",6]],[[["",0]],["ipendpoint",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["duration",3]]]],[[],["tcpsocket",3]],[[["",0],["usize",0]],["result",6]],[[["",0]],["result",6,[["usize",0]]]],[[["",0]],["result",6]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["result",6,[["usize",0]]]],[[["",0]],["ipendpoint",3]],[[["",0]],["result",6]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["result",6,[["usize",0]]]],[[["",0],["option",4,[["duration",3]]]]],[[["",0],["option",4,[["u8",0]]]]],[[["",0],["option",4,[["duration",3]]]]],[[["",0],["bool",0]]],[[["",0],["option",4,[["duration",3]]]]],[[["",0]],["state",4]],[[["",0]],["option",4,[["duration",3]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["socket",4]],[[],["socket",4]],[[["",0],["str",0]],["result",6]],null,null,null,null,null,null,null,[[["",0],["usize",0],["usize",0]],["result",4,[["toomanyholeserror",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["usize",0]],[[["",0]]],[[["",0]],["packetmetadata",3]],[[["",0],["",0]]],[[["",0]],["usize",0]],[[["",0]],["result",6]],[[["",0],["usize",0]]],[[["",0],["usize",0]]],[[["",0]]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["usize",0]],[[["",0]],["result",6]],[[["",0],["usize",0]],["result",6]],[[["",0],["usize",0]]],[[["",0]]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["usize",0]],[[["",0],["usize",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["managedslice",4]],["ringbuffer",3]],[[["",0],["usize",0],["usize",0]]],[[["",0],["usize",0],["usize",0]]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["usize",0]],["assembleriter",3]],[[["",0]],["usize",0]],[[["usize",0]],["assembler",3]],[[],["packetbuffer",3]],[[],["ringbuffer",3]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["result",6]],[[["",0],["usize",0]],["usize",0]],[[["",0]],["option",4,[["usize",0]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["usize",0]],[[["",0],["usize",0]],["usize",0]],null,null,null,[[["duration",3]],["instant",3]],[[["duration",3]],["duration",3]],[[["",0],["duration",3]]],[[["",0],["duration",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["instant",3]],[[["",0]],["duration",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["instant",3]],["ordering",4]],[[["",0],["duration",3]],["ordering",4]],[[],["duration",3]],[[["u32",0]],["duration",3]],[[["",0],["u32",0]]],[[["",0],["instant",3]],["bool",0]],[[["",0],["duration",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[["duration",3]],["duration",3]],[[]],[[["into",8,[["i64",0]]]],["instant",3]],[[["u64",0]],["duration",3]],[[["i64",0]],["instant",3]],[[["into",8,[["i64",0]]]],["instant",3]],[[["u64",0]],["duration",3]],[[["i64",0]],["instant",3]],[[["into",8,[["i64",0]]]],["instant",3]],[[["u64",0]],["duration",3]],[[]],[[]],[[["",0]],["i64",0]],[[["",0]],["u64",0]],[[["",0]],["i64",0]],[[["",0]],["u64",0]],[[["u32",0]],["duration",3]],[[["",0],["u32",0]]],[[["",0],["instant",3]],["bool",0]],[[["",0],["duration",3]],["bool",0]],[[["",0],["instant",3]],["option",4,[["ordering",4]]]],[[["",0],["duration",3]],["option",4,[["ordering",4]]]],[[["",0]],["i64",0]],[[["",0]],["u64",0]],[[["u32",0]],["duration",3]],[[["",0],["u32",0]]],[[["u32",0]],["duration",3]],[[["",0],["u32",0]]],[[["duration",3]],["instant",3]],[[["instant",3]],["duration",3]],[[["duration",3]],["duration",3]],[[["",0],["duration",3]]],[[["",0],["duration",3]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["i64",0]],[[["",0]],["u64",0]],[[["",0]],["i64",0]],[[["",0]],["u64",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["bool",0]],[[["",0]],["seqnumber",3]],null,[[["usize",0]],["seqnumber",3]],[[["",0],["usize",0]]],null,[[["",0]],["address",4]],[[["",0]],["address",3]],[[["",0]],["address",3]],[[["",0]]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["option",4,[["address",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["address",4]],[[["",0]],["u8",0]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["routerflags",3]]],[[["neighborflags",3]]],[[["prefixinfoflags",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["option",4,[["address",3]]]],[[["",0]],["usize",0]],[[["usize",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["hardware",4]],[[["",0]],["operation",4]],[[["",0]],["packet",3]],[[["",0]],["repr",4]],[[["",0]],["ethertype",4]],[[["",0]],["address",3]],[[["",0]],["frame",3]],[[["",0]],["repr",3]],[[["",0]],["repr",4]],[[["",0]],["message",4]],[[["",0]],["dstunreachable",4]],[[["",0]],["redirect",4]],[[["",0]],["timeexceeded",4]],[[["",0]],["paramproblem",4]],[[["",0]],["packet",3]],[[["",0]],["repr",4]],[[["",0]],["message",4]],[[["",0]],["dstunreachable",4]],[[["",0]],["paramproblem",4]],[[["",0]],["timeexceeded",4]],[[["",0]],["packet",3]],[[["",0]],["repr",4]],[[["",0]],["repr",4]],[[["",0]],["igmpversion",4]],[[["",0]],["version",4]],[[["",0]],["protocol",4]],[[["",0]],["address",4]],[[["",0]],["cidr",4]],[[["",0]],["endpoint",3]],[[["",0]],["repr",4]],[[["",0]],["address",3]],[[["",0]],["cidr",3]],[[["",0]],["packet",3]],[[["",0]],["repr",3]],[[["",0]],["address",3]],[[["",0]],["cidr",3]],[[["",0]],["packet",3]],[[["",0]],["repr",3]],[[["",0]],["repr",3]],[[["",0]],["repr",3]],[[["",0]],["type",4]],[[["",0]],["failuretype",4]],[[["",0]],["repr",4]],[[["",0]],["repr",4]],[[["",0]],["addressrecord",3]],[[["",0]],["repr",4]],[[["",0]],["routerflags",3]],[[["",0]],["neighborflags",3]],[[["",0]],["repr",4]],[[["",0]],["type",4]],[[["",0]],["prefixinfoflags",3]],[[["",0]],["prefixinformation",3]],[[["",0]],["redirectedheader",3]],[[["",0]],["repr",4]],[[["",0]],["seqnumber",3]],[[["",0]],["packet",3]],[[["",0]],["tcpoption",4]],[[["",0]],["control",4]],[[["",0]],["repr",3]],[[["",0]],["packet",3]],[[["",0]],["repr",3]],[[["",0]],["hardwareaddress",4]],[[["",0]],["rawhardwareaddresshardware",4]],["ordering",4]],[[["",0],["operation",4]],["ordering",4]],[[["",0],["ethertype",4]],["ordering",4]],[[["",0],["address",3]],["ordering",4]],[[["",0],["message",4]],["ordering",4]],[[["",0],["dstunreachable",4]],["ordering",4]],[[["",0],["redirect",4]],["ordering",4]],[[["",0],["timeexceeded",4]],["ordering",4]],[[["",0],["paramproblem",4]],["ordering",4]],[[["",0],["message",4]],["ordering",4]],[[["",0],["dstunreachable",4]],["ordering",4]],[[["",0],["paramproblem",4]],["ordering",4]],[[["",0],["timeexceeded",4]],["ordering",4]],[[["",0],["version",4]],["ordering",4]],[[["",0],["protocol",4]],["ordering",4]],[[["",0],["address",4]],["ordering",4]],[[["",0],["cidr",4]],["ordering",4]],[[["",0],["endpoint",3]],["ordering",4]],[[["",0],["address",3]],["ordering",4]],[[["",0],["cidr",3]],["ordering",4]],[[["",0],["address",3]],["ordering",4]],[[["",0],["cidr",3]],["ordering",4]],[[["",0],["type",4]],["ordering",4]],[[["",0],["failuretype",4]],["ordering",4]],[[["",0],["routerflags",3]],["ordering",4]],[[["",0],["neighborflags",3]],["ordering",4]],[[["",0],["type",4]],["ordering",4]],[[["",0],["prefixinfoflags",3]],["ordering",4]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["address",4]],["bool",0]],[[["",0],["address",3]],["bool",0]],[[["",0],["address",3]],["bool",0]],[[["",0],["cidr",4]],["bool",0]],[[["",0],["cidr",3]],["bool",0]],[[["",0],["cidr",3]],["bool",0]],null,[[["",0]],["u8",0]],[[["",0]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]]],null,[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["address",3]],[[],["address",4]],[[],["endpoint",3]],[[],["address",3]],[[],["cidr",3]],[[],["address",3]],[[],["cidr",3]],[[],["seqnumber",3]],[[["",0]],["ipv6address",3]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["u8",0]],[[["",0]],["address",3]],[[["",0]],["address",4]],[[["",0]],["address",3]],[[["",0]],["address",3]],null,null,null,[[["",0]],["u16",0]],[[["",0]],["u16",0]],null,null,[[["",0]],["bool",0]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]],["u8",0]],[[["",0],["packet",3]]],[[["",0],["frame",3]]],[[["",0],["packet",3],["checksumcapabilities",3]]],[[["",0],["ipaddress",4],["ipaddress",4],["packet",3],["checksumcapabilities",3]]],[[["",0],["packet",3]]],[[["",0],["",26,[["asref",8],["asmut",8]]],["checksumcapabilities",3]]],[[["",0],["packet",3],["checksumcapabilities",3]]],[[["",0],["packet",3]]],[[["",0],["header",3]]],[[["",0],["header",3]]],[[["",0],["ipv6option",3]]],[[["",0],["header",3]]],[[["",0],["packet",3]]],[[["",0],["packet",3]]],[[["",0],["ndiscoption",3]]],[[["",0]]],[[["",0],["packet",3],["ipaddress",4],["ipaddress",4],["checksumcapabilities",3]]],[[["",0],["packet",3],["ipaddress",4],["ipaddress",4],["usize",0],["checksumcapabilities",3]]],[[]],[[]],[[]],[[["",0],["hardware",4]],["bool",0]],[[["",0],["operation",4]],["bool",0]],[[["",0],["packet",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["ethertype",4]],["bool",0]],[[["",0],["address",3]],["bool",0]],[[["",0],["repr",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["message",4]],["bool",0]],[[["",0],["dstunreachable",4]],["bool",0]],[[["",0],["redirect",4]],["bool",0]],[[["",0],["timeexceeded",4]],["bool",0]],[[["",0],["paramproblem",4]],["bool",0]],[[["",0],["packet",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["message",4]],["bool",0]],[[["",0],["dstunreachable",4]],["bool",0]],[[["",0],["paramproblem",4]],["bool",0]],[[["",0],["timeexceeded",4]],["bool",0]],[[["",0],["packet",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["igmpversion",4]],["bool",0]],[[["",0],["version",4]],["bool",0]],[[["",0],["protocol",4]],["bool",0]],[[["",0],["address",4]],["bool",0]],[[["",0],["cidr",4]],["bool",0]],[[["",0],["endpoint",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["address",3]],["bool",0]],[[["",0],["cidr",3]],["bool",0]],[[["",0],["packet",3]],["bool",0]],[[["",0],["repr",3]],["bool",0]],[[["",0],["address",3]],["bool",0]],[[["",0],["cidr",3]],["bool",0]],[[["",0],["packet",3]],["bool",0]],[[["",0],["repr",3]],["bool",0]],[[["",0],["header",3]],["bool",0]],[[["",0],["repr",3]],["bool",0]],[[["",0],["header",3]],["bool",0]],[[["",0],["repr",3]],["bool",0]],[[["",0],["type",4]],["bool",0]],[[["",0],["failuretype",4]],["bool",0]],[[["",0],["ipv6option",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["header",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["addressrecord",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["routerflags",3]],["bool",0]],[[["",0],["neighborflags",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["type",4]],["bool",0]],[[["",0],["prefixinfoflags",3]],["bool",0]],[[["",0],["ndiscoption",3]],["bool",0]],[[["",0],["prefixinformation",3]],["bool",0]],[[["",0],["redirectedheader",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["seqnumber",3]],["bool",0]],[[["",0],["packet",3]],["bool",0]],[[["",0],["tcpoption",4]],["bool",0]],[[["",0],["control",4]],["bool",0]],[[["",0],["repr",3]],["bool",0]],[[["",0],["packet",3]],["bool",0]],[[["",0],["repr",3]],["bool",0]],[[["",0],["hardwareaddress",4]],["bool",0]],[[["",0],["rawhardwareaddress",3]],["bool",0]],[[["",0]],["ethertype",4]],null,[[["",0],["intoiterator",8]]],[[["",0],["intoiterator",8]]],[[["",0],["intoiterator",8]]],[[["",0]]],[[["",0],["ipaddress",4],["ipaddress",4]]],[[["",0]]],[[["",0]]],[[["",0],["ipaddress",4],["ipaddress",4]]],[[["",0],["ipaddress",4],["ipaddress",4]]],[[["",0]],["bool",0]],null,[[["",0]],["u32",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],null,[[]],[[["u16",0]]],[[["u16",0]]],[[]],[[]],[[]],[[]],[[["u16",0]]],[[]],[[]],[[]],[[["repr",4]]],[[]],[[["repr",4]]],[[]],[[["u8",0]]],[[["u8",0]]],[[]],[[["u8",0]]],[[]],[[]],[[["u8",0]]],[[["u8",0]]],[[]],[[]],[[]],[[["u8",0]]],[[]],[[]],[[["u8",0]]],[[["u8",0]]],[[]],[[["u8",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",0]]],[[]],[[["ipv6address",3]]],[[["ipv4address",3]]],[[["ipv6cidr",3]]],[[]],[[["ipv4cidr",3]]],[[]],[[],["endpoint",3]],[[["u16",0]],["endpoint",3]],[[]],[[["ipv6repr",3]],["repr",4]],[[["ipv4repr",3]],["repr",4]],[[]],[[]],[[]],[[]],[[["address",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",0]]],[[]],[[]],[[["u8",0]]],[[["type",4]],["failuretype",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["ethernetaddress",3]]],[[]],[[["ethernetaddress",3]]],[[["hardwareaddress",4]]],[[["u8",0]],["option",4]],[[["u8",0]],["option",4]],[[["u8",0]],["option",4]],[[["u8",0]]],[[["u8",0]]],[[["u8",0]]],[[["u8",0]]],[[["u8",0]]],[[["u8",0]]],[[],["address",3]],[[],["address",3]],[[],["address",3]],[[]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["address",3],["address",3]],["result",6,[["cidr",3]]]],[[],["address",3]],[[["str",0]],["result",4,[["ethernetaddress",3]]]],[[["str",0]],["result",4,[["ipaddress",4]]]],[[["str",0]],["result",4,[["ipcidr",4]]]],[[["str",0]],["result",4,[["ipendpoint",3]]]],[[["str",0]],["result",4,[["ipv4address",3]]]],[[["str",0]],["result",4,[["ipv4cidr",3]]]],[[["str",0]],["result",4,[["ipv6address",3]]]],[[["str",0]],["result",4,[["ipv6cidr",3]]]],[[["",0]],["ipv4address",3]],[[["",0]],["u8",0]],[[["",0]],["hardware",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["u8",0]],[[["",0]],["usize",0]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["address",3]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],null,null,[[["",0]],["u16",0]],[[["",0]],["u32",0]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["usize",0]],[[["",0]],["u16",0]],[[["",0]],["usize",0]],null,[[["",0]],["rawhardwareaddress",3]],[[["",0]],["result",6,[["repr",4]]]],[[["",0]],["u16",0]],[[["",0]],["u8",0]],null,[[["",0]],["ipv6address",3]],[[["",0]],["ipv6address",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[["",0]],["message",4]],[[["",0]],["message",4]],[[["",0]],["message",4]],[[["",0]],["u32",0]],[[["",0],["hardware",4]],["bool",0]],[[["",0],["operation",4]],["bool",0]],[[["",0],["packet",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["ethertype",4]],["bool",0]],[[["",0],["address",3]],["bool",0]],[[["",0],["repr",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["message",4]],["bool",0]],[[["",0],["dstunreachable",4]],["bool",0]],[[["",0],["redirect",4]],["bool",0]],[[["",0],["timeexceeded",4]],["bool",0]],[[["",0],["paramproblem",4]],["bool",0]],[[["",0],["packet",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["message",4]],["bool",0]],[[["",0],["dstunreachable",4]],["bool",0]],[[["",0],["paramproblem",4]],["bool",0]],[[["",0],["timeexceeded",4]],["bool",0]],[[["",0],["packet",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["protocol",4]],["bool",0]],[[["",0],["address",4]],["bool",0]],[[["",0],["cidr",4]],["bool",0]],[[["",0],["endpoint",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["address",3]],["bool",0]],[[["",0],["cidr",3]],["bool",0]],[[["",0],["packet",3]],["bool",0]],[[["",0],["repr",3]],["bool",0]],[[["",0],["address",3]],["bool",0]],[[["",0],["cidr",3]],["bool",0]],[[["",0],["packet",3]],["bool",0]],[[["",0],["repr",3]],["bool",0]],[[["",0],["header",3]],["bool",0]],[[["",0],["repr",3]],["bool",0]],[[["",0],["header",3]],["bool",0]],[[["",0],["repr",3]],["bool",0]],[[["",0],["type",4]],["bool",0]],[[["",0],["failuretype",4]],["bool",0]],[[["",0],["ipv6option",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["header",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["addressrecord",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["routerflags",3]],["bool",0]],[[["",0],["neighborflags",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["type",4]],["bool",0]],[[["",0],["prefixinfoflags",3]],["bool",0]],[[["",0],["ndiscoption",3]],["bool",0]],[[["",0],["prefixinformation",3]],["bool",0]],[[["",0],["redirectedheader",3]],["bool",0]],[[["",0],["repr",4]],["bool",0]],[[["",0],["seqnumber",3]],["bool",0]],[[["",0],["packet",3]],["bool",0]],[[["",0],["tcpoption",4]],["bool",0]],[[["",0],["repr",3]],["bool",0]],[[["",0],["packet",3]],["bool",0]],[[["",0],["repr",3]],["bool",0]],[[["",0],["hardwareaddress",4]],["bool",0]],[[["",0],["rawhardwareaddress",3]],["bool",0]],[[["",0]],["neighborflags",3]],[[["",0]],["address",3]],[[["",0]],["cidr",3]],[[["address",4],["u8",0]],["cidr",4]],[[["address",4],["u16",0]],["endpoint",3]],[[["u8",0],["u8",0],["u8",0],["u8",0]],["address",3]],[[["address",3],["u8",0]],["cidr",3]],[[["u16",0],["u16",0],["u16",0],["u16",0],["u16",0],["u16",0],["u16",0],["u16",0]],["address",3]],[[["address",3],["u8",0]],["cidr",3]],[[],["header",3]],[[],["result",6,[["packet",3]]]],[[],["result",6,[["frame",3]]]],[[],["result",6,[["packet",3]]]],[[],["result",6,[["packet",3]]]],[[],["result",6,[["packet",3]]]],[[],["result",6,[["packet",3]]]],[[],["result",6,[["packet",3]]]],[[],["result",6,[["header",3]]]],[[],["result",6,[["header",3]]]],[[],["result",6,[["ipv6option",3]]]],[[],["result",6,[["header",3]]]],[[],["result",6]],[[],["result",6,[["ndiscoption",3]]]],[[],["result",6,[["packet",3]]]],[[],["result",6,[["packet",3]]]],[[],["packet",3]],[[],["frame",3]],[[],["packet",3]],[[],["packet",3]],[[],["packet",3]],[[],["packet",3]],[[],["packet",3]],[[],["header",3]],[[],["header",3]],[[],["ipv6option",3]],[[]],[[],["ndiscoption",3]],[[],["packet",3]],[[],["packet",3]],[[["",0]],["protocol",4]],[[["",0]],["protocol",4]],[[["",0]],["protocol",4]],[[["",0]],["protocol",4]],null,null,null,[[]],[[]],[[]],[[["",0]],["u16",0]],[[["",0]],["bool",0]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[],["result",6,[["version",4]]]],[[["",0]],["operation",4]],[[["",0]],["type",4]],[[["",0]],["type",4]],[[["",0]]],[[["",0]],["ipv6optionsiterator",3]],[[["",0]]],null,[[["",0]]],[[["",0]]],[[["",0]],["u8",0]],[[["",0]],["u32",0]],[[["packet",3]],["result",6,[["repr",4]]]],[[["frame",3]],["result",6,[["repr",3]]]],[[["packet",3],["checksumcapabilities",3]],["result",6,[["repr",4]]]],[[["ipaddress",4],["ipaddress",4],["packet",3],["checksumcapabilities",3]],["result",6,[["repr",4]]]],[[["packet",3]],["result",6,[["repr",4]]]],[[["packet",3],["checksumcapabilities",3]],["result",6,[["repr",3]]]],[[["packet",3]],["result",6,[["repr",3]]]],[[["header",3]],["result",6,[["repr",3]]]],[[["header",3]],["result",6,[["repr",3]]]],[[["ipv6option",3]],["result",6,[["repr",4]]]],[[["header",3]],["result",6,[["repr",4]]]],[[["packet",3]],["result",6,[["repr",4]]]],[[["packet",3]],["result",6,[["repr",4]]]],[[["ndiscoption",3]],["result",6,[["repr",4]]]],[[],["result",6]],[[["packet",3],["ipaddress",4],["ipaddress",4],["checksumcapabilities",3]],["result",6,[["repr",3]]]],[[["packet",3],["ipaddress",4],["ipaddress",4],["checksumcapabilities",3]],["result",6,[["repr",3]]]],[[["",0],["medium",4]],["result",4,[["hardwareaddress",4],["error",4]]]],[[["",0],["hardware",4]],["option",4,[["ordering",4]]]],[[["",0],["operation",4]],["option",4,[["ordering",4]]]],[[["",0],["ethertype",4]],["option",4,[["ordering",4]]]],[[["",0],["address",3]],["option",4,[["ordering",4]]]],[[["",0],["message",4]],["option",4,[["ordering",4]]]],[[["",0],["dstunreachable",4]],["option",4,[["ordering",4]]]],[[["",0],["redirect",4]],["option",4,[["ordering",4]]]],[[["",0],["timeexceeded",4]],["option",4,[["ordering",4]]]],[[["",0],["paramproblem",4]],["option",4,[["ordering",4]]]],[[["",0],["message",4]],["option",4,[["ordering",4]]]],[[["",0],["dstunreachable",4]],["option",4,[["ordering",4]]]],[[["",0],["paramproblem",4]],["option",4,[["ordering",4]]]],[[["",0],["timeexceeded",4]],["option",4,[["ordering",4]]]],[[["",0],["version",4]],["option",4,[["ordering",4]]]],[[["",0],["protocol",4]],["option",4,[["ordering",4]]]],[[["",0],["address",4]],["option",4,[["ordering",4]]]],[[["",0],["cidr",4]],["option",4,[["ordering",4]]]],[[["",0],["endpoint",3]],["option",4,[["ordering",4]]]],[[["",0],["address",3]],["option",4,[["ordering",4]]]],[[["",0],["cidr",3]],["option",4,[["ordering",4]]]],[[["",0],["address",3]],["option",4,[["ordering",4]]]],[[["",0],["cidr",3]],["option",4,[["ordering",4]]]],[[["",0],["type",4]],["option",4,[["ordering",4]]]],[[["",0],["failuretype",4]],["option",4,[["ordering",4]]]],[[["",0],["routerflags",3]],["option",4,[["ordering",4]]]],[[["",0],["neighborflags",3]],["option",4,[["ordering",4]]]],[[["",0],["type",4]],["option",4,[["ordering",4]]]],[[["",0],["prefixinfoflags",3]],["option",4,[["ordering",4]]]],[[["",0],["seqnumber",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,[[["",0]],["usize",0]],[[["",0]],["u16",0]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["u32",0]],null,[[["",0]],["duration",3]],null,[[["",0]],["ipv6address",3]],null,[[["",0]],["prefixinfoflags",3]],[[["",0]],["option",4,[["u8",0]]]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],null,null,[[["asref",8],["formatter",3],["prettyindent",3]],["result",6]],[[["asref",8],["formatter",3],["prettyindent",3]],["result",6]],[[["asref",8],["formatter",3],["prettyindent",3]],["result",6]],[[["asref",8],["formatter",3],["prettyindent",3]],["result",6]],[[["asref",8],["formatter",3],["prettyindent",3]],["result",6]],[[["asref",8],["formatter",3],["prettyindent",3]],["result",6]],[[["asref",8],["formatter",3],["prettyindent",3]],["result",6]],[[["asref",8],["formatter",3],["prettyindent",3]],["result",6]],[[["asref",8],["formatter",3],["prettyindent",3]],["result",6]],[[["",0]],["protocol",4]],[[["",0]],["protocol",4]],null,[[["",0]],["u8",0]],[[["",0]],["protocol",4]],[[["",0]],["bool",0]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[],["control",4]],[[["",0]],["duration",3]],[[["",0]],["recordtype",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["duration",3]],[[["",0]],["routerflags",3]],[[["",0]],["duration",3]],[[["",0]],["type",4]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["u8",0]],[[["",0]],["result",6,[["bool",0]]]],[[["",0]],["result",6]],[[["",0]],["seqnumber",3]],null,[[["",0],["bool",0]]],[[["",0],["bool",0]]],[[["",0],["bool",0]]],[[["",0],["bool",0]]],[[["",0],["seqnumber",3]]],[[["",0]]],[[["",0],["u8",0]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["u8",0]]],[[["",0],["u8",0]]],[[["",0],["u8",0]]],[[["",0],["bool",0]]],[[["",0],["u8",0]]],[[["",0],["u8",0]]],[[["",0],["ipv6address",3]]],[[["",0],["bool",0]]],[[["",0],["u8",0]]],[[["",0],["address",3]]],[[["",0],["address",3]]],[[["",0],["address",3]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["bool",0]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["u8",0]]],[[["",0],["ethertype",4]]],[[["",0],["bool",0]]],[[["",0],["u32",0]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["ipv4address",3]]],[[["",0],["u8",0]]],[[["",0],["hardware",4]]],[[["",0],["u8",0]]],[[["",0],["u8",0]]],[[["",0],["u8",0]]],[[["",0],["u8",0]]],[[["",0],["address",3]]],[[["",0],["u8",0]]],[[["",0],["u8",0]]],[[["",0],["u16",0]]],[[["",0],["u32",0]]],[[["",0],["u16",0]]],[[["",0],["rawhardwareaddress",3]]],[[["",0],["u16",0]]],[[["",0],["u8",0]]],[[["",0],["ipv6address",3]]],[[["",0],["ipv6address",3]]],[[["",0],["bool",0]]],[[["",0],["bool",0]]],[[["",0],["u8",0]]],[[["",0],["u8",0]]],[[["",0],["message",4]]],[[["",0],["message",4]]],[[["",0],["message",4]]],[[["",0],["u32",0]]],[[["",0],["neighborflags",3]]],[[["",0],["protocol",4]]],[[["",0],["protocol",4]]],[[["",0],["protocol",4]]],[[["",0],["protocol",4]]],[[["",0],["u16",0]]],[[["",0],["bool",0]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["operation",4]]],[[["",0],["type",4]]],[[["",0],["type",4]]],[[["",0],["u8",0]]],[[["",0],["u32",0]]],[[["",0],["usize",0]]],[[["",0],["u16",0]]],[[["",0],["u32",0]]],[[["",0],["duration",3]]],[[["",0],["ipv6address",3]]],[[["",0],["prefixinfoflags",3]]],[[["",0],["u8",0]]],[[["",0],["protocol",4]]],[[["",0],["u8",0]]],[[["",0],["protocol",4]]],[[["",0],["bool",0]]],[[["",0],["u8",0]]],[[["",0],["u8",0]]],[[["",0],["duration",3]]],[[["",0],["recordtype",4]]],[[["",0],["duration",3]]],[[["",0],["routerflags",3]]],[[["",0],["duration",3]]],[[["",0],["type",4]]],[[["",0],["bool",0]]],[[["",0]]],[[["",0],["u8",0]]],[[["",0],["seqnumber",3]]],[[["",0]]],[[["",0]]],[[["",0],["address",3]]],[[["",0],["address",3]]],[[["",0],["address",3]]],[[["",0],["u16",0]]],[[["",0],["u16",0]]],[[["",0],["bool",0]]],[[["",0],["ipv6address",3]]],[[["",0]]],[[["",0]]],[[["",0],["u16",0]]],[[["",0],["u8",0]]],[[["",0],["bool",0]]],[[["",0],["u16",0]]],[[["",0],["duration",3]]],[[["",0],["u8",0]]],[[["",0],["u8",0]]],[[["",0],["u16",0]]],[[["",0]],["address",3]],[[["",0]]],[[["",0]]],[[["",0]],["address",3]],[[["",0]],["address",4]],[[["",0]],["address",3]],[[["",0]],["address",3]],null,null,null,[[["",0]],["u16",0]],[[["",0]],["u16",0]],null,null,[[]],[[]],[[]],[[["usize",0]],["seqnumber",3]],[[["seqnumber",3]],["usize",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["ipv6addressstring",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["usize",0]],[[["",0]],["u16",0]],[[["",0]],["usize",0]],[[["",0]],["u8",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["u16",0]],[[["u8",0],["u8",0],["u8",0],["u8",0]],["address",4]],[[["u16",0],["u16",0],["u16",0],["u16",0],["u16",0],["u16",0],["u16",0],["u16",0]],["address",4]],[[["",0]],["duration",3]],null,[[["",0]],["bool",0]],[[["",0],["ipaddress",4],["ipaddress",4]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["ipaddress",4],["ipaddress",4]],["bool",0]],[[["",0],["ipaddress",4],["ipaddress",4]],["bool",0]],[[["",0]],["version",4]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[["",0]],["u16",0]],null,null,[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["str",0],["asref",8]],["prettyprinter",3]],[[["str",0]],["prettyindent",3]],[[["asref",8],["formatter",3],["prettyindent",3]],["result",6]],[[["",0]],["prettyprinter",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[4,"Error"],[3,"SocketStorage"],[3,"Routes"],[3,"Interface"],[3,"InterfaceBuilder"],[3,"Context"],[3,"Neighbor"],[3,"NeighborCache"],[3,"Route"],[3,"SocketHandle"],[4,"PcapMode"],[4,"Checksum"],[4,"PcapLinkType"],[4,"Medium"],[8,"Device"],[3,"Tracer"],[3,"FaultInjector"],[3,"FuzzInjector"],[3,"Loopback"],[3,"PcapWriter"],[3,"ChecksumCapabilities"],[3,"DeviceCapabilities"],[8,"RxToken"],[8,"TxToken"],[8,"PcapSink"],[8,"Fuzzer"],[13,"Unknown"],[4,"TcpState"],[4,"Socket"],[3,"TcpSocket"],[8,"AnySocket"],[13,"Tcp"],[3,"PacketMetadata"],[3,"Assembler"],[3,"PacketBuffer"],[3,"RingBuffer"],[8,"Resettable"],[3,"Duration"],[3,"Instant"],[3,"EthernetAddress"],[3,"Ipv4Address"],[3,"Ipv6Address"],[3,"TcpSeqNumber"],[3,"NdiscPrefixInfoFlags"],[4,"Icmpv6DstUnreachable"],[4,"EthernetProtocol"],[4,"Icmpv4ParamProblem"],[4,"Icmpv4DstUnreachable"],[4,"Ipv6OptionFailureType"],[4,"Icmpv4Message"],[4,"Icmpv4Repr"],[4,"Icmpv6Message"],[4,"Icmpv6Repr"],[4,"TcpOption"],[4,"Icmpv6ParamProblem"],[4,"ArpHardware"],[4,"HardwareAddress"],[4,"ArpRepr"],[4,"TcpControl"],[4,"Icmpv4TimeExceeded"],[4,"Icmpv6TimeExceeded"],[4,"IpProtocol"],[4,"Icmpv4Redirect"],[4,"IcmpRepr"],[4,"IpVersion"],[4,"IpAddress"],[4,"IpCidr"],[4,"IpRepr"],[4,"IgmpRepr"],[3,"NdiscRouterFlags"],[4,"NdiscOptionType"],[4,"NdiscOptionRepr"],[4,"NdiscRepr"],[3,"NdiscNeighborFlags"],[4,"Ipv6OptionType"],[4,"Ipv6OptionRepr"],[4,"MldRepr"],[4,"ArpOperation"],[4,"Ipv6RoutingRepr"],[3,"Ipv6Cidr"],[3,"IpEndpoint"],[4,"IgmpVersion"],[3,"TcpPacket"],[3,"TcpRepr"],[3,"Ipv4Cidr"],[3,"Ipv6RoutingHeader"],[3,"RawHardwareAddress"],[3,"ArpPacket"],[3,"EthernetFrame"],[3,"Icmpv4Packet"],[3,"Icmpv6Packet"],[3,"Ipv4Packet"],[3,"Ipv6Packet"],[3,"UdpPacket"],[3,"MldAddressRecord"],[3,"EthernetRepr"],[3,"IgmpPacket"],[3,"Ipv4Repr"],[3,"Ipv6Repr"],[3,"Ipv6FragmentHeader"],[3,"Ipv6FragmentRepr"],[3,"Ipv6HopByHopHeader"],[3,"Ipv6HopByHopRepr"],[3,"Ipv6Option"],[3,"NdiscOption"],[3,"NdiscPrefixInformation"],[3,"NdiscRedirectedHeader"],[3,"UdpRepr"],[13,"Unknown"],[13,"Unknown"],[13,"EthernetIpv4"],[13,"Unknown"],[13,"Ethernet"],[13,"Ipv4"],[13,"Ipv6"],[13,"Unknown"],[13,"Unknown"],[13,"Unknown"],[13,"Unknown"],[13,"EchoRequest"],[13,"EchoReply"],[13,"DstUnreachable"],[13,"Unknown"],[13,"Unknown"],[13,"Unknown"],[13,"Unknown"],[13,"Ndisc"],[13,"Mld"],[13,"DstUnreachable"],[13,"PktTooBig"],[13,"TimeExceeded"],[13,"ParamProblem"],[13,"EchoRequest"],[13,"EchoReply"],[13,"Unknown"],[13,"MembershipQuery"],[13,"MembershipReport"],[13,"LeaveGroup"],[13,"Ipv4"],[13,"Ipv6"],[13,"Ipv4"],[13,"Ipv6"],[13,"Unknown"],[13,"Ipv4"],[13,"Ipv6"],[13,"Unspecified"],[13,"Unknown"],[13,"PadN"],[13,"Unknown"],[13,"Unknown"],[13,"Rpl"],[13,"Type2"],[13,"Query"],[13,"Report"],[13,"SourceLinkLayerAddr"],[13,"TargetLinkLayerAddr"],[13,"PrefixInformation"],[13,"RedirectedHeader"],[13,"Mtu"],[13,"Unknown"],[13,"Unknown"],[13,"Redirect"],[13,"RouterAdvert"],[13,"NeighborAdvert"],[13,"RouterSolicit"],[13,"NeighborSolicit"],[13,"MaxSegmentSize"],[13,"WindowScale"],[13,"SackRange"],[13,"Unknown"],[3,"PrettyPrinter"],[3,"PrettyIndent"],[8,"PrettyPrint"]]},\
"spin":{"doc":"This crate provides spin-based versions of the primitives …","t":[6,6,6,2,6,2,6,2,6,6,2,0,0,0,0,0,0,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,6,6,6,3,3,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,3,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Barrier","Lazy","Mutex","MutexGuard","Once","RelaxStrategy","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","Spin","barrier","lazy","lock_api","mutex","once","relax","rwlock","Barrier","BarrierWaitResult","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","is_leader","new","try_from","try_from","try_into","try_into","type_id","type_id","wait","Lazy","as_mut_ptr","borrow","borrow_mut","default","deref","fmt","force","from","into","new","try_from","try_into","type_id","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","Mutex","MutexGuard","SpinMutex","SpinMutexGuard","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","spin","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","SpinMutex","SpinMutexGuard","as_mut_ptr","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","INIT","Once","as_mut_ptr","borrow","borrow_mut","call_once","drop","fmt","from","from","from","get","get_mut","get_unchecked","initialized","into","is_completed","new","poll","try_from","try_into","try_into_inner","type_id","wait","Loop","RelaxStrategy","Spin","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","relax","relax","relax","try_from","try_from","try_into","try_into","type_id","type_id","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","as_mut_ptr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradeable","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_read_decrement","force_write_unlock","from","from","from","from","from","from","get_mut","into","into","into","into","into_inner","is_locked","leak","leak","leak","lock_exclusive","lock_shared","lock_upgradable","new","read","reader_count","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_lock_exclusive","try_lock_shared","try_lock_upgradable","try_read","try_upgrade","try_upgrade","try_upgradeable_read","try_write","type_id","type_id","type_id","type_id","unlock_exclusive","unlock_shared","unlock_upgradable","upgrade","upgrade","upgradeable_read","write","writer_count"],"q":["spin","","","","","","","","","","","","","","","","","","spin::barrier","","","","","","","","","","","","","","","","","","","spin::lazy","","","","","","","","","","","","","","spin::lock_api","","","","","","spin::mutex","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","spin::mutex::spin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","spin::once","","","","","","","","","","","","","","","","","","","","","","","","spin::relax","","","","","","","","","","","","","","","","","","","","spin::rwlock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A primitive that synchronizes the execution of multiple …","A value which is initialized on the first access. See …","A primitive that synchronizes the execution of multiple …","","A primitive that provides lazy one-time initialization. …","","A lock that provides data access to either one writer or …","","A guard that provides immutable data access but can be …","A guard that provides mutable data access. See …","","Synchronization primitive allowing multiple threads to …","Synchronization primitives for lazy evaluation.","Spin synchronisation primitives, but compatible with …","Locks that have the same behaviour as a mutex.","Synchronization primitives for one-time evaluation.","Strategies that determine the behaviour of locks when …","A lock that provides data access to either one writer or …","A primitive that synchronizes the execution of multiple …","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all threads …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether this thread from <code>wait</code> is the “leader …","Creates a new barrier that can block a given number of …","","","","","","","Blocks the current thread until all threads have …","A value which is initialized on the first access.","Retrieves a mutable pointer to the inner data.","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new lazy value with the given initializing …","","","","A lock that provides mutually exclusive data access …","A guard that provides mutable data access (compatible with …","A lock that provides data access to either one writer or …","A guard that provides immutable data access (compatible …","A guard that provides immutable data access but can be …","A guard that provides mutable data access (compatible with …","A spin-based lock providing mutually exclusive access to …","A generic guard that will protect some data access and …","","","","","","","","","","","","","Force unlock this <code>Mutex</code>.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>Mutex</code> and unwraps the underlying data.","Returns <code>true</code> if the lock is currently held.","","Leak the lock guard, yielding a mutable reference to the …","Locks the <code>Mutex</code> and returns a guard that permits access to …","","Creates a new <code>Mutex</code> wrapping the supplied data.","A naïve spinning mutex.","","","","","","Try to lock this <code>Mutex</code>, returning a lock guard if …","","","","A spin lock providing mutually exclusive access to data.","A guard that provides mutable data access.","Returns a mutable pointer to the underlying data.","","","","","","","","The dropping of the MutexGuard will release the lock it …","","","","Force unlock this <code>SpinMutex</code>.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>SpinMutex</code> and unwraps the underlying data.","","Returns <code>true</code> if the lock is currently held.","Leak the lock guard, yielding a mutable reference to the …","Locks the <code>SpinMutex</code> and returns a guard that permits …","","Creates a new <code>SpinMutex</code> wrapping the supplied data.","","","","","","Try to lock this <code>SpinMutex</code>, returning a lock guard if …","","","","Initialization constant of <code>Once</code>.","A primitive that provides lazy one-time initialization.","Retrieve a pointer to the inner data.","","","Performs an initialization routine once and only once. The …","","","Returns the argument unchanged.","","","Returns a reference to the inner value if the <code>Once</code> has …","Returns a mutable reference to the inner value if the <code>Once</code> …","Returns a reference to the inner value on the unchecked …","Creates a new initialized <code>Once</code>.","Calls <code>U::from(self)</code>.","Checks whether the value has been initialized.","Creates a new <code>Once</code>.","Like <code>Once::get</code>, but will spin if the <code>Once</code> is in the …","","","Returns a the inner value if the <code>Once</code> has been initialized.","","Spins until the <code>Once</code> contains a value.","A strategy that rapidly spins, without telling the CPU to …","A trait implemented by spinning relax strategies.","A strategy that rapidly spins while informing the CPU that …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Perform the relaxing operation during a period of …","","","","","","","","","A lock that provides data access to either one writer or …","A guard that provides immutable data access.","A guard that provides immutable data access but can be …","A guard that provides mutable data access.","Returns a mutable pointer to the underying data.","","","","","","","","","","","","","","","Downgrades the writable lock guard to a readable, shared …","Downgrades the upgradeable lock guard to a readable, …","Downgrades the writable lock guard to an upgradable, …","","","","","","","","","","","Force decrement the reader count.","Force unlock exclusive write access.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>RwLock</code>, returning the underlying data.","","Leak the lock guard, yielding a reference to the …","Leak the lock guard, yielding a mutable reference to the …","Leak the lock guard, yielding a reference to the …","","","","Creates a new spinlock wrapping the supplied data.","Locks this rwlock with shared read access, blocking the …","Return the number of readers that currently hold the lock …","","","","","","","","","","","","Attempt to acquire this lock with shared read access.","","Tries to upgrade an upgradeable lock guard to a writable …","Tries to obtain an upgradeable lock guard.","Attempt to lock this rwlock with exclusive write access.","","","","","","","","","Upgrades an upgradeable lock guard to a writable lock …","Obtain a readable lock guard that can later be upgraded to …","Lock this rwlock with exclusive write access, blocking the …","Return the number of writers that currently hold the lock."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,2,1,1,2,1,2,1,2,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,4,5,4,5,4,5,5,4,5,5,4,4,4,4,5,4,4,5,4,4,4,5,4,4,4,0,4,5,4,5,4,4,4,5,4,0,0,6,6,7,6,7,6,7,7,7,6,7,7,6,6,6,6,7,6,6,7,6,6,6,7,6,6,6,6,7,6,7,6,6,6,7,6,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,9,10,9,10,9,10,9,10,11,9,10,9,10,9,10,9,10,0,0,0,0,12,12,13,14,15,12,13,14,15,12,13,14,15,14,12,14,15,14,13,14,15,12,13,13,14,14,15,15,12,12,12,12,12,13,14,15,12,12,13,14,15,12,12,13,14,15,12,12,12,12,12,12,12,13,14,15,12,13,14,15,12,12,12,12,12,15,12,12,12,13,14,15,12,12,12,12,15,12,12,12],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["usize",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["barrierwaitresult",3]],null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["",0]],["",0]],[[["",0],["formatter",3]],["result",6]],[[["",0]],["",0]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0]]],[[]],[[]],[[["never",0]]],[[]],[[["",0]],["",0]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["",0]],[[["",0]],["mutexguard",3]],[[["",0]]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["mutexguard",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],null,null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0]]],[[["never",0]]],[[]],[[]],[[]],[[["",0]],["",0]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["",0]],[[["",0]],["spinmutexguard",3]],[[["",0]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["spinmutexguard",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],null,null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["fnonce",8]],["",0]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["never",0]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["",0]],[[]],[[]],[[["",0]],["bool",0]],[[]],[[["",0]],["option",4]],[[],["result",4]],[[],["result",4]],[[],["option",4]],[[["",0]],["typeid",3]],[[["",0]],["",0]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[],["rwlockreadguard",3]],[[],["rwlockreadguard",3]],[[],["rwlockupgradableguard",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0]]],[[["",0]]],[[["never",0]]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[],["",0]],[[],["",0]],[[],["",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[]],[[["",0]],["rwlockreadguard",3]],[[["",0]],["usize",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["rwlockreadguard",3]]]],[[["",0]],["bool",0]],[[],["result",4,[["rwlockwriteguard",3]]]],[[["",0]],["option",4,[["rwlockupgradableguard",3]]]],[[["",0]],["option",4,[["rwlockwriteguard",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["rwlockwriteguard",3]],[[["",0]],["rwlockupgradableguard",3]],[[["",0]],["rwlockwriteguard",3]],[[["",0]],["usize",0]]],"p":[[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Lazy"],[3,"Mutex"],[3,"MutexGuard"],[3,"SpinMutex"],[3,"SpinMutexGuard"],[3,"Once"],[3,"Spin"],[3,"Loop"],[8,"RelaxStrategy"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableGuard"]]},\
"stardust":{"doc":"Stardust Oxide","t":[5],"n":["launch"],"q":["stardust"],"d":["Launches the kernel with the supplied reference to the …"],"i":[0],"f":[[[]]],"p":[]},\
"xen":{"doc":"Interface with Xen hypervisor","t":[17,3,7,7,11,11,0,14,0,11,0,0,14,5,11,11,0,11,0,11,14,14,0,0,0,0,11,11,11,7,2,0,0,3,11,11,11,11,11,11,11,11,11,11,7,7,3,17,5,5,11,11,5,11,11,5,5,11,11,5,11,5,11,11,11,11,5,13,13,13,13,13,13,13,13,13,4,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,0,11,11,11,11,11,11,11,11,12,12,3,11,11,5,5,11,11,11,5,5,5,11,11,11,11,5,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,18,18,18,18,18,3,3,18,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,5,5,5,5,5,5,5,5,5,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,3,12,11,11,12,12,11,11,5,11,11,11,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,5,12,12,11,11,11,11,11,11,11,11,11,5,5,5,5,5],"n":["DOMID_SELF","Delay","SHARED_INFO","START_INFO","borrow","borrow_mut","console","dbg","events","from","grant_table","hypercall","hypercall","init_info","into","into_future","memory","new","platform","poll","print","println","scheduler","sections","time","trap","try_from","try_into","type_id","xen_features","xen_sys","xenbus","xenstore","Writer","borrow","borrow_mut","flush","from","init","into","try_from","try_into","type_id","write_str","DEFAULT_HANDLER","EVENT_ACTIONS","EventAction","NUM_EVENT_PORTS","bind_event_channel","bind_virq","borrow","borrow_mut","clear_event_channel","clone","clone_into","do_event","event_channel_op","fmt","from","init","into","mask_event_channel","to_owned","try_from","try_into","type_id","unmask_event_channel","AddressTooBig","BadCopyArg","BadDevAddr","BadDomain","BadGntRef","BadHandle","BadPage","BadVirtAddr","Eagain","Error","GeneralError","GrantStatusError","Hypercall","NoDeviceSpace","NoSpace","Operation","PermissionDenied","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","grant_access","grant_end","grant_transfer","init","into","into","operations","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","GrantHandle","borrow","borrow_mut","copy","dump_table","from","into","new","query_size","setup_table","transfer","try_from","try_into","type_id","unmap","unmap_and_replace","ACCES","ADDRINUSE","ADDRNOTAVAIL","BADF","BADMSG","BUSY","CHILD","CONNREFUSED","DEADLOCK","DOM","EXIST","Error","FAULT","ILSEQ","INTR","INVAL","IO","ISCONN","ISDIR","MFILE","MLINK","MSGSIZE","NAMETOOLONG","NFILE","NOBUFS","NODATA","NODEV","NOENT","NOEXEC","NOLCK","NOMEM","NOSPC","NOSYS","NOTCONN","NOTDIR","NOTEMPTY","NOTSOCK","NXIO","OPNOTSUPP","OVERFLOW","PERM","RANGE","RESTART","ROFS","SRCH","TIME","TIMEDOUT","TOOBIG","Unknown","WOULDBLOCK","XDEV","borrow","borrow_mut","fmt","fmt","from","from","into","to_string","try_from","try_into","type_id","0","0","0","0","0","0","0","ALL","FLUSH","INVLPG","LOCAL","MULTI","MachineAddress","MachineFrameNumber","NONE","PageEntry","PageFrameNumber","PhysicalAddress","TLBFlushFlags","VirtualAddress","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","contains","difference","empty","eq","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_current_pages","get_max_machine_frame_number","get_max_pages","hash","hypervisor_mmu_update","insert","intersection","intersects","into","into","into","into","into","into","into","is_all","is_empty","l1_table_offset","l2_table_offset","l3_table_offset","l4_table_offset","ne","ne","ne","ne","ne","ne","ne","not","page_table","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pfn_up","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","update_va_mapping","build","new_frame","consts","grant_table","hypercall","time","util","DEMAND_MAP_PAGES","L1_MASK","L1_PAGETABLE_ENTRIES","L1_PAGETABLE_SHIFT","L1_PROT","L1_PROT_RO","L2_PAGETABLE_ENTRIES","L2_PAGETABLE_SHIFT","L2_PROT","L3_PAGETABLE_ENTRIES","L3_PAGETABLE_SHIFT","L3_PROT","L4_PAGETABLE_ENTRIES","L4_PAGETABLE_SHIFT","L4_PROT","MAX_MEM_SIZE","PADDR_BITS","PADDR_MASK","PAGETABLE_LEVELS","PAGE_ACCESSED","PAGE_DIRTY","PAGE_GLOBAL","PAGE_MASK","PAGE_PAT","PAGE_PCD","PAGE_PRESENT","PAGE_PSE","PAGE_PWT","PAGE_RW","PAGE_SHIFT","PAGE_SIZE","PAGE_USER","PT_PROT","VADDR_BITS","VADDR_MASK","VIRT_DEMAND_AREA","init","hypercall0","hypercall1","hypercall2","hypercall3","hypercall4","hypercall5","get_system_time","init_events","synch_clear_bit","synch_set_bit","Block","Command","Crash","PinOverride","Poll","Poweroff","Reboot","RemoteShutdown","Shutdown","ShutdownCode","ShutdownReason","Suspend","Watchdog","Watchdog","Yield","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","schedule_operation","try_from","try_from","try_into","try_into","type_id","type_id","0","0","domain_id","id","pcpu","ports","reason","timeout","timeout","edata","end","erodata","etext","text_start","block","get_system_time","init","TrapInfo","address","borrow","borrow_mut","cs","flags","from","into","set_trap_table","try_from","try_into","type_id","vector","Closed","Closing","Connected","Control","Debug","Directory","DirectoryPart","Error","GetDomainPath","GetPerms","InitWait","Initialised","Initialising","Introduce","Invalid","IsDomainIntroduced","MakeDirectory","MessageHeader","MessageKind","Read","Reconfigured","Reconfiguring","Release","Remove","ResetWatches","Resume","SetPerms","SetTarget","State","TransactionEnd","TransactionStart","TypeCount","Unknown","Unwatch","Watch","WatchEvent","Write","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","from","from","from","from","init","into","into","into","kind","request","request_id","transaction_id","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","domain_id","init","ls","read","write"],"q":["xen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xen::console","","","","","","","","","","","xen::events","","","","","","","","","","","","","","","","","","","","","","","xen::grant_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xen::grant_table::Error","","xen::grant_table::operations","","","","","","","","","","","","","","","","xen::hypercall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xen::hypercall::Error","xen::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xen::memory::page_table","","xen::platform","","","","","xen::platform::consts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xen::platform::grant_table","xen::platform::hypercall","","","","","","xen::platform::time","xen::platform::util","","","xen::scheduler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xen::scheduler::Command","","","","","","","","","xen::sections","","","","","xen::time","","","xen::trap","","","","","","","","","","","","","xen::xenbus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xen::xenstore","","","",""],"d":["Domain ID of this domain","Future for delaying asynchronous execution for the …","Xen dynamic global state information","Xen static startup information","","","Console utilities","Prints and returns the value of a given expression for …","Interface to Xen event channels","Returns the argument unchanged.","Interface for Xen Grant Tables","Platform-agnostic hypercall interface","Software trap from a domain to the hypervisor used to …","Map shared info page, initialise start and shared info …","Calls <code>U::from(self)</code>.","","Memory utility functions and types","Creates a new future that will await for the supplied …","Platform-specific","","Prints to the Xen console","Prints to the Xen console with newline and carriage return","Virtual machine scheduler interface","Helper functions for section addresses","Blocking time","Trap handling","","","","?","","XenBus","XenStore interface","Xen console writer","","","Yield until all data has been written","Returns the argument unchanged.","Initialize the global Xen console writer","Calls <code>U::from(self)</code>.","","","","","Default event handler","Actions for each event channel","Action associated with event","Number of event channel ports","Bind an event handler to an event channel","Bind a handler to a VIRQ","","","Clear event channel port","","","Execute event on supplied channel port","Event channel operation hypercall","","Returns the argument unchanged.","Initialise events, set default handler and mask all event …","Calls <code>U::from(self)</code>.","Mask an event channel port","","","","","Unmask an event channel port","transfer page address too large","copy arguments cross page boundary","Inappropriate device address to unmap","Unrecognsed domain id","Unrecognised or inappropriate gntref","Unrecognised or inappropriate handle","Specified page was invalid for op","Inappropriate virtual address to map","Operation not done; try again","Grant table error","General undefined error","Errors returned in the status field of grant table …","Error from the hypercall in a grant table operation","Out of space in I/O MMU","Out of space","Error returned in status field of operation argument","Not enough privilege for operation","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Grants <code>domain</code> access to the supplied frame","Ends access to the supplied grant reference","Transfers the supplied frame to <code>domain</code>","Initializes grant table","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Safe grant table operation wrappers","","","","","","","","","","","Handle to track a mapping created via a grant reference","","","Performs hypervisor copy operation for either MFNs or …","Dumps contents of grant table to console","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Maps a new grant entry","Queries the current and maximum sizes of the shared grant …","Sets up grant table","Transfers grant entry to foreign domain","","","","Unmaps the mapped grant reference","Destroys one or more grant reference mappings then replace …","Permission denied","Address already in use","Cannot assign requested address","Bad file number","Not a data message","Device or resource busy","No child processes","Connection refused","Resource deadlock would occur","Math argument out of domain of func","File exists","Hypercall Error","Bad address","Illegal byte sequence","Interrupted system call. Internal only, should never be …","Invalid argument","I/O error","Transport endpoint is already connected","Is a directory","Too many open files","Too many links","Message too large.","File name too long","File table overflow","No buffer space available","No data available","No such device","No such file or directory","Exec format error","No record locks available","Out of memory","No space left on device","Function not implemented","Transport endpoint is not connected","Not a directory","Directory not empty","Socket operation on non-socket","No such device or address","Operation not supported on transport endpoint","Value too large for defined data type","Operation not permitted","Math result not representable","Interrupted system call should be restarted. Internal …","Read-only file system","No such process","Timer expired","Connection timed out","Arg list too long","Unknown error","Operation would block","Cross-device link","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Flush all TLBs.","Flush entire TLB(s).","Flush only one entry.","Flush local TLB.","Flush subset of TLBs.","Machine address","Number of a page in the machine’s address space","No flushing at all.","Page Entry","Number for page frame","Pseudo-Physical address","Flags for <code>update_va_mapping</code>","Virtual address","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Gets the current number of reserved pages for the current …","Gets the maximum machine frame number of mapped RAM in …","Gets the maximum number of reserved pages for the current …","","Updates an entry in a page table","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Given a virtual address get an entry offset into an L1 …","Given a virtual address get an entry offset into an L2 …","Given a virtual address get an entry offset into an L3 …","Given a virtual address get an entry offset into an L4 …","","","","","","","","Returns the complement of this set of flags.","Xen Paravirtualized Page Table Interface","","","","","","","","Gives a page frame number after rounding the given address …","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Update virtual address mapping","Builds the page table","Map a new page table frame","x86_64 constants","x86_64 Grant Table","x86_64 hypercall functions","x86_64 Xen Time","Utility functions","Number of demand map pages","L1 Mask","Number of L1 pagetable entries","L1 page shift","L1 page flags","L1 page flags read-only","Number of L2 pagetable entries","L2 page shift","L2 page flags","Number of L3 pagetable entries","L3 page shift","L3 page flags","Number of L4 pagetable entries","L4 page shift","L4 page flags","Maximum amount of memory available on x86_64","Width of physical address in bits","Physical address mask","Number of pagetable levels","","","","Page mask","","","","","","","Page shift","Size of a page in bytes","","Make pt_pfn a new ‘level’ page table frame and hook it …","Width of virtual address in bits","Virtual address mask","Address of virtual demand mapped area","Initialize grant table","Makes hypercall with 0 arguments","Makes hypercall with 1 argument","Makes hypercall with 2 arguments","Makes hypercall with 3 arguments","Makes hypercall with 4 arguments","Makes hypercall with 5 arguments","Gets the current system time represented as the number of …","Initialise events","Synchronised bit clear","Synchronised bit set","Deschedule domain until event is received","Scheduling command","“Tell controller we’ve crashed.”","“Override the current vcpu affinity by pinning it to one …","“Poll a set of event-channel ports. Return when one or …","“Domain exited normally. Clean up and kill.”","“Clean up, kill, and then restart.”","“Declare a shutdown for another domain. The main use of …","“Halt execution of this domain (all VCPUs) and notify …","“Latch a shutdown code, so that when the domain later …","Reasons for <code>Command::Shutdown</code>","“Clean up, save suspend info, kill.”","“Setup, poke and destroy a domain watchdog timer. @arg …","“Restart because watchdog time expired.”","Yield remaining of domain’s quantum","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Remote domain ID","ID of watchdog timer","Physical CPU ID to pin to","Event-channel ports","Reason for shutdown","Nanoseconds since UNIX epoch that if reached while blocked …","Timeout","Returns the address of the start of the <code>.edata</code> section","Returns the address of the start of the <code>.end</code> section","Returns the address of the start of the <code>.edata</code> section","Returns the address of the start of the <code>.etext</code> section","Returns the address of the start of the <code>.text</code> section","Block for the supplied number of nanoseconds","Gets the current system time represented as the number of …","Initialise time","Information for trap handler","Handler function pointer","","","Code selector","0-3 privilege level, 4 clear event enable","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Registers a trap handler table","","","","Exception vector","Both halves of driver have disconnected","Device has become unavailable, backend is no longer doing …","Normal state of the bus","","","","","","","","Entered by the back end while it is waiting for …","Backend is now ready for connection","Backend is in process of initializing itself","","Guaranteed to remain an invalid type","","","XenBus message header","XenBus message type","","Device reconfiguring has finished","Device is being reconfigured","","","","","","","State of XenBus connection","","","Number of valid types","Initial state of the device on the bus, before either end …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Initialize XenStore","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Message type","Associates a value with a path","Request ID","Transaction ID","","","","","","","","","","Read the current domain’s ID","Initialize XenStore","List contents of directory","Read a key’s value from the XenStore","Write a key-value pair to the XenStore"],"i":[0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,3,3,0,3,3,0,0,3,3,0,3,0,3,3,3,3,0,4,4,4,4,4,4,4,4,4,0,4,0,5,4,4,5,4,5,4,5,4,5,5,4,4,5,5,5,4,4,0,0,0,0,5,4,0,5,4,5,4,5,4,5,4,6,7,0,8,8,0,0,8,8,8,0,0,0,8,8,8,8,0,9,9,9,9,9,9,9,9,9,9,9,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,11,12,13,14,15,16,17,17,17,17,17,0,0,17,0,0,0,0,0,17,17,17,17,17,17,17,17,11,12,13,14,15,16,17,11,12,13,14,15,16,17,11,12,13,14,15,16,17,11,12,13,14,15,16,17,11,12,13,14,15,16,17,17,17,17,17,11,12,13,14,15,16,17,17,11,12,13,14,15,16,17,17,17,17,17,11,12,12,12,13,13,13,13,14,14,14,14,14,14,15,15,15,16,16,16,17,17,17,17,17,0,0,0,17,0,17,17,17,11,12,13,14,15,16,17,17,17,14,14,14,14,11,12,13,14,15,16,17,17,0,11,12,13,14,15,16,17,0,17,17,17,17,17,11,12,13,14,15,16,17,17,11,12,13,14,15,16,17,11,12,13,14,15,16,17,11,12,13,14,15,16,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,19,18,18,19,19,18,18,18,0,19,18,19,18,18,19,18,19,18,19,18,19,0,18,19,18,19,18,19,20,21,22,23,24,25,22,25,23,0,0,0,0,0,0,0,0,0,26,26,26,26,26,26,26,0,26,26,26,26,27,27,27,28,28,28,28,28,28,28,27,27,27,28,28,28,28,0,0,28,27,27,28,28,28,28,28,28,0,28,28,28,27,28,28,28,28,27,28,29,27,28,29,27,28,29,27,27,28,28,29,29,0,27,28,29,29,0,29,29,27,28,29,27,28,29,27,28,29,0,0,0,0,0],"f":[null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,[[]],null,null,null,[[]],[[]],[[]],null,[[["duration",3]]],null,[[["pin",3],["context",3]],["poll",4]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[["start_info_t",6]]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0],["str",0]],["result",6]],null,null,null,null,[[["evtchn_port_t",6],["usize",0]]],[[["u32",0],["usize",0]],["evtchn_port_t",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["evtchn_port_t",6]]],[[["",0]],["eventaction",3]],[[["",0],["",0]]],[[["evtchn_port_t",6]]],[[["u32",0],["u64",0]]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["evtchn_port_t",6]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["evtchn_port_t",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[["error",4]]],[[["grantstatuserror",4]]],[[]],[[["i16",0]]],[[["domid_t",6],["machineframenumber",3],["bool",0]],["grant_ref_t",6]],[[["grant_ref_t",6]]],[[["domid_t",6],["machineframenumber",3]],["grant_ref_t",6]],[[]],[[]],[[]],null,[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[],["result",4,[["error",4]]]],[[]],[[]],[[["u32",0],["domid_t",6],["bool",0]],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[["domid_t",6]],["result",4,[["error",4]]]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["result",4,[["error",4]]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["i64",0]]],[[]],[[]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["",0]]],[[["tlbflushflags",3]]],[[["",0]]],[[["",0]],["u64",0]],[[]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["pageentry",3]],[[["",0]],["pageframenumber",3]],[[["",0]],["machineframenumber",3]],[[["",0]],["virtualaddress",3]],[[["",0]],["physicaladdress",3]],[[["",0]],["machineaddress",3]],[[["",0]],["tlbflushflags",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["pageentry",3]],["ordering",4]],[[["",0],["pageframenumber",3]],["ordering",4]],[[["",0],["machineframenumber",3]],["ordering",4]],[[["",0],["virtualaddress",3]],["ordering",4]],[[["",0],["physicaladdress",3]],["ordering",4]],[[["",0],["machineaddress",3]],["ordering",4]],[[["",0],["tlbflushflags",3]],["ordering",4]],[[]],[[["",0]],["bool",0]],[[]],[[]],[[["",0],["pageentry",3]],["bool",0]],[[["",0],["pageframenumber",3]],["bool",0]],[[["",0],["machineframenumber",3]],["bool",0]],[[["",0],["virtualaddress",3]],["bool",0]],[[["",0],["physicaladdress",3]],["bool",0]],[[["",0],["machineaddress",3]],["bool",0]],[[["",0],["tlbflushflags",3]],["bool",0]],[[["",0],["intoiterator",8]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[["machineframenumber",3]]],[[]],[[["virtualaddress",3]]],[[]],[[["pageframenumber",3]]],[[["pageentry",3]]],[[["virtualaddress",3]]],[[["pageentry",3]]],[[["pageframenumber",3]]],[[["machineframenumber",3]]],[[["machineaddress",3]]],[[["physicaladdress",3]]],[[]],[[["virtualaddress",3]]],[[["machineaddress",3]]],[[]],[[["virtualaddress",3]]],[[["physicaladdress",3]]],[[]],[[]],[[["u64",0]],["option",4]],[[["u64",0]]],[[["u64",0]]],[[["intoiterator",8]]],[[],["result",4,[["usize",0],["error",4]]]],[[],["machineframenumber",3]],[[],["result",4,[["usize",0],["error",4]]]],[[["",0],["",0]]],[[],["result",4,[["error",4]]]],[[["",0]]],[[]],[[["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["isize",0]],[[["",0]],["isize",0]],[[["",0]],["isize",0]],[[["",0]],["isize",0]],[[["",0],["pageentry",3]],["bool",0]],[[["",0],["pageframenumber",3]],["bool",0]],[[["",0],["machineframenumber",3]],["bool",0]],[[["",0],["virtualaddress",3]],["bool",0]],[[["",0],["physicaladdress",3]],["bool",0]],[[["",0],["machineaddress",3]],["bool",0]],[[["",0],["tlbflushflags",3]],["bool",0]],[[]],null,[[["",0],["pageentry",3]],["option",4,[["ordering",4]]]],[[["",0],["pageframenumber",3]],["option",4,[["ordering",4]]]],[[["",0],["machineframenumber",3]],["option",4,[["ordering",4]]]],[[["",0],["virtualaddress",3]],["option",4,[["ordering",4]]]],[[["",0],["physicaladdress",3]],["option",4,[["ordering",4]]]],[[["",0],["machineaddress",3]],["option",4,[["ordering",4]]]],[[["",0],["tlbflushflags",3]],["option",4,[["ordering",4]]]],[[["physicaladdress",3]],["pageframenumber",3]],[[["",0]]],[[["",0],["bool",0]]],[[]],[[["",0]]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[["virtualaddress",3],["pageentry",3],["tlbflushflags",3]],["result",4,[["error",4]]]],[[["pageframenumber",3],["pageframenumber",3]]],[[["pageframenumber",3],["machineframenumber",3],["isize",0],["usize",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["error",4]]]],[[["u32",0]],["result",4,[["u64",0],["error",4]]]],[[["u32",0],["u64",0]],["result",4,[["u64",0],["error",4]]]],[[["u32",0],["u64",0],["u64",0]],["result",4,[["u64",0],["error",4]]]],[[["u32",0],["u64",0],["u64",0],["u64",0]],["result",4,[["u64",0],["error",4]]]],[[["u32",0],["u64",0],["u64",0],["u64",0],["u64",0]],["result",4,[["u64",0],["error",4]]]],[[["u32",0],["u64",0],["u64",0],["u64",0],["u64",0],["u64",0]],["result",4,[["u64",0],["error",4]]]],[[],["u64",0]],[[]],[[["u64",0]]],[[["u64",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[["command",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[["u64",0]]],[[],["u64",0]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["xenbusstate",6]]],[[]],[[["u32",0]]],[[]],[[["xsd_sockmsg",3]]],[[]],[[]],[[]],[[]],[[]],null,[[["messagekind",4],["u32",0]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["u32",0]],[[]],[[["asref",8,[["str",0]]]],["vec",3,[["string",3]]]],[[["asref",8,[["str",0]]]],["string",3]],[[["asref",8,[["str",0]]],["asref",8,[["str",0]]]]]],"p":[[3,"Delay"],[3,"Writer"],[3,"EventAction"],[4,"GrantStatusError"],[4,"Error"],[13,"Hypercall"],[13,"Operation"],[3,"GrantHandle"],[4,"Error"],[13,"Unknown"],[3,"PageEntry"],[3,"PageFrameNumber"],[3,"MachineFrameNumber"],[3,"VirtualAddress"],[3,"PhysicalAddress"],[3,"MachineAddress"],[3,"TLBFlushFlags"],[4,"Command"],[4,"ShutdownReason"],[13,"Shutdown"],[13,"ShutdownCode"],[13,"RemoteShutdown"],[13,"Watchdog"],[13,"PinOverride"],[13,"Poll"],[3,"TrapInfo"],[4,"State"],[4,"MessageKind"],[3,"MessageHeader"]]},\
"xen_sys":{"doc":"","tn":["BIND_PIRQ__WILL_SHARE","CONSOLEIO_read","CONSOLEIO_write","EVTCHNOP_alloc_unbound","EVTCHNOP_bind_interdomain","EVTCHNOP_bind_ipi","EVTCHNOP_bind_pirq","EVTCHNOP_bind_vcpu","EVTCHNOP_bind_virq","EVTCHNOP_close","EVTCHNOP_expand_array","EVTCHNOP_init_control","EVTCHNOP_reset","EVTCHNOP_send","EVTCHNOP_set_priority","EVTCHNOP_status","EVTCHNOP_unmask","EVTCHNSTAT_closed","EVTCHNSTAT_interdomain","EVTCHNSTAT_ipi","EVTCHNSTAT_pirq","EVTCHNSTAT_unbound","EVTCHNSTAT_virq","EVTCHN_FIFO_BUSY","EVTCHN_FIFO_LINKED","EVTCHN_FIFO_LINK_BITS","EVTCHN_FIFO_LINK_MASK","EVTCHN_FIFO_MASKED","EVTCHN_FIFO_MAX_QUEUES","EVTCHN_FIFO_NR_CHANNELS","EVTCHN_FIFO_PENDING","EVTCHN_FIFO_PRIORITY_DEFAULT","EVTCHN_FIFO_PRIORITY_MAX","EVTCHN_FIFO_PRIORITY_MIN","FIRST_RESERVED_GDT_BYTE","FIRST_RESERVED_GDT_ENTRY","FIRST_RESERVED_GDT_PAGE","FLAT_KERNEL_CS","FLAT_KERNEL_CS32","FLAT_KERNEL_CS64","FLAT_KERNEL_DS","FLAT_KERNEL_DS32","FLAT_KERNEL_DS64","FLAT_KERNEL_SS","FLAT_KERNEL_SS32","FLAT_KERNEL_SS64","FLAT_RING3_CS32","FLAT_RING3_CS64","FLAT_RING3_DS32","FLAT_RING3_DS64","FLAT_RING3_SS32","FLAT_RING3_SS64","FLAT_USER_CS","FLAT_USER_CS32","FLAT_USER_CS64","FLAT_USER_DS","FLAT_USER_DS32","FLAT_USER_DS64","FLAT_USER_SS","FLAT_USER_SS32","FLAT_USER_SS64","GNTCOPY_dest_gref","GNTCOPY_source_gref","GNTMAP_application_map","GNTMAP_can_fail","GNTMAP_contains_pte","GNTMAP_device_map","GNTMAP_host_map","GNTMAP_readonly","GNTST_address_too_big","GNTST_bad_copy_arg","GNTST_bad_dev_addr","GNTST_bad_domain","GNTST_bad_gntref","GNTST_bad_handle","GNTST_bad_page","GNTST_bad_virt_addr","GNTST_eagain","GNTST_general_error","GNTST_no_device_space","GNTST_okay","GNTST_permission_denied","GNTTABOP_copy","GNTTABOP_dump_table","GNTTABOP_map_grant_ref","GNTTABOP_query_size","GNTTABOP_setup_table","GNTTABOP_transfer","GNTTABOP_unmap_and_replace","GNTTABOP_unmap_grant_ref","GNTTAB_NR_RESERVED_ENTRIES","GNTTAB_RESERVED_CONSOLE","GNTTAB_RESERVED_XENSTORE","GTF_PAT","GTF_PCD","GTF_PWT","GTF_accept_transfer","GTF_invalid","GTF_permit_access","GTF_reading","GTF_readonly","GTF_sub_page","GTF_transfer_committed","GTF_transfer_completed","GTF_transitive","GTF_type_mask","GTF_writing","INT16_MAX","INT16_MIN","INT32_MAX","INT32_MIN","INT8_MAX","INT8_MIN","INTPTR_MAX","INTPTR_MIN","INT_FAST16_MAX","INT_FAST16_MIN","INT_FAST32_MAX","INT_FAST32_MIN","INT_FAST8_MAX","INT_FAST8_MIN","INT_LEAST16_MAX","INT_LEAST16_MIN","INT_LEAST32_MAX","INT_LEAST32_MIN","INT_LEAST8_MAX","INT_LEAST8_MIN","MAX_GUEST_CMDLINE","MAX_VMASST_TYPE","MMUEXT_CLEAR_PAGE","MMUEXT_COPY_PAGE","MMUEXT_FLUSH_CACHE","MMUEXT_FLUSH_CACHE_GLOBAL","MMUEXT_INVLPG_ALL","MMUEXT_INVLPG_LOCAL","MMUEXT_INVLPG_MULTI","MMUEXT_MARK_SUPER","MMUEXT_NEW_BASEPTR","MMUEXT_NEW_USER_BASEPTR","MMUEXT_PIN_L1_TABLE","MMUEXT_PIN_L2_TABLE","MMUEXT_PIN_L3_TABLE","MMUEXT_PIN_L4_TABLE","MMUEXT_SET_LDT","MMUEXT_TLB_FLUSH_ALL","MMUEXT_TLB_FLUSH_LOCAL","MMUEXT_TLB_FLUSH_MULTI","MMUEXT_UNMARK_SUPER","MMUEXT_UNPIN_TABLE","MMU_MACHPHYS_UPDATE","MMU_NORMAL_PT_UPDATE","MMU_PT_UPDATE_NO_TRANSLATE","MMU_PT_UPDATE_PRESERVE_AD","NETIF_RSP_DROPPED","NETIF_RSP_ERROR","NETIF_RSP_NULL","NETIF_RSP_OKAY","NETRXF_csum_blank","NETRXF_data_validated","NETRXF_extra_info","NETRXF_gso_prefix","NETRXF_more_data","NETTXF_csum_blank","NETTXF_data_validated","NETTXF_extra_info","NETTXF_more_data","NR_VIRQS","PRI_xen_pfn","PRI_xen_ulong","PRIu_xen_pfn","PTRDIFF_MAX","PTRDIFF_MIN","RING_IDX","SCHEDOP_block","SCHEDOP_pin_override","SCHEDOP_poll","SCHEDOP_remote_shutdown","SCHEDOP_shutdown","SCHEDOP_shutdown_code","SCHEDOP_watchdog","SCHEDOP_yield","SEGBASE_FS","SEGBASE_GS_KERNEL","SEGBASE_GS_USER","SEGBASE_GS_USER_SEL","SHUTDOWN_MAX","SHUTDOWN_crash","SHUTDOWN_poweroff","SHUTDOWN_reboot","SHUTDOWN_soft_reset","SHUTDOWN_suspend","SHUTDOWN_watchdog","SIF_INITDOMAIN","SIF_MOD_START_PFN","SIF_MULTIBOOT_MOD","SIF_PM_MASK","SIF_PRIVILEGED","SIF_VIRT_P2M_4TOOLS","SIG_ATOMIC_MAX","SIG_ATOMIC_MIN","SIZE_MAX","UINT16_MAX","UINT32_MAX","UINT8_MAX","UINTPTR_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST8_MAX","UINT_LEAST16_MAX","UINT_LEAST32_MAX","UINT_LEAST8_MAX","VGCF_I387_VALID","VGCF_IN_KERNEL","VGCF_IN_SYSCALL","VGCF_failsafe_disables_events","VGCF_i387_valid","VGCF_in_kernel","VGCF_in_syscall","VGCF_online","VGCF_syscall_disables_events","VIRQ_ARCH_0","VIRQ_ARCH_1","VIRQ_ARCH_2","VIRQ_ARCH_3","VIRQ_ARCH_4","VIRQ_ARCH_5","VIRQ_ARCH_6","VIRQ_ARCH_7","VIRQ_CONSOLE","VIRQ_CON_RING","VIRQ_DEBUG","VIRQ_DEBUGGER","VIRQ_DOM_EXC","VIRQ_ENOMEM","VIRQ_MEM_EVENT","VIRQ_PCPU_STATE","VIRQ_TBUF","VIRQ_TIMER","VIRQ_XC_RESERVED","VIRQ_XENOPROF","VIRQ_XENPMU","VMASST_CMD_disable","VMASST_CMD_enable","VMASST_TYPE_4gb_segments","VMASST_TYPE_4gb_segments_notify","VMASST_TYPE_architectural_iopl","VMASST_TYPE_m2p_strict","VMASST_TYPE_pae_extended_cr3","VMASST_TYPE_runstate_update_flag","VMASST_TYPE_writable_pagetables","WINT_MAX","WINT_MIN","XENCONS_RING_IDX","XENFEAT_ARM_SMCCC_supported","XENFEAT_NR_SUBMAPS","XENFEAT_auto_translated_physmap","XENFEAT_dom0","XENFEAT_gnttab_map_avail_bits","XENFEAT_highmem_assist","XENFEAT_hvm_callback_vector","XENFEAT_hvm_pirqs","XENFEAT_hvm_safe_pvclock","XENFEAT_linux_rsdp_unrestricted","XENFEAT_memory_op_vnode_supported","XENFEAT_mmu_pt_update_preserve_ad","XENFEAT_pae_pgdir_above_4gb","XENFEAT_supervisor_mode_kernel","XENFEAT_writable_descriptor_tables","XENFEAT_writable_page_tables","XENSTORE_ABS_PATH_MAX","XENSTORE_CONNECTED","XENSTORE_PAYLOAD_MAX","XENSTORE_RECONNECT","XENSTORE_REL_PATH_MAX","XENSTORE_RING_IDX","XENSTORE_RING_SIZE","XENSTORE_SERVER_FEATURE_RECONNECTION","XEN_CPUID","XEN_EMULATE_PREFIX","XEN_HAVE_PV_GUEST_ENTRY","XEN_HAVE_PV_UPCALL_MASK","XEN_LEGACY_MAX_VCPUS","XEN_NETIF_CTRLF_GREF_readonly","XEN_NETIF_CTRL_HASH_ALGORITHM_NONE","XEN_NETIF_CTRL_HASH_ALGORITHM_TOEPLITZ","XEN_NETIF_CTRL_HASH_TYPE_IPV4","XEN_NETIF_CTRL_HASH_TYPE_IPV4_TCP","XEN_NETIF_CTRL_HASH_TYPE_IPV6","XEN_NETIF_CTRL_HASH_TYPE_IPV6_TCP","XEN_NETIF_CTRL_STATUS_BUFFER_OVERFLOW","XEN_NETIF_CTRL_STATUS_INVALID_PARAMETER","XEN_NETIF_CTRL_STATUS_NOT_SUPPORTED","XEN_NETIF_CTRL_STATUS_SUCCESS","XEN_NETIF_CTRL_TYPE_ADD_GREF_MAPPING","XEN_NETIF_CTRL_TYPE_DEL_GREF_MAPPING","XEN_NETIF_CTRL_TYPE_GET_GREF_MAPPING_SIZE","XEN_NETIF_CTRL_TYPE_GET_HASH_FLAGS","XEN_NETIF_CTRL_TYPE_GET_HASH_MAPPING_SIZE","XEN_NETIF_CTRL_TYPE_INVALID","XEN_NETIF_CTRL_TYPE_SET_HASH_ALGORITHM","XEN_NETIF_CTRL_TYPE_SET_HASH_FLAGS","XEN_NETIF_CTRL_TYPE_SET_HASH_KEY","XEN_NETIF_CTRL_TYPE_SET_HASH_MAPPING","XEN_NETIF_CTRL_TYPE_SET_HASH_MAPPING_SIZE","XEN_NETIF_EXTRA_FLAG_MORE","XEN_NETIF_EXTRA_TYPE_GSO","XEN_NETIF_EXTRA_TYPE_HASH","XEN_NETIF_EXTRA_TYPE_MAX","XEN_NETIF_EXTRA_TYPE_MCAST_ADD","XEN_NETIF_EXTRA_TYPE_MCAST_DEL","XEN_NETIF_EXTRA_TYPE_NONE","XEN_NETIF_GSO_TYPE_NONE","XEN_NETIF_GSO_TYPE_TCPV4","XEN_NETIF_GSO_TYPE_TCPV6","XEN_NETIF_MAX_TX_SIZE","XEN_NETIF_NR_SLOTS_MIN","XEN_PAGE_SHIFT","XEN_PVCLOCK_GUEST_STOPPED","XEN_PVCLOCK_TSC_STABLE_BIT","XEN_VGATYPE_EFI_LFB","XEN_VGATYPE_TEXT_MODE_3","XEN_VGATYPE_VESA_LFB","XS_WRITE_CREATE","XS_WRITE_CREATE_EXCL","XS_WRITE_NONE","XenbusState","_ATFILE_SOURCE","_BITS_STDINT_INTN_H","_BITS_STDINT_UINTN_H","_BITS_TIME64_H","_BITS_TYPESIZES_H","_BITS_TYPES_H","_BITS_WCHAR_H","_DEFAULT_SOURCE","_FEATURES_H","_GNTCOPY_dest_gref","_GNTCOPY_source_gref","_GNTMAP_application_map","_GNTMAP_can_fail","_GNTMAP_contains_pte","_GNTMAP_device_map","_GNTMAP_guest_avail0","_GNTMAP_host_map","_GNTMAP_readonly","_GTF_PAT","_GTF_PCD","_GTF_PWT","_GTF_reading","_GTF_readonly","_GTF_sub_page","_GTF_transfer_committed","_GTF_transfer_completed","_GTF_writing","_NETRXF_csum_blank","_NETRXF_data_validated","_NETRXF_extra_info","_NETRXF_gso_prefix","_NETRXF_more_data","_NETTXF_csum_blank","_NETTXF_data_validated","_NETTXF_extra_info","_NETTXF_more_data","_POSIX_C_SOURCE","_POSIX_SOURCE","_STDC_PREDEF_H","_STDINT_H","_SYS_CDEFS_H","_VGCF_failsafe_disables_events","_VGCF_i387_valid","_VGCF_in_kernel","_VGCF_in_syscall","_VGCF_online","_VGCF_syscall_disables_events","_XEN_NETIF_CTRLF_GREF_readonly","_XEN_NETIF_CTRL_HASH_TYPE_IPV4","_XEN_NETIF_CTRL_HASH_TYPE_IPV4_TCP","_XEN_NETIF_CTRL_HASH_TYPE_IPV6","_XEN_NETIF_CTRL_HASH_TYPE_IPV6_TCP","_XEN_NETIF_EXTRA_FLAG_MORE","__FD_SETSIZE","__GLIBC_MINOR__","__GLIBC_USE_DEPRECATED_GETS","__GLIBC_USE_DEPRECATED_SCANF","__GLIBC_USE_IEC_60559_BFP_EXT","__GLIBC_USE_IEC_60559_BFP_EXT_C2X","__GLIBC_USE_IEC_60559_FUNCS_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X","__GLIBC_USE_IEC_60559_TYPES_EXT","__GLIBC_USE_ISOC2X","__GLIBC_USE_LIB_EXT2","__GLIBC__","__GNU_LIBRARY__","__HAVE_GENERIC_SELECTION","__HYPERVISOR_VIRT_END","__HYPERVISOR_VIRT_START","__HYPERVISOR_arch_0","__HYPERVISOR_arch_1","__HYPERVISOR_arch_2","__HYPERVISOR_arch_3","__HYPERVISOR_arch_4","__HYPERVISOR_arch_5","__HYPERVISOR_arch_6","__HYPERVISOR_arch_7","__HYPERVISOR_callback_op","__HYPERVISOR_console_io","__HYPERVISOR_dm_op","__HYPERVISOR_dom0_op","__HYPERVISOR_domctl","__HYPERVISOR_event_channel_op","__HYPERVISOR_event_channel_op_compat","__HYPERVISOR_fpu_taskswitch","__HYPERVISOR_get_debugreg","__HYPERVISOR_grant_table_op","__HYPERVISOR_hvm_op","__HYPERVISOR_iret","__HYPERVISOR_kexec_op","__HYPERVISOR_memory_op","__HYPERVISOR_mmu_update","__HYPERVISOR_mmuext_op","__HYPERVISOR_multicall","__HYPERVISOR_nmi_op","__HYPERVISOR_physdev_op","__HYPERVISOR_physdev_op_compat","__HYPERVISOR_platform_op","__HYPERVISOR_sched_op","__HYPERVISOR_sched_op_compat","__HYPERVISOR_set_callbacks","__HYPERVISOR_set_debugreg","__HYPERVISOR_set_gdt","__HYPERVISOR_set_segment_base","__HYPERVISOR_set_timer_op","__HYPERVISOR_set_trap_table","__HYPERVISOR_stack_switch","__HYPERVISOR_sysctl","__HYPERVISOR_tmem_op","__HYPERVISOR_update_descriptor","__HYPERVISOR_update_va_mapping","__HYPERVISOR_update_va_mapping_otherdomain","__HYPERVISOR_vcpu_op","__HYPERVISOR_vm_assist","__HYPERVISOR_xc_reserved_op","__HYPERVISOR_xen_version","__HYPERVISOR_xenoprof_op","__HYPERVISOR_xenpmu_op","__HYPERVISOR_xsm_op","__INO_T_MATCHES_INO64_T","__LONG_DOUBLE_USES_FLOAT128","__MACH2PHYS_VIRT_END","__MACH2PHYS_VIRT_START","__OFF_T_MATCHES_OFF64_T","__RLIM_T_MATCHES_RLIM64_T","__STATFS_MATCHES_STATFS64","__STDC_IEC_559_COMPLEX__","__STDC_IEC_559__","__STDC_ISO_10646__","__SYSCALL_WORDSIZE","__TIMESIZE","__USE_ATFILE","__USE_FORTIFY_LEVEL","__USE_ISOC11","__USE_ISOC95","__USE_ISOC99","__USE_MISC","__USE_POSIX","__USE_POSIX199309","__USE_POSIX199506","__USE_POSIX2","__USE_POSIX_IMPLICITLY","__USE_XOPEN2K","__USE_XOPEN2K8","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","__XEN_INTERFACE_VERSION__","__XEN_LATEST_INTERFACE_VERSION__","__bindgen_anon_1","__bindgen_anon_10","__bindgen_anon_2","__bindgen_anon_3","__bindgen_anon_4","__bindgen_anon_5","__bindgen_anon_6","__bindgen_anon_7","__bindgen_anon_8","__bindgen_anon_9","__blkcnt64_t","__blkcnt_t","__blksize_t","__caddr_t","__clock_t","__clockid_t","__daddr_t","__dev_t","__fsblkcnt64_t","__fsblkcnt_t","__fsfilcnt64_t","__fsfilcnt_t","__fsid_t","__fsword_t","__gid_t","__glibc_c99_flexarr_available","__guest_handle_char","__guest_handle_const_char","__guest_handle_const_cpu_user_regs_t","__guest_handle_const_evtchn_op_t","__guest_handle_const_evtchn_port_t","__guest_handle_const_gnttab_copy_t","__guest_handle_const_gnttab_dump_table_t","__guest_handle_const_gnttab_map_grant_ref_t","__guest_handle_const_gnttab_query_size_t","__guest_handle_const_gnttab_setup_table_t","__guest_handle_const_gnttab_transfer_t","__guest_handle_const_gnttab_unmap_and_replace_t","__guest_handle_const_gnttab_unmap_grant_ref_t","__guest_handle_const_int","__guest_handle_const_long","__guest_handle_const_mmu_update_t","__guest_handle_const_mmuext_op_t","__guest_handle_const_multicall_entry_t","__guest_handle_const_sched_pin_override_t","__guest_handle_const_sched_poll_t","__guest_handle_const_sched_remote_shutdown_t","__guest_handle_const_sched_shutdown_t","__guest_handle_const_sched_watchdog_t","__guest_handle_const_trap_info_t","__guest_handle_const_uchar","__guest_handle_const_uint","__guest_handle_const_uint16","__guest_handle_const_uint32","__guest_handle_const_uint64","__guest_handle_const_uint64_t","__guest_handle_const_uint8","__guest_handle_const_ulong","__guest_handle_const_vcpu_guest_context_t","__guest_handle_const_void","__guest_handle_const_xen_pfn_t","__guest_handle_const_xen_ulong_t","__guest_handle_cpu_user_regs_t","__guest_handle_evtchn_op_t","__guest_handle_evtchn_port_t","__guest_handle_gnttab_copy_t","__guest_handle_gnttab_dump_table_t","__guest_handle_gnttab_map_grant_ref_t","__guest_handle_gnttab_query_size_t","__guest_handle_gnttab_setup_table_t","__guest_handle_gnttab_transfer_t","__guest_handle_gnttab_unmap_and_replace_t","__guest_handle_gnttab_unmap_grant_ref_t","__guest_handle_int","__guest_handle_long","__guest_handle_mmu_update_t","__guest_handle_mmuext_op_t","__guest_handle_multicall_entry_t","__guest_handle_sched_pin_override_t","__guest_handle_sched_poll_t","__guest_handle_sched_remote_shutdown_t","__guest_handle_sched_shutdown_t","__guest_handle_sched_watchdog_t","__guest_handle_trap_info_t","__guest_handle_uchar","__guest_handle_uint","__guest_handle_uint16","__guest_handle_uint32","__guest_handle_uint64","__guest_handle_uint64_t","__guest_handle_uint8","__guest_handle_ulong","__guest_handle_vcpu_guest_context_t","__guest_handle_void","__guest_handle_xen_pfn_t","__guest_handle_xen_ulong_t","__id_t","__ino64_t","__ino_t","__int16_t","__int32_t","__int64_t","__int8_t","__int_least16_t","__int_least32_t","__int_least64_t","__int_least8_t","__intmax_t","__intptr_t","__key_t","__loff_t","__mode_t","__nlink_t","__off64_t","__off_t","__pad","__pad","__pad","__pid_t","__quad_t","__rlim64_t","__rlim_t","__sig_atomic_t","__socklen_t","__ssize_t","__suseconds_t","__syscall_slong_t","__syscall_ulong_t","__time_t","__timer_t","__u_char","__u_int","__u_long","__u_quad_t","__u_short","__uid_t","__uint16_t","__uint32_t","__uint64_t","__uint8_t","__uint_least16_t","__uint_least32_t","__uint_least64_t","__uint_least8_t","__uintmax_t","__useconds_t","__val","_eax","_ebp","_ebx","_ecx","_edi","_edx","_eflags","_eip","_esi","_esp","_pad","_pad0","_pad1","_pad2","_pad3","_pad4","_pad5","_pad6","_rsvd","a","addr","address","algorithm","alloc_unbound","arch","arch","arch_shared_info","arch_shared_info_t","arch_vcpu_info","arch_vcpu_info_t","arg1","arg2","args","array_gfn","bind_interdomain","bind_ipi","bind_pirq","bind_vcpu","bind_virq","bits_per_pixel","blue_pos","blue_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_per_line","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","close","cmd","cmd","cmd_line","cmdline","columns","connection","console","control_gfn","cpu_user_regs","cpu_user_regs__bindgen_ty_1","cpu_user_regs__bindgen_ty_10","cpu_user_regs__bindgen_ty_2","cpu_user_regs__bindgen_ty_3","cpu_user_regs__bindgen_ty_4","cpu_user_regs__bindgen_ty_5","cpu_user_regs__bindgen_ty_6","cpu_user_regs__bindgen_ty_7","cpu_user_regs__bindgen_ty_8","cpu_user_regs__bindgen_ty_9","cpu_user_regs_t","cr2","cs","cs","cs","ctrlreg","cursor_x","cursor_y","data","data","debugreg","dest","dev_bus_addr","dev_bus_addr","dom","dom","dom","dom","dom","dom","dom","dom","dom","dom0","dom0_vga_console_info","dom0_vga_console_info__bindgen_ty_1","dom0_vga_console_info__bindgen_ty_1__bindgen_ty_1","dom0_vga_console_info__bindgen_ty_1__bindgen_ty_2","dom0_vga_console_info_t","domU","domain_id","domid","domid","domid","domid_t","ds","eax","ebp","ebx","ecx","edi","edx","eflags","eip","entry_vector","errnum","error_code","errstring","es","esi","esp","event_callback_eip","event_word_t","evtchn","evtchn_alloc_unbound","evtchn_alloc_unbound_t","evtchn_bind_interdomain","evtchn_bind_interdomain_t","evtchn_bind_ipi","evtchn_bind_ipi_t","evtchn_bind_pirq","evtchn_bind_pirq_t","evtchn_bind_vcpu","evtchn_bind_vcpu_t","evtchn_bind_virq","evtchn_bind_virq_t","evtchn_close","evtchn_close_t","evtchn_expand_array","evtchn_expand_array_t","evtchn_fifo_control_block","evtchn_fifo_control_block_t","evtchn_init_control","evtchn_init_control_t","evtchn_mask","evtchn_op","evtchn_op__bindgen_ty_1","evtchn_op_t","evtchn_pending","evtchn_pending_sel","evtchn_port_t","evtchn_reset","evtchn_reset_t","evtchn_send","evtchn_send_t","evtchn_set_priority","evtchn_set_priority_t","evtchn_status","evtchn_status__bindgen_ty_1","evtchn_status__bindgen_ty_1__bindgen_ty_1","evtchn_status__bindgen_ty_1__bindgen_ty_2","evtchn_status_t","evtchn_unmask","evtchn_unmask_t","evtchn_upcall_mask","evtchn_upcall_pending","failsafe_callback_eip","features","first_p2m_pfn","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font_height","fpu_ctxt","frame","frame_list","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fs","fs_base","gdt_ents","gdt_frames","gmfn","gnttab_copy","gnttab_copy_gnttab_copy_ptr","gnttab_copy_gnttab_copy_ptr__bindgen_ty_1","gnttab_copy_t","gnttab_dump_table","gnttab_dump_table_t","gnttab_map_grant_ref","gnttab_map_grant_ref_t","gnttab_query_size","gnttab_query_size_t","gnttab_setup_table","gnttab_setup_table_t","gnttab_transfer","gnttab_transfer_t","gnttab_unmap_and_replace","gnttab_unmap_and_replace_t","gnttab_unmap_grant_ref","gnttab_unmap_grant_ref_t","grant_entry","grant_entry_t","grant_handle_t","grant_ref_t","green_pos","green_size","gref","gref","gs","gs_base_kernel","gs_base_user","gso","handle","handle","handle","hash","head","height","host_addr","host_addr","host_addr","id","id","id","id","id","id","id","in_","in_cons","in_prod","info_off","info_size","int_fast16_t","int_fast32_t","int_fast64_t","int_fast8_t","int_least16_t","int_least32_t","int_least64_t","int_least8_t","interdomain","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","iret_context","kernel_sp","kernel_ss","ldt_base","ldt_ents","len","len","lfb_base","lfb_size","linear_addr","link_bits","local_port","magic","max_nr_frames","max_pfn","mcast","mfn","mfn","mfn","mfn_list","mmu_update","mmu_update_t","mmuext_op","mmuext_op__bindgen_ty_1","mmuext_op__bindgen_ty_2","mmuext_op_t","mod_end","mod_len","mod_start","mod_start","msg","msg","msg","multicall_entry","multicall_entry_t","netif","netif","netif","netif_extra_info","netif_extra_info__bindgen_ty_1","netif_extra_info__bindgen_ty_1__bindgen_ty_1","netif_extra_info__bindgen_ty_1__bindgen_ty_2","netif_extra_info__bindgen_ty_1__bindgen_ty_3","netif_extra_info_t","netif_rx_back_ring","netif_rx_back_ring_t","netif_rx_front_ring","netif_rx_front_ring_t","netif_rx_request","netif_rx_request_t","netif_rx_response","netif_rx_response_t","netif_rx_sring","netif_rx_sring__bindgen_ty_1","netif_rx_sring__bindgen_ty_1__bindgen_ty_1","netif_rx_sring__bindgen_ty_1__bindgen_ty_2","netif_rx_sring_entry","netif_rx_sring_t","netif_tx_back_ring","netif_tx_back_ring_t","netif_tx_front_ring","netif_tx_front_ring_t","netif_tx_request","netif_tx_request_t","netif_tx_response","netif_tx_response_t","netif_tx_sring","netif_tx_sring__bindgen_ty_1","netif_tx_sring__bindgen_ty_1__bindgen_ty_1","netif_tx_sring__bindgen_ty_1__bindgen_ty_2","netif_tx_sring_entry","netif_tx_sring_t","new_addr","nmi_reason","nr_ents","nr_ents","nr_ents","nr_ents","nr_ents","nr_ents","nr_ents","nr_frames","nr_frames","nr_p2m_frames","nr_pages","nr_ports","nr_pt_frames","offset","offset","offset","offset","op","out","out_cons","out_prod","p2m_cr3","p2m_generation","p2m_vaddr","pad","pad","pad","pad","pad","pad0","pad1","pcpu","pfn_to_mfn_frame_list_list","pirq","pirq","port","port","port","port","port","port","port","port","port","port","port","ports","priority","pt_base","ptr","pvt","pvt","pvt","pvt_pad","pvt_pad","pvt_pad","r10","r11","r11","r12","r13","r14","r15","r8","r9","rax","rax","rbp","rbx","rcx","rcx","rdi","rdx","ready","reason","reason","red_pos","red_size","ref_","ref_","ref_","ref_","remote_dom","remote_dom","remote_port","req","req","req","req","req_cons","req_cons","req_cons","req_cons","req_event","req_event","req_event","req_id","req_prod","req_prod","req_prod","req_prod","req_prod_pvt","req_prod_pvt","req_prod_pvt","result","rflags","rflags","ring","ring","ring","rip","rip","rows","rsi","rsp","rsp","rsp","rsp","rsp","rsp","rsp_cons","rsp_cons","rsp_cons","rsp_cons","rsp_event","rsp_event","rsp_event","rsp_prod","rsp_prod","rsp_prod","rsp_prod","rsp_prod_pvt","rsp_prod_pvt","rsp_prod_pvt","rsvd_pos","rsvd_size","saved_upcall_mask","sched_pin_override","sched_pin_override_t","sched_poll","sched_poll_t","sched_remote_shutdown","sched_remote_shutdown_t","sched_shutdown","sched_shutdown_t","sched_watchdog","sched_watchdog_t","send","server_features","shared_info","shared_info","shared_info_t","size","size","smartpoll_active","smartpoll_active","smartpoll_active","source","src_mfn","sring","sring","sring","sring","sring","sring","ss","ss","start_info","start_info__bindgen_ty_1","start_info__bindgen_ty_1__bindgen_ty_1","start_info__bindgen_ty_1__bindgen_ty_2","start_info_t","status","status","status","status","status","status","status","status","status","status","status","status","status","status","store_evtchn","store_mfn","syscall_callback_eip","system_time","tapif_user","tapif_user","tapif_user","text_mode_3","time","timeout","timeout","trap_ctxt","trap_info","trap_info_t","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_shift","tsc_timestamp","tsc_timestamp_t","tsc_to_system_mul","tx_id","type_","type_","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","u","u","u","u","uint_fast16_t","uint_fast32_t","uint_fast64_t","uint_fast8_t","uint_least16_t","uint_least32_t","uint_least64_t","uint_least8_t","uintmax_t","unbound","unmask","user_regs","val","value","vcpu","vcpu","vcpu","vcpu","vcpu","vcpu_guest_context","vcpu_guest_context__bindgen_ty_1","vcpu_guest_context_t","vcpu_info","vcpu_info","vcpu_info_t","vcpu_time_info","vcpu_time_info_t","vcpumask","vector","version","vesa_lfb","video_type","virq","virq","vm_assist","wc_nsec","wc_sec","wc_sec_hi","wc_version","width","x","xen_callback_t","xen_domain_handle_t","xen_multiboot_mod_list","xen_netif_ctrl_back_ring","xen_netif_ctrl_back_ring_t","xen_netif_ctrl_front_ring","xen_netif_ctrl_front_ring_t","xen_netif_ctrl_request","xen_netif_ctrl_response","xen_netif_ctrl_sring","xen_netif_ctrl_sring__bindgen_ty_1","xen_netif_ctrl_sring__bindgen_ty_1__bindgen_ty_1","xen_netif_ctrl_sring__bindgen_ty_1__bindgen_ty_2","xen_netif_ctrl_sring_entry","xen_netif_ctrl_sring_t","xen_netif_gref","xen_pfn_t","xen_ulong_t","xen_uuid_t","xenbus_state","xenbus_state_XenbusStateClosed","xenbus_state_XenbusStateClosing","xenbus_state_XenbusStateConnected","xenbus_state_XenbusStateInitWait","xenbus_state_XenbusStateInitialised","xenbus_state_XenbusStateInitialising","xenbus_state_XenbusStateReconfigured","xenbus_state_XenbusStateReconfiguring","xenbus_state_XenbusStateUnknown","xencons_interface","xenstore_domain_interface","xs_watch_type","xs_watch_type_XS_WATCH_PATH","xs_watch_type_XS_WATCH_TOKEN","xsd_errors","xsd_sockmsg","xsd_sockmsg_type","xsd_sockmsg_type_XS_CONTROL","xsd_sockmsg_type_XS_DIRECTORY","xsd_sockmsg_type_XS_DIRECTORY_PART","xsd_sockmsg_type_XS_ERROR","xsd_sockmsg_type_XS_GET_DOMAIN_PATH","xsd_sockmsg_type_XS_GET_PERMS","xsd_sockmsg_type_XS_INTRODUCE","xsd_sockmsg_type_XS_INVALID","xsd_sockmsg_type_XS_IS_DOMAIN_INTRODUCED","xsd_sockmsg_type_XS_MKDIR","xsd_sockmsg_type_XS_READ","xsd_sockmsg_type_XS_RELEASE","xsd_sockmsg_type_XS_RESET_WATCHES","xsd_sockmsg_type_XS_RESUME","xsd_sockmsg_type_XS_RM","xsd_sockmsg_type_XS_SET_PERMS","xsd_sockmsg_type_XS_SET_TARGET","xsd_sockmsg_type_XS_TRANSACTION_END","xsd_sockmsg_type_XS_TRANSACTION_START","xsd_sockmsg_type_XS_TYPE_COUNT","xsd_sockmsg_type_XS_UNWATCH","xsd_sockmsg_type_XS_WATCH","xsd_sockmsg_type_XS_WATCH_EVENT","xsd_sockmsg_type_XS_WRITE"],"q":["xen_sysdeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeif":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,[[["",0]],["__fsid_t",3]],[[["",0]],["iret_context",3]],[[["",0]],["cpu_user_regs",3]],[[["",0]],["cpu_user_regs__bindgen_ty_1",19]],[[["",0]],["cpu_user_regs__bindgen_ty_2",19]],[[["",0]],["cpu_user_regs__bindgen_ty_3",19]],[[["",0]],["cpu_user_regs__bindgen_ty_4",19]],[[["",0]],["cpu_user_regs__bindgen_ty_5",19]],[[["",0]],["cpu_user_regs__bindgen_ty_6",19]],[[["",0]],["cpu_user_regs__bindgen_ty_7",19]],[[["",0]],["cpu_user_regs__bindgen_ty_8",19]],[[["",0]],["cpu_user_regs__bindgen_ty_9",19]],[[["",0]],["cpu_user_regs__bindgen_ty_10",19]],[[["",0]],["arch_vcpu_info",3]],[[["",0]],["trap_info",3]],[[["",0]],["vcpu_guest_context",3]],[[["",0]],["vcpu_guest_context__bindgen_ty_1",3]],[[["",0]],["arch_shared_info",3]],[[["",0]],["mmuext_op",3]],[[["",0]],["mmuext_op__bindgen_ty_1",19]],[[["",0]],["mmuext_op__bindgen_ty_2",19]],[[["",0]],["mmu_update",3]],[[["",0]],["multicall_entry",3]],[[["",0]],["vcpu_time_info",3]],[[["",0]],["vcpu_info",3]],[[["",0]],["shared_info",3]],[[["",0]],["start_info",3]],[[["",0]],["start_info__bindgen_ty_1",19]],[[["",0]],["start_info__bindgen_ty_1__bindgen_ty_1",3]],[[["",0]],["start_info__bindgen_ty_1__bindgen_ty_2",3]],[[["",0]],["xen_multiboot_mod_list",3]],[[["",0]],["dom0_vga_console_info",3]],[[["",0]],["dom0_vga_console_info__bindgen_ty_1",19]],[[["",0]],["dom0_vga_console_info__bindgen_ty_1__bindgen_ty_1",3]],[[["",0]],["dom0_vga_console_info__bindgen_ty_1__bindgen_ty_2",3]],[[["",0]],["xen_uuid_t",3]],[[["",0]],["evtchn_alloc_unbound",3]],[[["",0]],["evtchn_bind_interdomain",3]],[[["",0]],["evtchn_bind_virq",3]],[[["",0]],["evtchn_bind_pirq",3]],[[["",0]],["evtchn_bind_ipi",3]],[[["",0]],["evtchn_close",3]],[[["",0]],["evtchn_send",3]],[[["",0]],["evtchn_status",3]],[[["",0]],["evtchn_status__bindgen_ty_1",19]],[[["",0]],["evtchn_status__bindgen_ty_1__bindgen_ty_1",3]],[[["",0]],["evtchn_status__bindgen_ty_1__bindgen_ty_2",3]],[[["",0]],["evtchn_bind_vcpu",3]],[[["",0]],["evtchn_unmask",3]],[[["",0]],["evtchn_reset",3]],[[["",0]],["evtchn_init_control",3]],[[["",0]],["evtchn_expand_array",3]],[[["",0]],["evtchn_set_priority",3]],[[["",0]],["evtchn_op",3]],[[["",0]],["evtchn_op__bindgen_ty_1",19]],[[["",0]],["evtchn_fifo_control_block",3]],[[["",0]],["sched_shutdown",3]],[[["",0]],["sched_poll",3]],[[["",0]],["sched_remote_shutdown",3]],[[["",0]],["sched_watchdog",3]],[[["",0]],["sched_pin_override",3]],[[["",0]],["grant_entry",3]],[[["",0]],["gnttab_map_grant_ref",3]],[[["",0]],["gnttab_unmap_grant_ref",3]],[[["",0]],["gnttab_setup_table",3]],[[["",0]],["gnttab_dump_table",3]],[[["",0]],["gnttab_transfer",3]],[[["",0]],["gnttab_copy",3]],[[["",0]],["gnttab_copy_gnttab_copy_ptr",3]],[[["",0]],["gnttab_copy_gnttab_copy_ptr__bindgen_ty_1",19]],[[["",0]],["gnttab_query_size",3]],[[["",0]],["gnttab_unmap_and_replace",3]],[[["",0]],["xen_netif_ctrl_request",3]],[[["",0]],["xen_netif_ctrl_response",3]],[[["",0]],["xen_netif_gref",3]],[[["",0]],["xen_netif_ctrl_sring_entry",19]],[[["",0]],["xen_netif_ctrl_sring",3]],[[["",0]],["xen_netif_ctrl_sring__bindgen_ty_1",19]],[[["",0]],["xen_netif_ctrl_sring__bindgen_ty_1__bindgen_ty_1",3]],[[["",0]],["xen_netif_ctrl_sring__bindgen_ty_1__bindgen_ty_2",3]],[[["",0]],["xen_netif_ctrl_front_ring",3]],[[["",0]],["xen_netif_ctrl_back_ring",3]],[[["",0]],["netif_tx_request",3]],[[["",0]],["netif_extra_info",3]],[[["",0]],["netif_extra_info__bindgen_ty_1",19]],[[["",0]],["netif_extra_info__bindgen_ty_1__bindgen_ty_1",3]],[[["",0]],["netif_extra_info__bindgen_ty_1__bindgen_ty_2",3]],[[["",0]],["netif_extra_info__bindgen_ty_1__bindgen_ty_3",3]],[[["",0]],["netif_tx_response",3]],[[["",0]],["netif_rx_request",3]],[[["",0]],["netif_rx_response",3]],[[["",0]],["netif_tx_sring_entry",19]],[[["",0]],["netif_tx_sring",3]],[[["",0]],["netif_tx_sring__bindgen_ty_1",19]],[[["",0]],["netif_tx_sring__bindgen_ty_1__bindgen_ty_1",3]],[[["",0]],["netif_tx_sring__bindgen_ty_1__bindgen_ty_2",3]],[[["",0]],["netif_tx_front_ring",3]],[[["",0]],["netif_tx_back_ring",3]],[[["",0]],["netif_rx_sring_entry",19]],[[["",0]],["netif_rx_sring",3]],[[["",0]],["netif_rx_sring__bindgen_ty_1",19]],[[["",0]],["netif_rx_sring__bindgen_ty_1__bindgen_ty_1",3]],[[["",0]],["netif_rx_sring__bindgen_ty_1__bindgen_ty_2",3]],[[["",0]],["netif_rx_front_ring",3]],[[["",0]],["netif_rx_back_ring",3]],[[["",0]],["xencons_interface",3]],[[["",0]],["xsd_errors",3]],[[["",0]],["xsd_sockmsg",3]],[[["",0]],["xenstore_domain_interface",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"cpu_user_regs"],[3,"xen_netif_ctrl_sring"],[3,"netif_tx_sring"],[3,"netif_rx_sring"],[3,"__fsid_t"],[19,"cpu_user_regs__bindgen_ty_3"],[19,"cpu_user_regs__bindgen_ty_1"],[19,"cpu_user_regs__bindgen_ty_2"],[19,"cpu_user_regs__bindgen_ty_4"],[19,"cpu_user_regs__bindgen_ty_7"],[19,"cpu_user_regs__bindgen_ty_5"],[19,"cpu_user_regs__bindgen_ty_9"],[19,"cpu_user_regs__bindgen_ty_8"],[19,"cpu_user_regs__bindgen_ty_6"],[19,"cpu_user_regs__bindgen_ty_10"],[3,"evtchn_init_control"],[3,"evtchn_fifo_control_block"],[3,"xen_uuid_t"],[3,"netif_extra_info__bindgen_ty_1__bindgen_ty_2"],[3,"trap_info"],[3,"netif_extra_info__bindgen_ty_1__bindgen_ty_3"],[19,"evtchn_op__bindgen_ty_1"],[3,"vcpu_info"],[3,"shared_info"],[3,"mmuext_op"],[3,"multicall_entry"],[3,"evtchn_expand_array"],[3,"dom0_vga_console_info__bindgen_ty_1__bindgen_ty_2"],[3,"iret_context"],[3,"arch_vcpu_info"],[3,"vcpu_guest_context"],[3,"vcpu_guest_context__bindgen_ty_1"],[3,"arch_shared_info"],[19,"mmuext_op__bindgen_ty_1"],[19,"mmuext_op__bindgen_ty_2"],[3,"mmu_update"],[3,"vcpu_time_info"],[3,"start_info"],[19,"start_info__bindgen_ty_1"],[3,"start_info__bindgen_ty_1__bindgen_ty_1"],[3,"start_info__bindgen_ty_1__bindgen_ty_2"],[3,"xen_multiboot_mod_list"],[3,"dom0_vga_console_info"],[19,"dom0_vga_console_info__bindgen_ty_1"],[3,"dom0_vga_console_info__bindgen_ty_1__bindgen_ty_1"],[3,"evtchn_alloc_unbound"],[3,"evtchn_bind_interdomain"],[3,"evtchn_bind_virq"],[3,"evtchn_bind_pirq"],[3,"evtchn_bind_ipi"],[3,"evtchn_close"],[3,"evtchn_send"],[3,"evtchn_status"],[19,"evtchn_status__bindgen_ty_1"],[3,"evtchn_status__bindgen_ty_1__bindgen_ty_1"],[3,"evtchn_status__bindgen_ty_1__bindgen_ty_2"],[3,"evtchn_bind_vcpu"],[3,"evtchn_unmask"],[3,"evtchn_reset"],[3,"evtchn_set_priority"],[3,"evtchn_op"],[3,"sched_shutdown"],[3,"sched_poll"],[3,"sched_remote_shutdown"],[3,"sched_watchdog"],[3,"sched_pin_override"],[3,"grant_entry"],[3,"gnttab_map_grant_ref"],[3,"gnttab_unmap_grant_ref"],[3,"gnttab_setup_table"],[3,"gnttab_dump_table"],[3,"gnttab_transfer"],[3,"gnttab_copy"],[3,"gnttab_copy_gnttab_copy_ptr"],[19,"gnttab_copy_gnttab_copy_ptr__bindgen_ty_1"],[3,"gnttab_query_size"],[3,"gnttab_unmap_and_replace"],[3,"xen_netif_ctrl_request"],[3,"xen_netif_ctrl_response"],[3,"xen_netif_gref"],[19,"xen_netif_ctrl_sring_entry"],[19,"xen_netif_ctrl_sring__bindgen_ty_1"],[3,"xen_netif_ctrl_sring__bindgen_ty_1__bindgen_ty_1"],[3,"xen_netif_ctrl_sring__bindgen_ty_1__bindgen_ty_2"],[3,"xen_netif_ctrl_front_ring"],[3,"xen_netif_ctrl_back_ring"],[3,"netif_tx_request"],[3,"netif_extra_info"],[19,"netif_extra_info__bindgen_ty_1"],[3,"netif_extra_info__bindgen_ty_1__bindgen_ty_1"],[3,"netif_tx_response"],[3,"netif_rx_request"],[3,"netif_rx_response"],[19,"netif_tx_sring_entry"],[19,"netif_tx_sring__bindgen_ty_1"],[3,"netif_tx_sring__bindgen_ty_1__bindgen_ty_1"],[3,"netif_tx_sring__bindgen_ty_1__bindgen_ty_2"],[3,"netif_tx_front_ring"],[3,"netif_tx_back_ring"],[19,"netif_rx_sring_entry"],[19,"netif_rx_sring__bindgen_ty_1"],[3,"netif_rx_sring__bindgen_ty_1__bindgen_ty_1"],[3,"netif_rx_sring__bindgen_ty_1__bindgen_ty_2"],[3,"netif_rx_front_ring"],[3,"netif_rx_back_ring"],[3,"xencons_interface"],[3,"xsd_errors"],[3,"xsd_sockmsg"],[3,"xenstore_domain_interface"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
